[{"/Users/100s/Documents/GitHub/frontend/src/index.js":"1","/Users/100s/Documents/GitHub/frontend/src/App.js":"2","/Users/100s/Documents/GitHub/frontend/src/reportWebVitals.js":"3","/Users/100s/Documents/GitHub/frontend/src/components/Navbar/index.js":"4","/Users/100s/Documents/GitHub/frontend/src/components/Navbar/NavbarElements.js":"5","/Users/100s/Documents/GitHub/frontend/src/pages/SignUp/SignUpForm.js":"6","/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/checkbox.js":"7","/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/Checkbox.js":"8","/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/styles.js":"9","/Users/100s/Documents/GitHub/frontend/src/components/Button/Button.js":"10","/Users/100s/Documents/GitHub/frontend/src/components/Button/styles.js":"11","/Users/100s/Documents/GitHub/frontend/src/pages/Login/LoginForm.js":"12"},{"size":500,"mtime":1645877743775,"results":"13","hashOfConfig":"14"},{"size":564,"mtime":1646059981415,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1645877743776,"results":"16","hashOfConfig":"14"},{"size":493,"mtime":1645891082146,"results":"17","hashOfConfig":"14"},{"size":1810,"mtime":1646060921279,"results":"18","hashOfConfig":"14"},{"size":4726,"mtime":1646059516252,"results":"19","hashOfConfig":"14"},{"size":477,"mtime":1645977693022,"results":"20","hashOfConfig":"14"},{"size":477,"mtime":1645977693022,"results":"21","hashOfConfig":"14"},{"size":859,"mtime":1646012709640,"results":"22","hashOfConfig":"14"},{"size":234,"mtime":1646014450713,"results":"23","hashOfConfig":"14"},{"size":278,"mtime":1646014509397,"results":"24","hashOfConfig":"14"},{"size":2601,"mtime":1646060993456,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1p5uymf",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"/Users/100s/Documents/GitHub/frontend/src/index.js",[],[],["67","68"],"/Users/100s/Documents/GitHub/frontend/src/App.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/reportWebVitals.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/components/Navbar/index.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/components/Navbar/NavbarElements.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/pages/SignUp/SignUpForm.js",["69"],[],"import React from 'react';\nimport './style.css';\nimport Checkbox from '../../components/Checkbox/Checkbox';\nimport {\n  NavBtn,\n  LoginBtnLink,\n  } from '../../components/Navbar/NavbarElements';\n\nclass SignUpForm extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        fields: {},\n        errors: {}\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n      this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n\n    };\n\n    handleChange(e) {\n      let fields = this.state.fields;\n      fields[e.target.name] = e.target.value;\n      this.setState({\n        fields\n      });\n\n    }\n\n    submituserRegistrationForm(e) {\n      e.preventDefault();\n      if (this.validateForm()) {\n          let fields = {};\n          fields[\"username\"] = \"\";\n          fields[\"emailid\"] = \"\";\n          fields[\"mobileno\"] = \"\";\n          fields[\"password\"] = \"\";\n          this.setState({fields:fields});\n          alert(\"Form submitted\");\n      }\n\n    }\n\n    validateForm() {\n\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n\n      if (!fields[\"username\"]) {\n        formIsValid = false;\n        errors[\"username\"] = \"*Please enter your full name.\";\n      }\n\n      if (typeof fields[\"username\"] !== \"undefined\") {\n        if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\n          formIsValid = false;\n          errors[\"username\"] = \"*Please enter alphabet characters only.\";\n        }\n      }\n\n      if (!fields[\"emailid\"]) {\n        formIsValid = false;\n        errors[\"emailid\"] = \"*Please enter your email address.\";\n      }\n\n      if (typeof fields[\"emailid\"] !== \"undefined\") {\n        //regular expression for email validation\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n        if (!pattern.test(fields[\"emailid\"])) {\n          formIsValid = false;\n          errors[\"emailid\"] = \"*Please enter valid email address.\";\n        }\n      }\n\n      if (!fields[\"password\"]) {\n        formIsValid = false;\n        errors[\"password\"] = \"*Please enter your password.\";\n      }\n\n      if (!fields[\"confirm_password\"]) {\n        formIsValid = false;\n        errors[\"confirm_password\"] = \"*Please enter your confirm password.\";\n      }\n\n      if  ((typeof fields[\"confirm_password\"] !== \"undefined\") && (typeof fields[\"password\"] !== \"undefined\")) {\n        if (fields[\"password\"] != fields[\"confirm_password\"]) {\n          formIsValid = false;\n          errors[\"confirm_password\"] = \"*Passwords don't match\"\n        }\n      }\n\n\n\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n\n\n    }\n\n\n\n  render() {\n    return (\n    <div>\n     <div id=\"register\">\n        <h3>Create an account</h3>\n          <form method=\"post\"  name=\"userRegistrationForm\"  onSubmit= {this.submituserRegistrationForm} >\n          <label>Full legal name</label>\n          <input type=\"text\" name=\"username\" placeholder=\"Enter your full names\" value={this.state.fields.username} onChange={this.handleChange} />\n          <div className=\"errorMsg\">{this.state.errors.username}</div>\n          <label>Email address</label>\n          <input type=\"text\" name=\"emailid\" placeholder=\"Enter your email address\" value={this.state.fields.emailid} onChange={this.handleChange}  />\n          <div className=\"errorMsg\">{this.state.errors.emailid}</div>\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" value={this.state.fields.password} onChange={this.handleChange} />\n          <div className=\"errorMsg\">{this.state.errors.password}</div>\n          <label>Password Confirm</label>\n          <input type=\"password\" name=\"confirm_password\" placeholder=\"Enter your confirm password\" value={this.state.fields.confirm_password} onChange={this.handleChange} />\n          <div className=\"errorMsg\">{this.state.errors.confirm_password}</div>\n\n\n          <label>\n            <Checkbox\n              checked={this.state.checked}\n              onChange={this.handleCheckboxChange}\n            />\n            <span style={{ marginLeft: 8 }}>I have read the Privacy Acknowledgement.</span>\n        </label>\n        <div>\n          <NavBtn>\n            <LoginBtnLink type=\"submit\" to='/login'>Login</LoginBtnLink>\n            <input type=\"submit\" className=\"button\"  value=\"Create an account\"/>\n          </NavBtn>\n        </div>\n        </form>\n    </div>\n</div>\n\n      );\n  }\n\n\n}\n\n\nexport default SignUpForm;","/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/checkbox.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/Checkbox.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/styles.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/components/Button/Button.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/components/Button/styles.js",["70"],[],"import styled from 'styled-components';\nimport React from 'react';\n\nexport const Btn = styled.button`\n  color: ${props => props.textcolor};\n  outline: none;\n  box-shadow: none;\n  background-color ${props => props.color};\n  height: 45px;\n  width: 100%;\n  border-radius: 99px;\n\n`;",["71","72"],"/Users/100s/Documents/GitHub/frontend/src/pages/Login/LoginForm.js",["73"],[],"import React from 'react';\nimport './styles.css';\nimport Checkbox from '../../components/Checkbox/Checkbox';\nimport {\n  NavBtn,\n  LoginBtnLink,\n  } from '../../components/Navbar/NavbarElements';\n\nclass LoginForm extends React.Component {\n\n      constructor() {\n      super();\n      this.state = {\n        fields: {},\n        errors: {}\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n      this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n\n    };\n\n    handleChange(e) {\n      let fields = this.state.fields;\n      fields[e.target.name] = e.target.value;\n      this.setState({\n        fields\n      });\n\n    }\n\n    submituserRegistrationForm(e) {\n      e.preventDefault();\n      if (this.validateForm()) {\n          let fields = {};\n          fields[\"username\"] = \"\";\n          fields[\"emailid\"] = \"\";\n          fields[\"mobileno\"] = \"\";\n          fields[\"password\"] = \"\";\n          this.setState({fields:fields});\n          alert(\"Form submitted\");\n      }\n\n    }\n\n    validateForm() {\n\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n\n\n    }\n\n\n  render() {\n    return (\n    <div>\n     <div id=\"register\">\n        <h3>Login</h3>\n          <form method=\"post\"  name=\"userRegistrationForm\"  onSubmit= {this.submituserRegistrationForm} >\n          \n          <label>Email address</label>\n          <input type=\"text\" name=\"emailid\" placeholder=\"Enter your email address\" value={this.state.fields.emailid} onChange={this.handleChange}  />\n          <div className=\"errorMsg\">{this.state.errors.emailid}</div>\n          \n          <label>Password</label>\n          <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" value={this.state.fields.password} onChange={this.handleChange} />\n          <div className=\"errorMsg\">{this.state.errors.password}</div>\n          \n\n          <NavBtn>\n            <div>\n              <Checkbox\n                checked={this.state.checked}\n                onChange={this.handleCheckboxChange}\n              />\n              <span style={{ marginLeft: 8 }}>Remember me</span>\n            </div>\n            <span style={{ color: '#3CB371'}}>Reset Password?</span>\n        </NavBtn>\n        <div>\n          <NavBtn>\n            <LoginBtnLink type=\"submit\" to='/signup'>Create an account</LoginBtnLink>\n            <input type=\"submit\" className=\"button\"  value=\"Login\"/>\n          </NavBtn>\n        </div>\n        </form>\n    </div>\n</div>\n\n      );\n  }\n\n\n}\n\n\nexport default LoginForm;",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":88,"column":32,"nodeType":"80","messageId":"81","endLine":88,"endColumn":34},{"ruleId":"82","severity":1,"message":"83","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":13},{"ruleId":"74","replacedBy":"86"},{"ruleId":"76","replacedBy":"87"},{"ruleId":"82","severity":1,"message":"88","line":48,"column":11,"nodeType":"84","messageId":"85","endLine":48,"endColumn":17},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar",["89"],["90"],"'fields' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]