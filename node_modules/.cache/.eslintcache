[{"/Users/100s/Documents/GitHub/frontend/src/index.js":"1","/Users/100s/Documents/GitHub/frontend/src/App.js":"2","/Users/100s/Documents/GitHub/frontend/src/reportWebVitals.js":"3","/Users/100s/Documents/GitHub/frontend/src/components/Navbar/index.js":"4","/Users/100s/Documents/GitHub/frontend/src/components/Navbar/NavbarElements.js":"5","/Users/100s/Documents/GitHub/frontend/src/pages/SignUp/SignUpForm.js":"6","/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/checkbox.js":"7","/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/Checkbox.js":"8","/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/styles.js":"9","/Users/100s/Documents/GitHub/frontend/src/components/Button/Button.js":"10","/Users/100s/Documents/GitHub/frontend/src/pages/Login/LoginForm.js":"11","/Users/100s/Documents/GitHub/frontend/src/api/server.js":"12"},{"size":500,"mtime":1645877743775,"results":"13","hashOfConfig":"14"},{"size":568,"mtime":1646135147281,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1645877743776,"results":"16","hashOfConfig":"14"},{"size":498,"mtime":1646063596644,"results":"17","hashOfConfig":"14"},{"size":1933,"mtime":1646064093902,"results":"18","hashOfConfig":"14"},{"size":5123,"mtime":1646136854200,"results":"19","hashOfConfig":"14"},{"size":477,"mtime":1645977693022,"results":"20","hashOfConfig":"14"},{"size":477,"mtime":1645977693022,"results":"21","hashOfConfig":"14"},{"size":859,"mtime":1646012709640,"results":"22","hashOfConfig":"14"},{"size":234,"mtime":1646014450713,"results":"23","hashOfConfig":"14"},{"size":1974,"mtime":1646136522971,"results":"24","hashOfConfig":"14"},{"size":730,"mtime":1646136829390,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1p5uymf",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"29"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/100s/Documents/GitHub/frontend/src/index.js",[],[],["66","67"],"/Users/100s/Documents/GitHub/frontend/src/App.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/reportWebVitals.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/components/Navbar/index.js",["68"],[],"import React from 'react';\nimport {\nNav,\nNavLink,\nNavMenu,\nNavBtn,\nNavBtnLink,\nLogoDiv,\nWrap\n} from './NavbarElements';\n\nconst Navbar = () => {\nreturn (\n\t<>\n\t<Nav>\n\t\t<NavMenu>\n\t\t\t<LogoDiv/>\n\t\t\t<NavLink to='/solution' activeStyle>\n\t\t\t\tSolution\n\t\t\t</NavLink>\n\t\t\t<NavLink to='/question' activeStyle>\n\t\t\t\tQuestion\n\t\t\t</NavLink>\n\t\t</NavMenu>\n\t\t<NavBtn>\n\t\t\t<NavBtnLink to='/signup'>Sign Up</NavBtnLink>\n\t\t\t<NavBtnLink to='/login'>Login</NavBtnLink>\n\t\t</NavBtn>\n\t</Nav>\n\t</>\n);\n};\n\nexport default Navbar;\n","/Users/100s/Documents/GitHub/frontend/src/components/Navbar/NavbarElements.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/pages/SignUp/SignUpForm.js",["69"],[],"import React from 'react';\nimport * as api from '../../api/server';\nimport './style.css';\nimport Checkbox from '../../components/Checkbox/Checkbox';\nimport {\n  LoginBtnLink,\n  Wrap\n  } from '../../components/Navbar/NavbarElements';\n\n\nclass SignUpForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        fields: {},\n        errors: {}\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n      this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n\n    };\n\n    handleChange = event =>  {\n      let fields = this.state.fields;\n      fields[event.target.name] = event.target.value;\n      this.setState({\n        fields\n      });\n\n    }\n\n    submituserRegistrationForm = async(event) => {\n      event.preventDefault();\n      if (this.validateForm()) {\n          let fields = {};\n          fields[\"username\"] = this.state.fields.username;\n          fields[\"emailid\"] = this.state.fields.emailid;\n          fields[\"password\"] = this.state.fields.password;\n          this.setState({fields:fields});\n\n          const { history } = this.props;\n          const token = await api.createUser(fields);\n          if(token.non_field_errors){\n              token.non_field_errors.map((event) => alert(event))\n          } else{\n              history.push('/');\n          }\n\n          alert(\"Form submitted\");\n      }\n\n    }\n\n    validateForm() {\n\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n\n      if (!fields[\"username\"]) {\n        formIsValid = false;\n        errors[\"username\"] = \"*Please enter your full name.\";\n      }\n\n      if (typeof fields[\"username\"] !== \"undefined\") {\n        if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\n          formIsValid = false;\n          errors[\"username\"] = \"*Please enter alphabet characters only.\";\n        }\n      }\n\n      if (!fields[\"emailid\"]) {\n        formIsValid = false;\n        errors[\"emailid\"] = \"*Please enter your email address.\";\n      }\n\n      if (typeof fields[\"emailid\"] !== \"undefined\") {\n        //regular expression for email validation\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n        if (!pattern.test(fields[\"emailid\"])) {\n          formIsValid = false;\n          errors[\"emailid\"] = \"*Please enter valid email address.\";\n        }\n      }\n\n      if (!fields[\"password\"]) {\n        formIsValid = false;\n        errors[\"password\"] = \"*Please enter your password.\";\n      }\n\n      if (!fields[\"confirm_password\"]) {\n        formIsValid = false;\n        errors[\"confirm_password\"] = \"*Please enter your confirm password.\";\n      }\n\n      if  ((typeof fields[\"confirm_password\"] !== \"undefined\") && (typeof fields[\"password\"] !== \"undefined\")) {\n        if (fields[\"password\"] != fields[\"confirm_password\"]) {\n          formIsValid = false;\n          errors[\"confirm_password\"] = \"*Passwords don't match\"\n        }\n      }\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n\n  render() {\n    return (\n    <div>\n     <div id=\"register\">\n        <h3>Create an account</h3>\n          <form method=\"post\"  name=\"userRegistrationForm\"  onSubmit= {this.submituserRegistrationForm} >\n          \n          <label>Full legal name</label>\n          <input type=\"text\" name=\"username\" placeholder=\"Enter your full names\" value={this.state.fields.username} onChange={this.handleChange} />\n          <div className=\"errorMsg\">{this.state.errors.username}</div>\n          \n          <label>Email address</label>\n          <input type=\"text\" name=\"emailid\" placeholder=\"Enter your email address\" value={this.state.fields.emailid} onChange={this.handleChange}  />\n          <div className=\"errorMsg\">{this.state.errors.emailid}</div>\n          \n          <label>Password</label>\n          <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" value={this.state.fields.password} onChange={this.handleChange} />\n          <div className=\"errorMsg\">{this.state.errors.password}</div>\n          \n          <label>Password Confirm</label>\n          <input type=\"password\" name=\"confirm_password\" placeholder=\"Enter your confirm password\" value={this.state.fields.confirm_password} onChange={this.handleChange} />\n          <div className=\"errorMsg\">{this.state.errors.confirm_password}</div>\n\n\n          <label>\n            <Checkbox\n              // checked={this.state.checked}\n              // onChange={this.handleCheckboxChange}\n            />\n            <span style={{ marginLeft: 8 }}>I have read the Privacy Acknowledgement.</span>\n          </label>\n          <Wrap>\n            <LoginBtnLink type=\"submit\" to='/login'>Login</LoginBtnLink>\n            <input type=\"submit\" className=\"button\"  value=\"Create an account\"/>\n          </Wrap>\n        </form>\n    </div>\n</div>\n\n      );\n  }\n\n\n}\n\n\nexport default SignUpForm;","/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/checkbox.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/Checkbox.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/styles.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/components/Button/Button.js",[],[],"/Users/100s/Documents/GitHub/frontend/src/pages/Login/LoginForm.js",["70"],[],"import React, {useState} from 'react';\nimport * as api from '../../api/server';\nimport './styles.css';\nimport Checkbox from '../../components/Checkbox/Checkbox';\n\nimport {\n  NavBtn,\n  LoginBtnLink,\n  Wrap\n  } from '../../components/Navbar/NavbarElements';\n\n\nexport function LoginForm(props){\n  const [input, setInput] = useState({\n      emailid: '',\n      password: '',\n  });\n\n  const setInputData = (key, data) => {\n      setInput({\n          ...input,\n          [key]: data,\n      })\n  }\n\n  const login = async () => {\n      const { history } = props;\n      const token = await api.createToken(input.emailid, input.password);\n      if(token.non_field_errors){\n          token.non_field_errors.map((e) => alert(e))\n      } else{\n          console.log(token);\n          localStorage.setItem('token', token.token);\n          localStorage.setItem('emailid', input.emailid);\n          localStorage.setItem('password', input.password);\n          // history.push('/');\n      }\n  };\n\n  return <>\n    <div id=\"register\">\n        <h3>Login</h3>\n          \n          <label>Email address</label>\n          <input type=\"text\" name={\"emailid\"} placeholder=\"Enter your email address\" onChange={(e) => setInputData('username', e.target.value)}/>\n          \n          <label>Password</label>\n          <input type=\"password\" name={\"password\"} placeholder=\"Enter your password\" onChange={(e) => setInputData('password', e.target.value)} />\n          \n\n          <NavBtn>\n            <div>\n              <Checkbox\n                // checked={}\n                // onChange={}\n              />\n              <span style={{ marginLeft: 8 }}>Remember me</span>\n            </div>\n            <span style={{ color: '#3CB371'}}>Reset Password?</span>\n        </NavBtn>\n\n        <Wrap>\n          <NavBtn>\n            <LoginBtnLink type=\"submit\" to='/signup'>Create an account</LoginBtnLink>\n            <button onClick={login}>Login</button>\n          </NavBtn>\n        </Wrap>\n    </div>\n  </>\n}\n","/Users/100s/Documents/GitHub/frontend/src/api/server.js",[],[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":9,"column":1,"nodeType":"77","messageId":"78","endLine":9,"endColumn":5},{"ruleId":"79","severity":1,"message":"80","line":98,"column":32,"nodeType":"81","messageId":"82","endLine":98,"endColumn":34},{"ruleId":"75","severity":1,"message":"83","line":27,"column":15,"nodeType":"77","messageId":"78","endLine":27,"endColumn":22},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Wrap' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]