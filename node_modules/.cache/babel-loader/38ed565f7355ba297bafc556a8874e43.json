{"ast":null,"code":"var formatDistanceLocale = {\n  lessThanXSeconds: {\n    past: '{{count}} წამზე ნაკლები ხნის წინ',\n    present: '{{count}} წამზე ნაკლები',\n    future: '{{count}} წამზე ნაკლებში'\n  },\n  xSeconds: {\n    past: '{{count}} წამის წინ',\n    present: '{{count}} წამი',\n    future: '{{count}} წამში'\n  },\n  halfAMinute: {\n    past: 'ნახევარი წუთის წინ',\n    present: 'ნახევარი წუთი',\n    future: 'ნახევარი წუთში'\n  },\n  lessThanXMinutes: {\n    past: '{{count}} წუთზე ნაკლები ხნის წინ',\n    present: '{{count}} წუთზე ნაკლები',\n    future: '{{count}} წუთზე ნაკლებში'\n  },\n  xMinutes: {\n    past: '{{count}} წუთის წინ',\n    present: '{{count}} წუთი',\n    future: '{{count}} წუთში'\n  },\n  aboutXHours: {\n    past: 'დაახლოებით {{count}} საათის წინ',\n    present: 'დაახლოებით {{count}} საათი',\n    future: 'დაახლოებით {{count}} საათში'\n  },\n  xHours: {\n    past: '{{count}} საათის წინ',\n    present: '{{count}} საათი',\n    future: '{{count}} საათში'\n  },\n  xDays: {\n    past: '{{count}} დღის წინ',\n    present: '{{count}} დღე',\n    future: '{{count}} დღეში'\n  },\n  aboutXWeeks: {\n    past: 'დაახლოებით {{count}} კვირას წინ',\n    present: 'დაახლოებით {{count}} კვირა',\n    future: 'დაახლოებით {{count}} კვირაში'\n  },\n  xWeeks: {\n    past: '{{count}} კვირას კვირა',\n    present: '{{count}} კვირა',\n    future: '{{count}} კვირაში'\n  },\n  aboutXMonths: {\n    past: 'დაახლოებით {{count}} თვის წინ',\n    present: 'დაახლოებით {{count}} თვე',\n    future: 'დაახლოებით {{count}} თვეში'\n  },\n  xMonths: {\n    past: '{{count}} თვის წინ',\n    present: '{{count}} თვე',\n    future: '{{count}} თვეში'\n  },\n  aboutXYears: {\n    past: 'დაახლოებით {{count}} წლის წინ',\n    present: 'დაახლოებით {{count}} წელი',\n    future: 'დაახლოებით {{count}} წელში'\n  },\n  xYears: {\n    past: '{{count}} წლის წინ',\n    present: '{{count}} წელი',\n    future: '{{count}} წელში'\n  },\n  overXYears: {\n    past: '{{count}} წელზე მეტი ხნის წინ',\n    present: '{{count}} წელზე მეტი',\n    future: '{{count}} წელზე მეტი ხნის შემდეგ'\n  },\n  almostXYears: {\n    past: 'თითქმის {{count}} წლის წინ',\n    present: 'თითქმის {{count}} წელი',\n    future: 'თითქმის {{count}} წელში'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (options.addSuffix && options.comparison > 0) {\n    result = formatDistanceLocale[token].future.replace('{{count}}', count);\n  } else if (options.addSuffix && options.comparison <= 0) {\n    result = formatDistanceLocale[token].past.replace('{{count}}', count);\n  } else {\n    result = formatDistanceLocale[token].present.replace('{{count}}', count);\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/kimchanmi/Capstone-Kiwi/frontend/node_modules/date-fns/esm/locale/ka/_lib/formatDistance/index.js"],"names":["formatDistanceLocale","lessThanXSeconds","past","present","future","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","options","result","addSuffix","comparison","replace"],"mappings":"AAAA,IAAIA,oBAAoB,GAAG;AACzBC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,IAAI,EAAE,kCADU;AAEhBC,IAAAA,OAAO,EAAE,yBAFO;AAGhBC,IAAAA,MAAM,EAAE;AAHQ,GADO;AAMzBC,EAAAA,QAAQ,EAAE;AACRH,IAAAA,IAAI,EAAE,qBADE;AAERC,IAAAA,OAAO,EAAE,gBAFD;AAGRC,IAAAA,MAAM,EAAE;AAHA,GANe;AAWzBE,EAAAA,WAAW,EAAE;AACXJ,IAAAA,IAAI,EAAE,oBADK;AAEXC,IAAAA,OAAO,EAAE,eAFE;AAGXC,IAAAA,MAAM,EAAE;AAHG,GAXY;AAgBzBG,EAAAA,gBAAgB,EAAE;AAChBL,IAAAA,IAAI,EAAE,kCADU;AAEhBC,IAAAA,OAAO,EAAE,yBAFO;AAGhBC,IAAAA,MAAM,EAAE;AAHQ,GAhBO;AAqBzBI,EAAAA,QAAQ,EAAE;AACRN,IAAAA,IAAI,EAAE,qBADE;AAERC,IAAAA,OAAO,EAAE,gBAFD;AAGRC,IAAAA,MAAM,EAAE;AAHA,GArBe;AA0BzBK,EAAAA,WAAW,EAAE;AACXP,IAAAA,IAAI,EAAE,iCADK;AAEXC,IAAAA,OAAO,EAAE,4BAFE;AAGXC,IAAAA,MAAM,EAAE;AAHG,GA1BY;AA+BzBM,EAAAA,MAAM,EAAE;AACNR,IAAAA,IAAI,EAAE,sBADA;AAENC,IAAAA,OAAO,EAAE,iBAFH;AAGNC,IAAAA,MAAM,EAAE;AAHF,GA/BiB;AAoCzBO,EAAAA,KAAK,EAAE;AACLT,IAAAA,IAAI,EAAE,oBADD;AAELC,IAAAA,OAAO,EAAE,eAFJ;AAGLC,IAAAA,MAAM,EAAE;AAHH,GApCkB;AAyCzBQ,EAAAA,WAAW,EAAE;AACXV,IAAAA,IAAI,EAAE,iCADK;AAEXC,IAAAA,OAAO,EAAE,4BAFE;AAGXC,IAAAA,MAAM,EAAE;AAHG,GAzCY;AA8CzBS,EAAAA,MAAM,EAAE;AACNX,IAAAA,IAAI,EAAE,wBADA;AAENC,IAAAA,OAAO,EAAE,iBAFH;AAGNC,IAAAA,MAAM,EAAE;AAHF,GA9CiB;AAmDzBU,EAAAA,YAAY,EAAE;AACZZ,IAAAA,IAAI,EAAE,+BADM;AAEZC,IAAAA,OAAO,EAAE,0BAFG;AAGZC,IAAAA,MAAM,EAAE;AAHI,GAnDW;AAwDzBW,EAAAA,OAAO,EAAE;AACPb,IAAAA,IAAI,EAAE,oBADC;AAEPC,IAAAA,OAAO,EAAE,eAFF;AAGPC,IAAAA,MAAM,EAAE;AAHD,GAxDgB;AA6DzBY,EAAAA,WAAW,EAAE;AACXd,IAAAA,IAAI,EAAE,+BADK;AAEXC,IAAAA,OAAO,EAAE,2BAFE;AAGXC,IAAAA,MAAM,EAAE;AAHG,GA7DY;AAkEzBa,EAAAA,MAAM,EAAE;AACNf,IAAAA,IAAI,EAAE,oBADA;AAENC,IAAAA,OAAO,EAAE,gBAFH;AAGNC,IAAAA,MAAM,EAAE;AAHF,GAlEiB;AAuEzBc,EAAAA,UAAU,EAAE;AACVhB,IAAAA,IAAI,EAAE,+BADI;AAEVC,IAAAA,OAAO,EAAE,sBAFC;AAGVC,IAAAA,MAAM,EAAE;AAHE,GAvEa;AA4EzBe,EAAAA,YAAY,EAAE;AACZjB,IAAAA,IAAI,EAAE,4BADM;AAEZC,IAAAA,OAAO,EAAE,wBAFG;AAGZC,IAAAA,MAAM,EAAE;AAHI;AA5EW,CAA3B;AAkFA,eAAe,SAASgB,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,OAAtC,EAA+C;AAC5DA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIC,MAAJ;;AAEA,MAAI,OAAOxB,oBAAoB,CAACqB,KAAD,CAA3B,KAAuC,QAA3C,EAAqD;AACnDG,IAAAA,MAAM,GAAGxB,oBAAoB,CAACqB,KAAD,CAA7B;AACD,GAFD,MAEO,IAAIE,OAAO,CAACE,SAAR,IAAqBF,OAAO,CAACG,UAAR,GAAqB,CAA9C,EAAiD;AACtDF,IAAAA,MAAM,GAAGxB,oBAAoB,CAACqB,KAAD,CAApB,CAA4BjB,MAA5B,CAAmCuB,OAAnC,CAA2C,WAA3C,EAAwDL,KAAxD,CAAT;AACD,GAFM,MAEA,IAAIC,OAAO,CAACE,SAAR,IAAqBF,OAAO,CAACG,UAAR,IAAsB,CAA/C,EAAkD;AACvDF,IAAAA,MAAM,GAAGxB,oBAAoB,CAACqB,KAAD,CAApB,CAA4BnB,IAA5B,CAAiCyB,OAAjC,CAAyC,WAAzC,EAAsDL,KAAtD,CAAT;AACD,GAFM,MAEA;AACLE,IAAAA,MAAM,GAAGxB,oBAAoB,CAACqB,KAAD,CAApB,CAA4BlB,OAA5B,CAAoCwB,OAApC,CAA4C,WAA5C,EAAyDL,KAAzD,CAAT;AACD;;AAED,SAAOE,MAAP;AACD","sourcesContent":["var formatDistanceLocale = {\n  lessThanXSeconds: {\n    past: '{{count}} წამზე ნაკლები ხნის წინ',\n    present: '{{count}} წამზე ნაკლები',\n    future: '{{count}} წამზე ნაკლებში'\n  },\n  xSeconds: {\n    past: '{{count}} წამის წინ',\n    present: '{{count}} წამი',\n    future: '{{count}} წამში'\n  },\n  halfAMinute: {\n    past: 'ნახევარი წუთის წინ',\n    present: 'ნახევარი წუთი',\n    future: 'ნახევარი წუთში'\n  },\n  lessThanXMinutes: {\n    past: '{{count}} წუთზე ნაკლები ხნის წინ',\n    present: '{{count}} წუთზე ნაკლები',\n    future: '{{count}} წუთზე ნაკლებში'\n  },\n  xMinutes: {\n    past: '{{count}} წუთის წინ',\n    present: '{{count}} წუთი',\n    future: '{{count}} წუთში'\n  },\n  aboutXHours: {\n    past: 'დაახლოებით {{count}} საათის წინ',\n    present: 'დაახლოებით {{count}} საათი',\n    future: 'დაახლოებით {{count}} საათში'\n  },\n  xHours: {\n    past: '{{count}} საათის წინ',\n    present: '{{count}} საათი',\n    future: '{{count}} საათში'\n  },\n  xDays: {\n    past: '{{count}} დღის წინ',\n    present: '{{count}} დღე',\n    future: '{{count}} დღეში'\n  },\n  aboutXWeeks: {\n    past: 'დაახლოებით {{count}} კვირას წინ',\n    present: 'დაახლოებით {{count}} კვირა',\n    future: 'დაახლოებით {{count}} კვირაში'\n  },\n  xWeeks: {\n    past: '{{count}} კვირას კვირა',\n    present: '{{count}} კვირა',\n    future: '{{count}} კვირაში'\n  },\n  aboutXMonths: {\n    past: 'დაახლოებით {{count}} თვის წინ',\n    present: 'დაახლოებით {{count}} თვე',\n    future: 'დაახლოებით {{count}} თვეში'\n  },\n  xMonths: {\n    past: '{{count}} თვის წინ',\n    present: '{{count}} თვე',\n    future: '{{count}} თვეში'\n  },\n  aboutXYears: {\n    past: 'დაახლოებით {{count}} წლის წინ',\n    present: 'დაახლოებით {{count}} წელი',\n    future: 'დაახლოებით {{count}} წელში'\n  },\n  xYears: {\n    past: '{{count}} წლის წინ',\n    present: '{{count}} წელი',\n    future: '{{count}} წელში'\n  },\n  overXYears: {\n    past: '{{count}} წელზე მეტი ხნის წინ',\n    present: '{{count}} წელზე მეტი',\n    future: '{{count}} წელზე მეტი ხნის შემდეგ'\n  },\n  almostXYears: {\n    past: 'თითქმის {{count}} წლის წინ',\n    present: 'თითქმის {{count}} წელი',\n    future: 'თითქმის {{count}} წელში'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (options.addSuffix && options.comparison > 0) {\n    result = formatDistanceLocale[token].future.replace('{{count}}', count);\n  } else if (options.addSuffix && options.comparison <= 0) {\n    result = formatDistanceLocale[token].past.replace('{{count}}', count);\n  } else {\n    result = formatDistanceLocale[token].present.replace('{{count}}', count);\n  }\n\n  return result;\n}"]},"metadata":{},"sourceType":"module"}