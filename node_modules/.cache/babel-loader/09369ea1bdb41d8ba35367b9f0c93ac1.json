{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs3/core-js-stable/date/now\";\nimport { useCallback, useLayoutEffect, useMemo, useRef } from 'react';\nimport debounceFn from './debounce';\n\nvar EventSpy = function EventSpy(_ref) {\n  var debounce = _ref.debounce,\n      name = _ref.name,\n      onEvent = _ref.onEvent,\n      target = _ref.target; // We need to save the \"onEvent\" to ref.\n  // This is because \"onEvent\" may change from time to time, but debounce may still fire to the older callback.\n\n  var onEventRef = useRef();\n  onEventRef.current = onEvent;\n  var debouncer = useMemo(function () {\n    return debounceFn(function (event) {\n      var current = onEventRef.current;\n      current && current(event);\n    }, debounce);\n  }, [debounce, onEventRef]);\n  var handleEvent = useCallback(function (event) {\n    event.timeStampLow = _Date$now();\n    debouncer(event);\n  }, [debouncer]);\n  useLayoutEffect(function () {\n    target.addEventListener(name, handleEvent, {\n      passive: true\n    });\n    handleEvent({\n      target: target,\n      type: name\n    });\n    return function () {\n      return target.removeEventListener(name, handleEvent);\n    };\n  }, [name, handleEvent, target]);\n  return false;\n};\n\nEventSpy.defaultProps = {\n  debounce: 200\n};\nexport default EventSpy;","map":{"version":3,"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,MAAhD,QAA8D,OAA9D;AAEA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAyC;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AAAA,MAAbC,MAAa,QAAbA,MAAa,EACxD;AACA;;AACA,MAAMC,UAAU,GAAGP,MAAM,EAAzB;AAEAO,YAAU,CAACC,OAAXD,GAAqBF,OAArBE;AAEA,MAAME,SAAS,GAAGV,OAAO,CACvB;AAAA,WACEE,UAAU,CAAC,iBAAS;AAClB,UAAQO,OAAR,GAAoBD,UAApB,CAAQC,OAAR;AAEAA,aAAO,IAAIA,OAAO,CAACE,KAAD,CAAlBF;AAHQ,OAIPL,QAJO,CADZ;AADuB,KAOvB,CAACA,QAAD,EAAWI,UAAX,CAPuB,CAAzB;AAUA,MAAMI,WAAW,GAAGd,WAAW,CAC7B,iBAAS;AACPa,SAAK,CAACE,YAANF,GAAqBG,WAArBH;AAEAD,aAAS,CAACC,KAAD,CAATD;AAJ2B,KAM7B,CAACA,SAAD,CAN6B,CAA/B;AASAX,iBAAe,CAAC,YAAM;AACpBQ,UAAM,CAACQ,gBAAPR,CAAwBF,IAAxBE,EAA8BK,WAA9BL,EAA2C;AAAES,aAAO,EAAE;AAAX,KAA3CT;AACAK,eAAW,CAAC;AAAEL,YAAM,EAANA,MAAF;AAAUU,UAAI,EAAEZ;AAAhB,KAAD,CAAXO;AAEA,WAAO;AAAA,aAAML,MAAM,CAACW,mBAAPX,CAA2BF,IAA3BE,EAAiCK,WAAjCL,CAAN;AAAP;AAJa,KAKZ,CAACF,IAAD,EAAOO,WAAP,EAAoBL,MAApB,CALY,CAAfR;AAOA,SAAO,KAAP;AAjCF;;AAoCAI,QAAQ,CAACgB,YAAThB,GAAwB;AACtBC,UAAQ,EAAE;AADY,CAAxBD;AAIA,eAAeA,QAAf","names":["useCallback","useLayoutEffect","useMemo","useRef","debounceFn","EventSpy","debounce","name","onEvent","target","onEventRef","current","debouncer","event","handleEvent","timeStampLow","_Date$now","addEventListener","passive","type","removeEventListener","defaultProps"],"sources":["/Users/100s/Documents/GitHub/frontend/node_modules/react-scroll-to-bottom/src/EventSpy.js"],"sourcesContent":["import { useCallback, useLayoutEffect, useMemo, useRef } from 'react';\n\nimport debounceFn from './debounce';\n\nconst EventSpy = ({ debounce, name, onEvent, target }) => {\n  // We need to save the \"onEvent\" to ref.\n  // This is because \"onEvent\" may change from time to time, but debounce may still fire to the older callback.\n  const onEventRef = useRef();\n\n  onEventRef.current = onEvent;\n\n  const debouncer = useMemo(\n    () =>\n      debounceFn(event => {\n        const { current } = onEventRef;\n\n        current && current(event);\n      }, debounce),\n    [debounce, onEventRef]\n  );\n\n  const handleEvent = useCallback(\n    event => {\n      event.timeStampLow = Date.now();\n\n      debouncer(event);\n    },\n    [debouncer]\n  );\n\n  useLayoutEffect(() => {\n    target.addEventListener(name, handleEvent, { passive: true });\n    handleEvent({ target, type: name });\n\n    return () => target.removeEventListener(name, handleEvent);\n  }, [name, handleEvent, target]);\n\n  return false;\n};\n\nEventSpy.defaultProps = {\n  debounce: 200\n};\n\nexport default EventSpy;\n"]},"metadata":{},"sourceType":"module"}