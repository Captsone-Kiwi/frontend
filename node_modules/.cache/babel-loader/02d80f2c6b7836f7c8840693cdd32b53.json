{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs3/helpers/slicedToArray\";\nimport { useCallback, useRef, useState } from 'react';\nexport default function useStateRef(initialState) {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var ref = useRef();\n  var setValue = useCallback(function (nextValue) {\n    if (typeof nextValue === 'function') {\n      setValue(function (state) {\n        nextValue = nextValue(state);\n        ref.current = nextValue;\n        return nextValue;\n      });\n    } else {\n      ref.current = nextValue;\n      setValue(nextValue);\n    }\n  }, [ref]);\n  ref.current = state;\n  return [state, setState, ref];\n}","map":{"version":3,"mappings":";AAAA,SAASA,WAAT,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,OAA9C;AAEA,eAAe,SAASC,WAAT,CAAqBC,YAArB,EAAmC;AAChD,kBAA0BF,QAAQ,CAACE,YAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,GAAG,GAAGN,MAAM,EAAlB;AACA,MAAMO,QAAQ,GAAGR,WAAW,CAC1B,qBAAa;AACX,QAAI,OAAOS,SAAP,KAAqB,UAAzB,EAAqC;AACnCD,cAAQ,CAAC,iBAAS;AAChBC,iBAAS,GAAGA,SAAS,CAACJ,KAAD,CAArBI;AAEAF,WAAG,CAACG,OAAJH,GAAcE,SAAdF;AAEA,eAAOE,SAAP;AALM,QAARD;AADF,WAQO;AACLD,SAAG,CAACG,OAAJH,GAAcE,SAAdF;AAEAC,cAAQ,CAACC,SAAD,CAARD;AACD;AAduB,KAgB1B,CAACD,GAAD,CAhB0B,CAA5B;AAmBAA,KAAG,CAACG,OAAJH,GAAcF,KAAdE;AAEA,SAAO,CAACF,KAAD,EAAQC,QAAR,EAAkBC,GAAlB,CAAP;AACD","names":["useCallback","useRef","useState","useStateRef","initialState","state","setState","ref","setValue","nextValue","current"],"sources":["/Users/100s/Documents/GitHub/frontend/node_modules/react-scroll-to-bottom/src/hooks/internal/useStateRef.js"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\n\nexport default function useStateRef(initialState) {\n  const [state, setState] = useState(initialState);\n  const ref = useRef();\n  const setValue = useCallback(\n    nextValue => {\n      if (typeof nextValue === 'function') {\n        setValue(state => {\n          nextValue = nextValue(state);\n\n          ref.current = nextValue;\n\n          return nextValue;\n        });\n      } else {\n        ref.current = nextValue;\n\n        setValue(nextValue);\n      }\n    },\n    [ref]\n  );\n\n  ref.current = state;\n\n  return [state, setState, ref];\n}\n"]},"metadata":{},"sourceType":"module"}