{"ast":null,"code":"import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nimport { toDate } from \"../../../../index.js\";\nvar accusativeWeekdays = ['нядзелю', 'панядзелак', 'аўторак', 'сераду', 'чацвер', 'пятніцу', 'суботу'];\n\nfunction lastWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'у мінулую \" + weekday + \" а' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'у мінулы \" + weekday + \" а' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  return \"'у \" + weekday + \" а' p\";\n}\n\nfunction nextWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'у наступную \" + weekday + \" а' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'у наступны \" + weekday + \" а' p\";\n  }\n}\n\nvar lastWeekFormat = function (dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return lastWeek(day);\n  }\n};\n\nvar nextWeekFormat = function (dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return nextWeek(day);\n  }\n};\n\nvar formatRelativeLocale = {\n  lastWeek: lastWeekFormat,\n  yesterday: \"'учора а' p\",\n  today: \"'сёння а' p\",\n  tomorrow: \"'заўтра а' p\",\n  nextWeek: nextWeekFormat,\n  other: 'P'\n};\n\nvar formatRelative = function (token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n\nexport default formatRelative;","map":{"version":3,"sources":["/Users/kimchanmi/Capstone-Kiwi/frontend/node_modules/date-fns/esm/locale/be/_lib/formatRelative/index.js"],"names":["isSameUTCWeek","toDate","accusativeWeekdays","lastWeek","day","weekday","thisWeek","nextWeek","lastWeekFormat","dirtyDate","baseDate","options","date","getUTCDay","nextWeekFormat","formatRelativeLocale","yesterday","today","tomorrow","other","formatRelative","token","format"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,yCAA1B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,IAAIC,kBAAkB,GAAG,CAAC,SAAD,EAAY,YAAZ,EAA0B,SAA1B,EAAqC,QAArC,EAA+C,QAA/C,EAAyD,SAAzD,EAAoE,QAApE,CAAzB;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,MAAIC,OAAO,GAAGH,kBAAkB,CAACE,GAAD,CAAhC;;AAEA,UAAQA,GAAR;AACE,SAAK,CAAL;AACA,SAAK,CAAL;AACA,SAAK,CAAL;AACA,SAAK,CAAL;AACE,aAAO,gBAAgBC,OAAhB,GAA0B,OAAjC;;AAEF,SAAK,CAAL;AACA,SAAK,CAAL;AACA,SAAK,CAAL;AACE,aAAO,eAAeA,OAAf,GAAyB,OAAhC;AAVJ;AAYD;;AAED,SAASC,QAAT,CAAkBF,GAAlB,EAAuB;AACrB,MAAIC,OAAO,GAAGH,kBAAkB,CAACE,GAAD,CAAhC;AACA,SAAO,QAAQC,OAAR,GAAkB,OAAzB;AACD;;AAED,SAASE,QAAT,CAAkBH,GAAlB,EAAuB;AACrB,MAAIC,OAAO,GAAGH,kBAAkB,CAACE,GAAD,CAAhC;;AAEA,UAAQA,GAAR;AACE,SAAK,CAAL;AACA,SAAK,CAAL;AACA,SAAK,CAAL;AACA,SAAK,CAAL;AACE,aAAO,kBAAkBC,OAAlB,GAA4B,OAAnC;;AAEF,SAAK,CAAL;AACA,SAAK,CAAL;AACA,SAAK,CAAL;AACE,aAAO,iBAAiBA,OAAjB,GAA2B,OAAlC;AAVJ;AAYD;;AAED,IAAIG,cAAc,GAAG,UAAUC,SAAV,EAAqBC,QAArB,EAA+BC,OAA/B,EAAwC;AAC3D,MAAIC,IAAI,GAAGX,MAAM,CAACQ,SAAD,CAAjB;AACA,MAAIL,GAAG,GAAGQ,IAAI,CAACC,SAAL,EAAV;;AAEA,MAAIb,aAAa,CAACY,IAAD,EAAOF,QAAP,EAAiBC,OAAjB,CAAjB,EAA4C;AAC1C,WAAOL,QAAQ,CAACF,GAAD,CAAf;AACD,GAFD,MAEO;AACL,WAAOD,QAAQ,CAACC,GAAD,CAAf;AACD;AACF,CATD;;AAWA,IAAIU,cAAc,GAAG,UAAUL,SAAV,EAAqBC,QAArB,EAA+BC,OAA/B,EAAwC;AAC3D,MAAIC,IAAI,GAAGX,MAAM,CAACQ,SAAD,CAAjB;AACA,MAAIL,GAAG,GAAGQ,IAAI,CAACC,SAAL,EAAV;;AAEA,MAAIb,aAAa,CAACY,IAAD,EAAOF,QAAP,EAAiBC,OAAjB,CAAjB,EAA4C;AAC1C,WAAOL,QAAQ,CAACF,GAAD,CAAf;AACD,GAFD,MAEO;AACL,WAAOG,QAAQ,CAACH,GAAD,CAAf;AACD;AACF,CATD;;AAWA,IAAIW,oBAAoB,GAAG;AACzBZ,EAAAA,QAAQ,EAAEK,cADe;AAEzBQ,EAAAA,SAAS,EAAE,aAFc;AAGzBC,EAAAA,KAAK,EAAE,aAHkB;AAIzBC,EAAAA,QAAQ,EAAE,cAJe;AAKzBX,EAAAA,QAAQ,EAAEO,cALe;AAMzBK,EAAAA,KAAK,EAAE;AANkB,CAA3B;;AASA,IAAIC,cAAc,GAAG,UAAUC,KAAV,EAAiBT,IAAjB,EAAuBF,QAAvB,EAAiCC,OAAjC,EAA0C;AAC7D,MAAIW,MAAM,GAAGP,oBAAoB,CAACM,KAAD,CAAjC;;AAEA,MAAI,OAAOC,MAAP,KAAkB,UAAtB,EAAkC;AAChC,WAAOA,MAAM,CAACV,IAAD,EAAOF,QAAP,EAAiBC,OAAjB,CAAb;AACD;;AAED,SAAOW,MAAP;AACD,CARD;;AAUA,eAAeF,cAAf","sourcesContent":["import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nimport { toDate } from \"../../../../index.js\";\nvar accusativeWeekdays = ['нядзелю', 'панядзелак', 'аўторак', 'сераду', 'чацвер', 'пятніцу', 'суботу'];\n\nfunction lastWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'у мінулую \" + weekday + \" а' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'у мінулы \" + weekday + \" а' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  return \"'у \" + weekday + \" а' p\";\n}\n\nfunction nextWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'у наступную \" + weekday + \" а' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'у наступны \" + weekday + \" а' p\";\n  }\n}\n\nvar lastWeekFormat = function (dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return lastWeek(day);\n  }\n};\n\nvar nextWeekFormat = function (dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return nextWeek(day);\n  }\n};\n\nvar formatRelativeLocale = {\n  lastWeek: lastWeekFormat,\n  yesterday: \"'учора а' p\",\n  today: \"'сёння а' p\",\n  tomorrow: \"'заўтра а' p\",\n  nextWeek: nextWeekFormat,\n  other: 'P'\n};\n\nvar formatRelative = function (token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n\nexport default formatRelative;"]},"metadata":{},"sourceType":"module"}