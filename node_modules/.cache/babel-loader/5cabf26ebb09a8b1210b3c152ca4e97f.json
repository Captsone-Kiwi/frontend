{"ast":null,"code":"var _jsxFileName = \"/Users/100s/Documents/GitHub/frontend/src/pages/Room.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport { useLocation } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    padding: 20px;\n    display: flex;\n    height: 100vh;\n    width: 90%;\n    margin: auto;\n    flex-wrap: wrap;\n`;\n_c = Container;\nconst StyledVideo = styled.video`\n    height: 40%;\n    width: 50%;\n`;\n_c2 = StyledVideo;\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledVideo, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c3 = Video;\nconst videoConstraints = {\n  height: window.innerHeight / 2,\n  width: window.innerWidth / 2\n};\n\nconst Room = props => {\n  _s2();\n\n  const [peers, setPeers] = useState([]); // const [username, setUsername] = useState('');\n\n  const [roomID, setRoomID] = useState('');\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const location = useLocation().search; // const roomID = queryString.parse(location);\n  // const roomID = 1234;\n\n  useEffect(() => {\n    const {\n      id,\n      room\n    } = queryString.parse(location); // const meId = uuidV4();\n\n    socketRef.current = io.connect(\"/\"); // setUsername(username);\n    // setRoomID(roomID);\n\n    navigator.mediaDevices.getUserMedia({\n      video: videoConstraints,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n      socketRef.current.emit(\"join room\", roomID);\n      socketRef.current.on(\"all users\", users => {\n        const peers = [];\n        users.forEach(userID => {\n          const peer = createPeer(userID, socketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer\n          });\n          peers.push(peer);\n        });\n        setPeers(peers);\n      });\n      socketRef.current.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        setPeers(users => [...users, peer]);\n      });\n      socketRef.current.on(\"receiving returned signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n    });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(StyledVideo, {\n      muted: true,\n      ref: userVideo,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), peers.map((peer, index) => {\n      return /*#__PURE__*/_jsxDEV(Video, {\n        peer: peer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Room, \"+86hXGwD/UN0a2tfyAYHjE95WTE=\", false, function () {\n  return [useLocation];\n});\n\n_c4 = Room;\nexport default Room;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"StyledVideo\");\n$RefreshReg$(_c3, \"Video\");\n$RefreshReg$(_c4, \"Room\");","map":{"version":3,"sources":["/Users/100s/Documents/GitHub/frontend/src/pages/Room.js"],"names":["React","useEffect","useRef","useState","io","Peer","styled","useLocation","queryString","Container","div","StyledVideo","video","Video","props","ref","peer","on","stream","current","srcObject","videoConstraints","height","window","innerHeight","width","innerWidth","Room","peers","setPeers","roomID","setRoomID","socketRef","userVideo","peersRef","location","search","id","room","parse","connect","navigator","mediaDevices","getUserMedia","audio","then","emit","users","forEach","userID","createPeer","push","peerID","payload","addPeer","signal","callerID","item","find","p","userToSignal","initiator","trickle","incomingSignal","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport { useLocation } from \"react-router-dom\";\nimport queryString from 'query-string';\n\n\nconst Container = styled.div`\n    padding: 20px;\n    display: flex;\n    height: 100vh;\n    width: 90%;\n    margin: auto;\n    flex-wrap: wrap;\n`;\n\nconst StyledVideo = styled.video`\n    height: 40%;\n    width: 50%;\n`;\n\nconst Video = (props) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        props.peer.on(\"stream\", stream => {\n            ref.current.srcObject = stream;\n        })\n    }, []);\n\n    return (\n        <StyledVideo playsInline autoPlay ref={ref} />\n    );\n}\n\n\nconst videoConstraints = {\n    height: window.innerHeight / 2,\n    width: window.innerWidth / 2\n};\n\nconst Room = (props) => {\n    const [peers, setPeers] = useState([]);\n    // const [username, setUsername] = useState('');\n    const [roomID, setRoomID] = useState('');\n    const socketRef = useRef();\n    const userVideo = useRef();\n    const peersRef = useRef([]);\n    const location = useLocation().search;\n    // const roomID = queryString.parse(location);\n\n    // const roomID = 1234;\n\n    useEffect(() => {\n        const {id, room} = queryString.parse(location);\n\n        // const meId = uuidV4();\n\n        socketRef.current = io.connect(\"/\");\n        // setUsername(username);\n        // setRoomID(roomID);\n\n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\n            userVideo.current.srcObject = stream;\n            socketRef.current.emit(\"join room\", roomID);\n            socketRef.current.on(\"all users\", users => {\n                const peers = [];\n                users.forEach(userID => {\n                    const peer = createPeer(userID, socketRef.current.id, stream);\n                    peersRef.current.push({\n                        peerID: userID,\n                        peer,\n                    })\n                    peers.push(peer);\n                })\n                setPeers(peers);\n            })\n\n            socketRef.current.on(\"user joined\", payload => {\n                const peer = addPeer(payload.signal, payload.callerID, stream);\n                peersRef.current.push({\n                    peerID: payload.callerID,\n                    peer,\n                })\n\n                setPeers(users => [...users, peer]);\n            });\n\n            socketRef.current.on(\"receiving returned signal\", payload => {\n                const item = peersRef.current.find(p => p.peerID === payload.id);\n                item.peer.signal(payload.signal);\n            });\n        })\n    }, []);\n\n    function createPeer(userToSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream,\n        });\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\n        })\n\n        return peer;\n    }\n\n    function addPeer(incomingSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream,\n        })\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\n        })\n\n        peer.signal(incomingSignal);\n\n        return peer;\n    }\n\n    return (\n        <Container>\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\n            {peers.map((peer, index) => {\n                return (\n                    <Video key={index} peer={peer} />\n                );\n            })}\n        </Container>\n    );\n};\n\nexport default Room;"]},"metadata":{},"sourceType":"module"}