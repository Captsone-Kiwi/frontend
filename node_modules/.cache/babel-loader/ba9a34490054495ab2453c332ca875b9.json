{"ast":null,"code":"var _jsxFileName = \"/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/Checkbox.js\";\nimport React from 'react';\nimport styled from 'styled-components'; // import {\n//   CheckboxContainer,\n//   Icon,\n//   HiddenCheckbox,\n//   StyledCheckbox\n// } from './styles';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckBoxContainer = styled.div` display: inline-block; vertical-align: middle; `;\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`; // Hide checkbox visually but remain accessible to screen readers.\n// Source: https://polished.js.org/docs/#hidevisually\n\n_c = Icon;\nconst HiddenCheckbox = styled.input.attrs({\n  type: 'checkbox'\n})`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n_c2 = HiddenCheckbox;\nconst StyledCheckbox = styled.div` display: inline-block; width: 2rem; height: 2rem; border: ${props => props.checked ? 'none' : 'solid 0.1rem #dddddd'}; background: ${props => props.checked ? 'black' : 'white'}; border-radius: 0.4rem; transition: all 150ms; ${Icon} { visibility: ${props => props.checked ? 'visible' : 'hidden'}; } `;\n_c3 = StyledCheckbox;\n\nconst Checkbox = _ref => {\n  let {\n    className,\n    checked,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(HiddenCheckbox, {\n      checked: checked,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StyledCheckbox, {\n      checked: checked,\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        viewBox: \"0 0 24 24\",\n        children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"20 6 9 17 4 12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_c4 = Checkbox;\nexport default Checkbox;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Icon\");\n$RefreshReg$(_c2, \"HiddenCheckbox\");\n$RefreshReg$(_c3, \"StyledCheckbox\");\n$RefreshReg$(_c4, \"Checkbox\");","map":{"version":3,"sources":["/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/Checkbox.js"],"names":["React","styled","CheckBoxContainer","div","Icon","svg","HiddenCheckbox","input","attrs","type","StyledCheckbox","props","checked","Checkbox","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,iBAAiB,GAAGD,MAAM,CAACE,GAAI,kDAArC;AAGA,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAI;AACxB;AACA;AACA;AACA,CAJA,C,CAKA;AACA;;KANMD,I;AAON,MAAME,cAAc,GAAGL,MAAM,CAACM,KAAP,CAAaC,KAAb,CAAmB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAyC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMH,c;AAaN,MAAMI,cAAc,GAAGT,MAAM,CAACE,GAAI,8DAA6DQ,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,MAAhB,GAAyB,sBAAuB,iBAAgBD,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,OAAhB,GAA0B,OAAQ,mDAAkDR,IAAK,kBAAiBO,KAAK,IAAEA,KAAK,CAACC,OAAN,GAAe,SAAf,GAA0B,QAAS,MAArU;MAAMF,c;;AAGN,MAAMG,QAAQ,GAAG;AAAA,MAAC;AAAEC,IAAAA,SAAF;AAAaF,IAAAA,OAAb;AAAsB,OAAGD;AAAzB,GAAD;AAAA,sBACf,QAAC,iBAAD;AAAmB,IAAA,SAAS,EAAEG,SAA9B;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEF,OAAzB;AAAA,SAAsCD;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEC,OAAzB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC,WAAd;AAAA,+BACE;AAAU,UAAA,MAAM,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADe;AAAA,CAAjB;;MAAMC,Q;AAWN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\n\n// import {\n//   CheckboxContainer,\n//   Icon,\n//   HiddenCheckbox,\n//   StyledCheckbox\n// } from './styles';\n\nconst CheckBoxContainer = styled.div` display: inline-block; vertical-align: middle; `;\n\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`\n// Hide checkbox visually but remain accessible to screen readers.\n// Source: https://polished.js.org/docs/#hidevisually\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`\n\nconst StyledCheckbox = styled.div` display: inline-block; width: 2rem; height: 2rem; border: ${props => props.checked ? 'none' : 'solid 0.1rem #dddddd'}; background: ${props => props.checked ? 'black' : 'white'}; border-radius: 0.4rem; transition: all 150ms; ${Icon} { visibility: ${props=>props.checked? 'visible': 'hidden'}; } `;\n\n\nconst Checkbox = ({ className, checked, ...props }) => (\n  <CheckboxContainer className={className}>\n    <HiddenCheckbox checked={checked} {...props} />\n    <StyledCheckbox checked={checked}>\n      <Icon viewBox=\"0 0 24 24\">\n        <polyline points=\"20 6 9 17 4 12\" />\n      </Icon>\n    </StyledCheckbox>\n  </CheckboxContainer>\n)\n\nexport default Checkbox\n"]},"metadata":{},"sourceType":"module"}