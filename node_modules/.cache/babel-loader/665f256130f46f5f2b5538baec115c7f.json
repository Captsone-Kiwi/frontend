{"ast":null,"code":"var _jsxFileName = \"/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/Checkbox.js\";\nimport React from 'react';\nimport styled from 'styled-components'; // import {\n//   CheckboxContainer,\n//   Icon,\n//   HiddenCheckbox,\n//   StyledCheckbox\n// } from './styles';\n// Hide checkbox visually but remain accessible to screen readers.\n// Source: https://polished.js.org/docs/#hidevisually\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HiddenCheckbox = styled.input` border: 0; clip: rect(0 0 0 0); clippath: inset(50%); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; white-space: nowrap; width: 1px; `;\n_c = HiddenCheckbox;\nconst StyledCheckbox = styled.div` display: inline-block; width: 2rem; height: 2rem; border: ${props => props.checked ? 'none' : 'solid 0.1rem #dddddd'}; background: ${props => props.checked ? 'black' : 'white'}; border-radius: 0.4rem; transition: all 150ms; ${Icon} { visibility: ${props => props.checked ? 'visible' : 'hidden'}; } `;\n_c2 = StyledCheckbox;\nconst CheckboxContainer = styled.div` display: inline-block; vertical-align: middle; `;\n_c3 = CheckboxContainer;\nconst Icon = styled.svg` fill: none; stroke: white; stroke-width: 2px; `;\n_c4 = Icon;\n\nconst Checkbox = _ref => {\n  let {\n    className,\n    checked,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(HiddenCheckbox, {\n      checked: checked,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StyledCheckbox, {\n      checked: checked,\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        viewBox: \"0 0 24 24\",\n        children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"20 6 9 17 4 12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n\n_c5 = Checkbox;\nexport default Checkbox;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"HiddenCheckbox\");\n$RefreshReg$(_c2, \"StyledCheckbox\");\n$RefreshReg$(_c3, \"CheckboxContainer\");\n$RefreshReg$(_c4, \"Icon\");\n$RefreshReg$(_c5, \"Checkbox\");","map":{"version":3,"sources":["/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/Checkbox.js"],"names":["React","styled","HiddenCheckbox","input","StyledCheckbox","div","props","checked","Icon","CheckboxContainer","svg","Checkbox","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;;;AACA,MAAMC,cAAc,GAAGD,MAAM,CAACE,KAAM,uKAApC;KAAMD,c;AAGN,MAAME,cAAc,GAAGH,MAAM,CAACI,GAAI,8DAA6DC,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,MAAhB,GAAyB,sBAAuB,iBAAgBD,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,OAAhB,GAA0B,OAAQ,mDAAkDC,IAAK,kBAAiBF,KAAK,IAAEA,KAAK,CAACC,OAAN,GAAe,SAAf,GAA0B,QAAS,MAArU;MAAMH,c;AACN,MAAMK,iBAAiB,GAAGR,MAAM,CAACI,GAAI,kDAArC;MAAMI,iB;AACN,MAAMD,IAAI,GAAGP,MAAM,CAACS,GAAI,iDAAxB;MAAMF,I;;AAGN,MAAMG,QAAQ,GAAG;AAAA,MAAC;AAAEC,IAAAA,SAAF;AAAaL,IAAAA,OAAb;AAAsB,OAAGD;AAAzB,GAAD;AAAA,sBACf,QAAC,iBAAD;AAAmB,IAAA,SAAS,EAAEM,SAA9B;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEL,OAAzB;AAAA,SAAsCD;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEC,OAAzB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC,WAAd;AAAA,+BACE;AAAU,UAAA,MAAM,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADe;AAAA,CAAjB;;MAAMI,Q;AAWN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\n\n// import {\n//   CheckboxContainer,\n//   Icon,\n//   HiddenCheckbox,\n//   StyledCheckbox\n// } from './styles';\n\n\n\n\n// Hide checkbox visually but remain accessible to screen readers.\n// Source: https://polished.js.org/docs/#hidevisually\nconst HiddenCheckbox = styled.input` border: 0; clip: rect(0 0 0 0); clippath: inset(50%); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; white-space: nowrap; width: 1px; `;\n\n\nconst StyledCheckbox = styled.div` display: inline-block; width: 2rem; height: 2rem; border: ${props => props.checked ? 'none' : 'solid 0.1rem #dddddd'}; background: ${props => props.checked ? 'black' : 'white'}; border-radius: 0.4rem; transition: all 150ms; ${Icon} { visibility: ${props=>props.checked? 'visible': 'hidden'}; } `;\nconst CheckboxContainer = styled.div` display: inline-block; vertical-align: middle; `;\nconst Icon = styled.svg` fill: none; stroke: white; stroke-width: 2px; `;\n\n\nconst Checkbox = ({ className, checked, ...props }) => (\n  <CheckboxContainer className={className}>\n    <HiddenCheckbox checked={checked} {...props} />\n    <StyledCheckbox checked={checked}>\n      <Icon viewBox=\"0 0 24 24\">\n        <polyline points=\"20 6 9 17 4 12\" />\n      </Icon>\n    </StyledCheckbox>\n  </CheckboxContainer>\n)\n\nexport default Checkbox\n"]},"metadata":{},"sourceType":"module"}