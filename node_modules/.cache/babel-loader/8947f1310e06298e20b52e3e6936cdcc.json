{"ast":null,"code":"var _jsxFileName = \"/Users/100s/Documents/GitHub/frontend/src/pages/Room.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    padding: 20px;\n    display: flex;\n    height: 100vh;\n    width: 90%;\n    margin: auto;\n    flex-wrap: wrap;\n`;\n_c = Container;\nconst StyledVideo = styled.video`\n    height: 40%;\n    width: 50%;\n`;\n_c2 = StyledVideo;\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledVideo, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c3 = Video;\nconst videoConstraints = {\n  height: window.innerHeight / 2,\n  width: window.innerWidth / 2\n};\n\nconst Room = props => {\n  _s2();\n\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const location = useLocation().search;\n  const roomID = queryString.parse(location); // const roomID = props.match.params.roomID;\n\n  useEffect(() => {\n    socketRef.current = io.connect(\"/\");\n    navigator.mediaDevices.getUserMedia({\n      video: videoConstraints,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n      socketRef.current.emit(\"join room\", roomID);\n      socketRef.current.on(\"all users\", users => {\n        const peers = [];\n        users.forEach(userID => {\n          const peer = createPeer(userID, socketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer\n          });\n          peers.push(peer);\n        });\n        setPeers(peers);\n      });\n      socketRef.current.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        setPeers(users => [...users, peer]);\n      });\n      socketRef.current.on(\"receiving returned signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n    });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(StyledVideo, {\n      muted: true,\n      ref: userVideo,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), peers.map((peer, index) => {\n      return /*#__PURE__*/_jsxDEV(Video, {\n        peer: peer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Room, \"VohHy/O3/4KHh+ihir/L6PQl36M=\", true);\n\n_c4 = Room;\nexport default Room;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"StyledVideo\");\n$RefreshReg$(_c3, \"Video\");\n$RefreshReg$(_c4, \"Room\");","map":{"version":3,"sources":["/Users/100s/Documents/GitHub/frontend/src/pages/Room.js"],"names":["React","useEffect","useRef","useState","io","Peer","styled","Container","div","StyledVideo","video","Video","props","ref","peer","on","stream","current","srcObject","videoConstraints","height","window","innerHeight","width","innerWidth","Room","peers","setPeers","socketRef","userVideo","peersRef","location","useLocation","search","roomID","queryString","parse","connect","navigator","mediaDevices","getUserMedia","audio","then","emit","users","forEach","userID","createPeer","id","push","peerID","payload","addPeer","signal","callerID","item","find","p","userToSignal","initiator","trickle","incomingSignal","map","index"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,S;AASN,MAAME,WAAW,GAAGH,MAAM,CAACI,KAAM;AACjC;AACA;AACA,CAHA;MAAMD,W;;AAKN,MAAME,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAMC,GAAG,GAAGX,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,KAAK,CAACE,IAAN,CAAWC,EAAX,CAAc,QAAd,EAAwBC,MAAM,IAAI;AAC9BH,MAAAA,GAAG,CAACI,OAAJ,CAAYC,SAAZ,GAAwBF,MAAxB;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI,QAAC,WAAD;AAAa,IAAA,WAAW,MAAxB;AAAyB,IAAA,QAAQ,MAAjC;AAAkC,IAAA,GAAG,EAAEH;AAAvC;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAZD;;GAAMF,K;;MAAAA,K;AAeN,MAAMQ,gBAAgB,GAAG;AACrBC,EAAAA,MAAM,EAAEC,MAAM,CAACC,WAAP,GAAqB,CADR;AAErBC,EAAAA,KAAK,EAAEF,MAAM,CAACG,UAAP,GAAoB;AAFN,CAAzB;;AAKA,MAAMC,IAAI,GAAIb,KAAD,IAAW;AAAA;;AACpB,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMyB,SAAS,GAAG1B,MAAM,EAAxB;AACA,QAAM2B,SAAS,GAAG3B,MAAM,EAAxB;AACA,QAAM4B,QAAQ,GAAG5B,MAAM,CAAC,EAAD,CAAvB;AACA,QAAM6B,QAAQ,GAAGC,WAAW,GAAGC,MAA/B;AACA,QAAMC,MAAM,GAAGC,WAAW,CAACC,KAAZ,CAAkBL,QAAlB,CAAf,CANoB,CAQpB;;AAEA9B,EAAAA,SAAS,CAAC,MAAM;AACZ2B,IAAAA,SAAS,CAACX,OAAV,GAAoBb,EAAE,CAACiC,OAAH,CAAW,GAAX,CAApB;AACAC,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAE9B,MAAAA,KAAK,EAAES,gBAAT;AAA2BsB,MAAAA,KAAK,EAAE;AAAlC,KAApC,EAA8EC,IAA9E,CAAmF1B,MAAM,IAAI;AACzFa,MAAAA,SAAS,CAACZ,OAAV,CAAkBC,SAAlB,GAA8BF,MAA9B;AACAY,MAAAA,SAAS,CAACX,OAAV,CAAkB0B,IAAlB,CAAuB,WAAvB,EAAoCT,MAApC;AACAN,MAAAA,SAAS,CAACX,OAAV,CAAkBF,EAAlB,CAAqB,WAArB,EAAkC6B,KAAK,IAAI;AACvC,cAAMlB,KAAK,GAAG,EAAd;AACAkB,QAAAA,KAAK,CAACC,OAAN,CAAcC,MAAM,IAAI;AACpB,gBAAMhC,IAAI,GAAGiC,UAAU,CAACD,MAAD,EAASlB,SAAS,CAACX,OAAV,CAAkB+B,EAA3B,EAA+BhC,MAA/B,CAAvB;AACAc,UAAAA,QAAQ,CAACb,OAAT,CAAiBgC,IAAjB,CAAsB;AAClBC,YAAAA,MAAM,EAAEJ,MADU;AAElBhC,YAAAA;AAFkB,WAAtB;AAIAY,UAAAA,KAAK,CAACuB,IAAN,CAAWnC,IAAX;AACH,SAPD;AAQAa,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,OAXD;AAaAE,MAAAA,SAAS,CAACX,OAAV,CAAkBF,EAAlB,CAAqB,aAArB,EAAoCoC,OAAO,IAAI;AAC3C,cAAMrC,IAAI,GAAGsC,OAAO,CAACD,OAAO,CAACE,MAAT,EAAiBF,OAAO,CAACG,QAAzB,EAAmCtC,MAAnC,CAApB;AACAc,QAAAA,QAAQ,CAACb,OAAT,CAAiBgC,IAAjB,CAAsB;AAClBC,UAAAA,MAAM,EAAEC,OAAO,CAACG,QADE;AAElBxC,UAAAA;AAFkB,SAAtB;AAKAa,QAAAA,QAAQ,CAACiB,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAW9B,IAAX,CAAV,CAAR;AACH,OARD;AAUAc,MAAAA,SAAS,CAACX,OAAV,CAAkBF,EAAlB,CAAqB,2BAArB,EAAkDoC,OAAO,IAAI;AACzD,cAAMI,IAAI,GAAGzB,QAAQ,CAACb,OAAT,CAAiBuC,IAAjB,CAAsBC,CAAC,IAAIA,CAAC,CAACP,MAAF,KAAaC,OAAO,CAACH,EAAhD,CAAb;AACAO,QAAAA,IAAI,CAACzC,IAAL,CAAUuC,MAAV,CAAiBF,OAAO,CAACE,MAAzB;AACH,OAHD;AAIH,KA9BD;AA+BH,GAjCQ,EAiCN,EAjCM,CAAT;;AAmCA,WAASN,UAAT,CAAoBW,YAApB,EAAkCJ,QAAlC,EAA4CtC,MAA5C,EAAoD;AAChD,UAAMF,IAAI,GAAG,IAAIT,IAAJ,CAAS;AAClBsD,MAAAA,SAAS,EAAE,IADO;AAElBC,MAAAA,OAAO,EAAE,KAFS;AAGlB5C,MAAAA;AAHkB,KAAT,CAAb;AAMAF,IAAAA,IAAI,CAACC,EAAL,CAAQ,QAAR,EAAkBsC,MAAM,IAAI;AACxBzB,MAAAA,SAAS,CAACX,OAAV,CAAkB0B,IAAlB,CAAuB,gBAAvB,EAAyC;AAAEe,QAAAA,YAAF;AAAgBJ,QAAAA,QAAhB;AAA0BD,QAAAA;AAA1B,OAAzC;AACH,KAFD;AAIA,WAAOvC,IAAP;AACH;;AAED,WAASsC,OAAT,CAAiBS,cAAjB,EAAiCP,QAAjC,EAA2CtC,MAA3C,EAAmD;AAC/C,UAAMF,IAAI,GAAG,IAAIT,IAAJ,CAAS;AAClBsD,MAAAA,SAAS,EAAE,KADO;AAElBC,MAAAA,OAAO,EAAE,KAFS;AAGlB5C,MAAAA;AAHkB,KAAT,CAAb;AAMAF,IAAAA,IAAI,CAACC,EAAL,CAAQ,QAAR,EAAkBsC,MAAM,IAAI;AACxBzB,MAAAA,SAAS,CAACX,OAAV,CAAkB0B,IAAlB,CAAuB,kBAAvB,EAA2C;AAAEU,QAAAA,MAAF;AAAUC,QAAAA;AAAV,OAA3C;AACH,KAFD;AAIAxC,IAAAA,IAAI,CAACuC,MAAL,CAAYQ,cAAZ;AAEA,WAAO/C,IAAP;AACH;;AAED,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,KAAK,MAAlB;AAAmB,MAAA,GAAG,EAAEe,SAAxB;AAAmC,MAAA,QAAQ,MAA3C;AAA4C,MAAA,WAAW;AAAvD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKH,KAAK,CAACoC,GAAN,CAAU,CAAChD,IAAD,EAAOiD,KAAP,KAAiB;AACxB,0BACI,QAAC,KAAD;AAAmB,QAAA,IAAI,EAAEjD;AAAzB,SAAYiD,KAAZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CArFD;;IAAMtC,I;;MAAAA,I;AAuFN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\n\n\nconst Container = styled.div`\n    padding: 20px;\n    display: flex;\n    height: 100vh;\n    width: 90%;\n    margin: auto;\n    flex-wrap: wrap;\n`;\n\nconst StyledVideo = styled.video`\n    height: 40%;\n    width: 50%;\n`;\n\nconst Video = (props) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        props.peer.on(\"stream\", stream => {\n            ref.current.srcObject = stream;\n        })\n    }, []);\n\n    return (\n        <StyledVideo playsInline autoPlay ref={ref} />\n    );\n}\n\n\nconst videoConstraints = {\n    height: window.innerHeight / 2,\n    width: window.innerWidth / 2\n};\n\nconst Room = (props) => {\n    const [peers, setPeers] = useState([]);\n    const socketRef = useRef();\n    const userVideo = useRef();\n    const peersRef = useRef([]);\n    const location = useLocation().search;\n    const roomID = queryString.parse(location);\n\n    // const roomID = props.match.params.roomID;\n\n    useEffect(() => {\n        socketRef.current = io.connect(\"/\");\n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\n            userVideo.current.srcObject = stream;\n            socketRef.current.emit(\"join room\", roomID);\n            socketRef.current.on(\"all users\", users => {\n                const peers = [];\n                users.forEach(userID => {\n                    const peer = createPeer(userID, socketRef.current.id, stream);\n                    peersRef.current.push({\n                        peerID: userID,\n                        peer,\n                    })\n                    peers.push(peer);\n                })\n                setPeers(peers);\n            })\n\n            socketRef.current.on(\"user joined\", payload => {\n                const peer = addPeer(payload.signal, payload.callerID, stream);\n                peersRef.current.push({\n                    peerID: payload.callerID,\n                    peer,\n                })\n\n                setPeers(users => [...users, peer]);\n            });\n\n            socketRef.current.on(\"receiving returned signal\", payload => {\n                const item = peersRef.current.find(p => p.peerID === payload.id);\n                item.peer.signal(payload.signal);\n            });\n        })\n    }, []);\n\n    function createPeer(userToSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream,\n        });\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\n        })\n\n        return peer;\n    }\n\n    function addPeer(incomingSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream,\n        })\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\n        })\n\n        peer.signal(incomingSignal);\n\n        return peer;\n    }\n\n    return (\n        <Container>\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\n            {peers.map((peer, index) => {\n                return (\n                    <Video key={index} peer={peer} />\n                );\n            })}\n        </Container>\n    );\n};\n\nexport default Room;"]},"metadata":{},"sourceType":"module"}