{"ast":null,"code":"function declensionGroup(scheme, count) {\n  if (count === 1) {\n    return scheme.one;\n  }\n\n  var rem100 = count % 100; // ends with 11-20\n\n  if (rem100 <= 20 && rem100 > 10) {\n    return scheme.other;\n  }\n\n  var rem10 = rem100 % 10; // ends with 2, 3, 4\n\n  if (rem10 >= 2 && rem10 <= 4) {\n    return scheme.twoFour;\n  }\n\n  return scheme.other;\n}\n\nfunction declension(scheme, count, time) {\n  time = time || 'regular';\n  var group = declensionGroup(scheme, count);\n  var finalText = group[time] || group;\n  return finalText.replace('{{count}}', count);\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: {\n      regular: 'mniej niż sekunda',\n      past: 'mniej niż sekundę',\n      future: 'mniej niż sekundę'\n    },\n    twoFour: 'mniej niż {{count}} sekundy',\n    other: 'mniej niż {{count}} sekund'\n  },\n  xSeconds: {\n    one: {\n      regular: 'sekunda',\n      past: 'sekundę',\n      future: 'sekundę'\n    },\n    twoFour: '{{count}} sekundy',\n    other: '{{count}} sekund'\n  },\n  halfAMinute: {\n    one: 'pół minuty',\n    twoFour: 'pół minuty',\n    other: 'pół minuty'\n  },\n  lessThanXMinutes: {\n    one: {\n      regular: 'mniej niż minuta',\n      past: 'mniej niż minutę',\n      future: 'mniej niż minutę'\n    },\n    twoFour: 'mniej niż {{count}} minuty',\n    other: 'mniej niż {{count}} minut'\n  },\n  xMinutes: {\n    one: {\n      regular: 'minuta',\n      past: 'minutę',\n      future: 'minutę'\n    },\n    twoFour: '{{count}} minuty',\n    other: '{{count}} minut'\n  },\n  aboutXHours: {\n    one: {\n      regular: 'około godziny',\n      past: 'około godziny',\n      future: 'około godzinę'\n    },\n    twoFour: 'około {{count}} godziny',\n    other: 'około {{count}} godzin'\n  },\n  xHours: {\n    one: {\n      regular: 'godzina',\n      past: 'godzinę',\n      future: 'godzinę'\n    },\n    twoFour: '{{count}} godziny',\n    other: '{{count}} godzin'\n  },\n  xDays: {\n    one: {\n      regular: 'dzień',\n      past: 'dzień',\n      future: '1 dzień'\n    },\n    twoFour: '{{count}} dni',\n    other: '{{count}} dni'\n  },\n  aboutXWeeks: {\n    one: 'około tygodnia',\n    twoFour: 'około {{count}} tygodni',\n    other: 'około {{count}} tygodni'\n  },\n  xWeeks: {\n    one: 'tydzień',\n    twoFour: '{{count}} tygodnie',\n    other: '{{count}} tygodni'\n  },\n  aboutXMonths: {\n    one: 'około miesiąc',\n    twoFour: 'około {{count}} miesiące',\n    other: 'około {{count}} miesięcy'\n  },\n  xMonths: {\n    one: 'miesiąc',\n    twoFour: '{{count}} miesiące',\n    other: '{{count}} miesięcy'\n  },\n  aboutXYears: {\n    one: 'około rok',\n    twoFour: 'około {{count}} lata',\n    other: 'około {{count}} lat'\n  },\n  xYears: {\n    one: 'rok',\n    twoFour: '{{count}} lata',\n    other: '{{count}} lat'\n  },\n  overXYears: {\n    one: 'ponad rok',\n    twoFour: 'ponad {{count}} lata',\n    other: 'ponad {{count}} lat'\n  },\n  almostXYears: {\n    one: 'prawie rok',\n    twoFour: 'prawie {{count}} lata',\n    other: 'prawie {{count}} lat'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var scheme = formatDistanceLocale[token];\n\n  if (!options.addSuffix) {\n    return declension(scheme, count);\n  }\n\n  if (options.comparison > 0) {\n    return 'za ' + declension(scheme, count, 'future');\n  } else {\n    return declension(scheme, count, 'past') + ' temu';\n  }\n}","map":{"version":3,"sources":["/Users/kimchanmi/Capstone-Kiwi/frontend/node_modules/date-fns/esm/locale/pl/_lib/formatDistance/index.js"],"names":["declensionGroup","scheme","count","one","rem100","other","rem10","twoFour","declension","time","group","finalText","replace","formatDistanceLocale","lessThanXSeconds","regular","past","future","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","options","addSuffix","comparison"],"mappings":"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","sourcesContent":["function declensionGroup(scheme, count) {\n  if (count === 1) {\n    return scheme.one;\n  }\n\n  var rem100 = count % 100; // ends with 11-20\n\n  if (rem100 <= 20 && rem100 > 10) {\n    return scheme.other;\n  }\n\n  var rem10 = rem100 % 10; // ends with 2, 3, 4\n\n  if (rem10 >= 2 && rem10 <= 4) {\n    return scheme.twoFour;\n  }\n\n  return scheme.other;\n}\n\nfunction declension(scheme, count, time) {\n  time = time || 'regular';\n  var group = declensionGroup(scheme, count);\n  var finalText = group[time] || group;\n  return finalText.replace('{{count}}', count);\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: {\n      regular: 'mniej niż sekunda',\n      past: 'mniej niż sekundę',\n      future: 'mniej niż sekundę'\n    },\n    twoFour: 'mniej niż {{count}} sekundy',\n    other: 'mniej niż {{count}} sekund'\n  },\n  xSeconds: {\n    one: {\n      regular: 'sekunda',\n      past: 'sekundę',\n      future: 'sekundę'\n    },\n    twoFour: '{{count}} sekundy',\n    other: '{{count}} sekund'\n  },\n  halfAMinute: {\n    one: 'pół minuty',\n    twoFour: 'pół minuty',\n    other: 'pół minuty'\n  },\n  lessThanXMinutes: {\n    one: {\n      regular: 'mniej niż minuta',\n      past: 'mniej niż minutę',\n      future: 'mniej niż minutę'\n    },\n    twoFour: 'mniej niż {{count}} minuty',\n    other: 'mniej niż {{count}} minut'\n  },\n  xMinutes: {\n    one: {\n      regular: 'minuta',\n      past: 'minutę',\n      future: 'minutę'\n    },\n    twoFour: '{{count}} minuty',\n    other: '{{count}} minut'\n  },\n  aboutXHours: {\n    one: {\n      regular: 'około godziny',\n      past: 'około godziny',\n      future: 'około godzinę'\n    },\n    twoFour: 'około {{count}} godziny',\n    other: 'około {{count}} godzin'\n  },\n  xHours: {\n    one: {\n      regular: 'godzina',\n      past: 'godzinę',\n      future: 'godzinę'\n    },\n    twoFour: '{{count}} godziny',\n    other: '{{count}} godzin'\n  },\n  xDays: {\n    one: {\n      regular: 'dzień',\n      past: 'dzień',\n      future: '1 dzień'\n    },\n    twoFour: '{{count}} dni',\n    other: '{{count}} dni'\n  },\n  aboutXWeeks: {\n    one: 'około tygodnia',\n    twoFour: 'około {{count}} tygodni',\n    other: 'około {{count}} tygodni'\n  },\n  xWeeks: {\n    one: 'tydzień',\n    twoFour: '{{count}} tygodnie',\n    other: '{{count}} tygodni'\n  },\n  aboutXMonths: {\n    one: 'około miesiąc',\n    twoFour: 'około {{count}} miesiące',\n    other: 'około {{count}} miesięcy'\n  },\n  xMonths: {\n    one: 'miesiąc',\n    twoFour: '{{count}} miesiące',\n    other: '{{count}} miesięcy'\n  },\n  aboutXYears: {\n    one: 'około rok',\n    twoFour: 'około {{count}} lata',\n    other: 'około {{count}} lat'\n  },\n  xYears: {\n    one: 'rok',\n    twoFour: '{{count}} lata',\n    other: '{{count}} lat'\n  },\n  overXYears: {\n    one: 'ponad rok',\n    twoFour: 'ponad {{count}} lata',\n    other: 'ponad {{count}} lat'\n  },\n  almostXYears: {\n    one: 'prawie rok',\n    twoFour: 'prawie {{count}} lata',\n    other: 'prawie {{count}} lat'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var scheme = formatDistanceLocale[token];\n\n  if (!options.addSuffix) {\n    return declension(scheme, count);\n  }\n\n  if (options.comparison > 0) {\n    return 'za ' + declension(scheme, count, 'future');\n  } else {\n    return declension(scheme, count, 'past') + ' temu';\n  }\n}"]},"metadata":{},"sourceType":"module"}