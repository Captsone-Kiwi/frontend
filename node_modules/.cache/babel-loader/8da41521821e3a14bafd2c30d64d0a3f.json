{"ast":null,"code":"var _jsxFileName = \"/Users/100s/Documents/GitHub/frontend/src/pages/SignUp/SignUpForm.js\";\nimport React from 'react';\nimport * as api from '../api/server';\nimport './style.css';\nimport Checkbox from '../../components/Checkbox/Checkbox';\nimport { LoginBtnLink, Wrap } from '../../components/Navbar/NavbarElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst signUp = async () => {\n  const {\n    history\n  } = props;\n  const token = await api.createUser(fields[\"emailid\"], fields[\"password\"]);\n\n  if (token.non_field_errors) {\n    token.non_field_errors.map(e => alert(e));\n  } else {\n    history.push('/');\n  }\n};\n\nclass SignUpForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      fields: {},\n      errors: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n  }\n\n  handleChange(e) {\n    let fields = this.state.fields;\n    fields[e.target.name] = e.target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  submituserRegistrationForm(e) {\n    e.preventDefault();\n\n    if (this.validateForm()) {\n      let fields = {};\n      fields[\"username\"] = \"\";\n      fields[\"emailid\"] = \"\";\n      fields[\"mobileno\"] = \"\";\n      fields[\"password\"] = \"\";\n      this.setState({\n        fields: fields\n      });\n      alert(\"Form submitted\");\n    }\n  }\n\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"username\"]) {\n      formIsValid = false;\n      errors[\"username\"] = \"*Please enter your full name.\";\n    }\n\n    if (typeof fields[\"username\"] !== \"undefined\") {\n      if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\n        formIsValid = false;\n        errors[\"username\"] = \"*Please enter alphabet characters only.\";\n      }\n    }\n\n    if (!fields[\"emailid\"]) {\n      formIsValid = false;\n      errors[\"emailid\"] = \"*Please enter your email address.\";\n    }\n\n    if (typeof fields[\"emailid\"] !== \"undefined\") {\n      //regular expression for email validation\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n      if (!pattern.test(fields[\"emailid\"])) {\n        formIsValid = false;\n        errors[\"emailid\"] = \"*Please enter valid email address.\";\n      }\n    }\n\n    if (!fields[\"password\"]) {\n      formIsValid = false;\n      errors[\"password\"] = \"*Please enter your password.\";\n    }\n\n    if (!fields[\"confirm_password\"]) {\n      formIsValid = false;\n      errors[\"confirm_password\"] = \"*Please enter your confirm password.\";\n    }\n\n    if (typeof fields[\"confirm_password\"] !== \"undefined\" && typeof fields[\"password\"] !== \"undefined\") {\n      if (fields[\"password\"] != fields[\"confirm_password\"]) {\n        formIsValid = false;\n        errors[\"confirm_password\"] = \"*Passwords don't match\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"post\",\n          name: \"userRegistrationForm\",\n          onSubmit: this.submituserRegistrationForm,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Full legal name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Enter your full names\",\n            value: this.state.fields.username,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errorMsg\",\n            children: this.state.errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"emailid\",\n            placeholder: \"Enter your email address\",\n            value: this.state.fields.emailid,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errorMsg\",\n            children: this.state.errors.emailid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Enter your password\",\n            value: this.state.fields.password,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errorMsg\",\n            children: this.state.errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"confirm_password\",\n            placeholder: \"Enter your confirm password\",\n            value: this.state.fields.confirm_password,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errorMsg\",\n            children: this.state.errors.confirm_password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: this.state.checked,\n              onChange: this.handleCheckboxChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 8\n              },\n              children: \"I have read the Privacy Acknowledgement.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n            children: [/*#__PURE__*/_jsxDEV(LoginBtnLink, {\n              type: \"submit\",\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"button\",\n              value: \"Create an account\",\n              onClick: signUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default SignUpForm;","map":{"version":3,"sources":["/Users/100s/Documents/GitHub/frontend/src/pages/SignUp/SignUpForm.js"],"names":["React","api","Checkbox","LoginBtnLink","Wrap","signUp","history","props","token","createUser","fields","non_field_errors","map","e","alert","push","SignUpForm","Component","constructor","state","errors","handleChange","bind","submituserRegistrationForm","target","name","value","setState","preventDefault","validateForm","formIsValid","match","pattern","RegExp","test","render","username","emailid","password","confirm_password","checked","handleCheckboxChange","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as api from '../api/server';\nimport './style.css';\nimport Checkbox from '../../components/Checkbox/Checkbox';\nimport {\n  LoginBtnLink,\n  Wrap\n  } from '../../components/Navbar/NavbarElements';\n\nconst signUp = async () => {\n  const { history } = props;\n  const token = await api.createUser(fields[\"emailid\"],fields[\"password\"]);\n  if(token.non_field_errors){\n      token.non_field_errors.map((e) => alert(e))\n  } else{\n      history.push('/');\n  }\n};\n\nclass SignUpForm extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        fields: {},\n        errors: {}\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n      this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n\n    };\n\n    handleChange(e) {\n      let fields = this.state.fields;\n      fields[e.target.name] = e.target.value;\n      this.setState({\n        fields\n      });\n\n    }\n\n    submituserRegistrationForm(e) {\n      e.preventDefault();\n      if (this.validateForm()) {\n          let fields = {};\n          fields[\"username\"] = \"\";\n          fields[\"emailid\"] = \"\";\n          fields[\"mobileno\"] = \"\";\n          fields[\"password\"] = \"\";\n          this.setState({fields:fields});\n          alert(\"Form submitted\");\n      }\n\n    }\n\n    validateForm() {\n\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n\n      if (!fields[\"username\"]) {\n        formIsValid = false;\n        errors[\"username\"] = \"*Please enter your full name.\";\n      }\n\n      if (typeof fields[\"username\"] !== \"undefined\") {\n        if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\n          formIsValid = false;\n          errors[\"username\"] = \"*Please enter alphabet characters only.\";\n        }\n      }\n\n      if (!fields[\"emailid\"]) {\n        formIsValid = false;\n        errors[\"emailid\"] = \"*Please enter your email address.\";\n      }\n\n      if (typeof fields[\"emailid\"] !== \"undefined\") {\n        //regular expression for email validation\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n        if (!pattern.test(fields[\"emailid\"])) {\n          formIsValid = false;\n          errors[\"emailid\"] = \"*Please enter valid email address.\";\n        }\n      }\n\n      if (!fields[\"password\"]) {\n        formIsValid = false;\n        errors[\"password\"] = \"*Please enter your password.\";\n      }\n\n      if (!fields[\"confirm_password\"]) {\n        formIsValid = false;\n        errors[\"confirm_password\"] = \"*Please enter your confirm password.\";\n      }\n\n      if  ((typeof fields[\"confirm_password\"] !== \"undefined\") && (typeof fields[\"password\"] !== \"undefined\")) {\n        if (fields[\"password\"] != fields[\"confirm_password\"]) {\n          formIsValid = false;\n          errors[\"confirm_password\"] = \"*Passwords don't match\"\n        }\n      }\n\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n\n\n    }\n\n\n  render() {\n\n    return (\n    <div>\n     <div id=\"register\">\n        <h3>Create an account</h3>\n          <form method=\"post\"  name=\"userRegistrationForm\"  onSubmit= {this.submituserRegistrationForm} >\n          \n          <label>Full legal name</label>\n          <input type=\"text\" name=\"username\" placeholder=\"Enter your full names\" value={this.state.fields.username} onChange={this.handleChange} />\n          <div className=\"errorMsg\">{this.state.errors.username}</div>\n          \n          <label>Email address</label>\n          <input type=\"text\" name=\"emailid\" placeholder=\"Enter your email address\" value={this.state.fields.emailid} onChange={this.handleChange}  />\n          <div className=\"errorMsg\">{this.state.errors.emailid}</div>\n          \n          <label>Password</label>\n          <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" value={this.state.fields.password} onChange={this.handleChange} />\n          <div className=\"errorMsg\">{this.state.errors.password}</div>\n          \n          <label>Password Confirm</label>\n          <input type=\"password\" name=\"confirm_password\" placeholder=\"Enter your confirm password\" value={this.state.fields.confirm_password} onChange={this.handleChange} />\n          <div className=\"errorMsg\">{this.state.errors.confirm_password}</div>\n\n\n          <label>\n            <Checkbox\n              checked={this.state.checked}\n              onChange={this.handleCheckboxChange}\n            />\n            <span style={{ marginLeft: 8 }}>I have read the Privacy Acknowledgement.</span>\n          </label>\n          <Wrap>\n            <LoginBtnLink type=\"submit\" to='/login'>Login</LoginBtnLink>\n            <input type=\"submit\" className=\"button\"  value=\"Create an account\" onClick={signUp}/>\n          </Wrap>\n        </form>\n    </div>\n</div>\n\n      );\n  }\n\n\n}\n\n\nexport default SignUpForm;"]},"metadata":{},"sourceType":"module"}