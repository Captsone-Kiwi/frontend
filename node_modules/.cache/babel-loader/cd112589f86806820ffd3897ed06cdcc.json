{"ast":null,"code":"var _jsxFileName = \"/Users/100s/Documents/GitHub/frontend/src/components/Chatting/Chatting.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport * as style from \"./styles\";\nimport NestedList from './NestedList.js';\nimport Messages from './Messages';\nimport io from 'socket.io-client';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet socket;\n\nfunction Chatting() {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  const location = useLocation().search;\n  useEffect(() => {\n    const {\n      username,\n      room\n    } = queryString.parse(location);\n    socket = io(ENDPOINT);\n    setUsername(username);\n    setRoom(room);\n    socket.emit('join', {\n      username,\n      room\n    }, error => {// if (error) {\n      //   alert(error);\n      // }\n    });\n  }, [ENDPOINT, location]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"roomData\", _ref => {\n      let {\n        users\n      } = _ref;\n      setUsername(users);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(style.WrapColumn, {\n      style: {\n        justifyContent: 'space-between',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(NestedList, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(style.WrapColumn, {\n        style: {\n          padding: '16px',\n          alignItems: 'left',\n          borderTop: '1px solid #E1E5E3',\n          zIndex: '1'\n        },\n        children: [/*#__PURE__*/_jsxDEV(style.WrapRow, {\n          style: {\n            justifyContent: \"space-between\",\n            width: '250px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(style.WrapRow, {\n            children: [/*#__PURE__*/_jsxDEV(style.Span, {\n              children: \"\\uBC1B\\uB294 \\uC0AC\\uB78C : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(style.SendWho, {\n              children: \"Everyone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(style.SendBtn, {\n            onClick: event => sendMessage(event),\n            children: \"\\uC804\\uC1A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(style.TextInput, {\n          placeholder: \"\\uC5EC\\uAE30\\uC5D0 \\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          value: message,\n          onChange: _ref2 => {\n            let {\n              target: {\n                value\n              }\n            } = _ref2;\n            return setMessage(value);\n          },\n          onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chatting, \"wEfYA6cLoYqxywOakUFHbLasTMQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chatting;\nexport default Chatting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatting\");","map":{"version":3,"sources":["/Users/100s/Documents/GitHub/frontend/src/components/Chatting/Chatting.js"],"names":["React","useState","useEffect","queryString","style","NestedList","Messages","io","useLocation","socket","Chatting","username","setUsername","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","location","search","parse","emit","error","on","users","sendMessage","event","preventDefault","justifyContent","height","padding","alignItems","borderTop","zIndex","width","target","value","key"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport queryString from 'query-string';\nimport * as style from \"./styles\";\nimport NestedList from './NestedList.js';\nimport Messages from './Messages';\nimport io from 'socket.io-client';\nimport { useLocation } from 'react-router-dom';\n\n\nlet socket;\n\nfunction Chatting() {\n\n  const [username, setUsername] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  const location = useLocation().search;\n\n  useEffect(() => {\n    const {username, room} = queryString.parse(location);\n\n    socket = io(ENDPOINT);\n\n    setUsername(username);\n    setRoom(room);\n\n    socket.emit('join', {username,room}, (error) => {\n      // if (error) {\n      //   alert(error);\n      // }\n    });\n\n  },[ENDPOINT,location]);\n\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [ ...messages, message ]);\n    });\n    \n    socket.on(\"roomData\", ({ users }) => {\n      setUsername(users);\n    });\n}, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  }\n \n  return (\n    <>\n      <style.WrapColumn style={{justifyContent:'space-between',height: '100%'}}>\n        \n        {/* List */}\n        <NestedList room={room}/>\n        <Messages messages={messages} username={username}/>\n\n        {/* SEND */}\n        <style.WrapColumn style={{padding: '16px', alignItems:'left', borderTop: '1px solid #E1E5E3', zIndex:'1'}}>\n            <style.WrapRow style={{justifyContent:\"space-between\", width:'250px'}}>\n                <style.WrapRow>\n                    <style.Span>받는 사람 : </style.Span>\n                    <style.SendWho>Everyone</style.SendWho>\n                </style.WrapRow>\n                <style.SendBtn onClick={(event) => sendMessage(event)}>전송</style.SendBtn>\n            </style.WrapRow>\n            <style.TextInput \n              placeholder='여기에 메시지를 입력하세요.'\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Type a message...\"\n              value={message}\n              onChange={({ target: { value } }) => setMessage(value)}\n              onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\n          />\n        </style.WrapColumn>\n\n        </style.WrapColumn>\n    </>\n  );\n}\n\nexport default Chatting;"]},"metadata":{},"sourceType":"module"}