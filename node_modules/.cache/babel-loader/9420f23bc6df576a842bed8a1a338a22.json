{"ast":null,"code":"function declensionGroup(scheme, count) {\n  if (count === 1 && scheme.one) {\n    return scheme.one;\n  }\n\n  if (count >= 2 && count <= 4 && scheme.twoFour) {\n    return scheme.twoFour;\n  } // if count === null || count === 0 || count >= 5\n\n\n  return scheme.other;\n}\n\nfunction declension(scheme, count, time) {\n  var group = declensionGroup(scheme, count);\n  var finalText = group[time];\n  return finalText.replace('{{count}}', String(count));\n}\n\nfunction extractPreposition(token) {\n  var result = ['lessThan', 'about', 'over', 'almost'].filter(function (preposition) {\n    return !!token.match(new RegExp('^' + preposition));\n  });\n  return result[0];\n}\n\nfunction prefixPreposition(preposition) {\n  var translation = '';\n\n  if (preposition === 'almost') {\n    translation = 'takmer';\n  }\n\n  if (preposition === 'about') {\n    translation = 'približne';\n  }\n\n  return translation.length > 0 ? translation + ' ' : '';\n}\n\nfunction suffixPreposition(preposition) {\n  var translation = '';\n\n  if (preposition === 'lessThan') {\n    translation = 'menej než';\n  }\n\n  if (preposition === 'over') {\n    translation = 'viac než';\n  }\n\n  return translation.length > 0 ? translation + ' ' : '';\n}\n\nfunction lowercaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\nvar formatDistanceLocale = {\n  xSeconds: {\n    one: {\n      present: 'sekunda',\n      past: 'sekundou',\n      future: 'sekundu'\n    },\n    twoFour: {\n      present: '{{count}} sekundy',\n      past: '{{count}} sekundami',\n      future: '{{count}} sekundy'\n    },\n    other: {\n      present: '{{count}} sekúnd',\n      past: '{{count}} sekundami',\n      future: '{{count}} sekúnd'\n    }\n  },\n  halfAMinute: {\n    other: {\n      present: 'pol minúty',\n      past: 'pol minútou',\n      future: 'pol minúty'\n    }\n  },\n  xMinutes: {\n    one: {\n      present: 'minúta',\n      past: 'minútou',\n      future: 'minútu'\n    },\n    twoFour: {\n      present: '{{count}} minúty',\n      past: '{{count}} minútami',\n      future: '{{count}} minúty'\n    },\n    other: {\n      present: '{{count}} minút',\n      past: '{{count}} minútami',\n      future: '{{count}} minút'\n    }\n  },\n  xHours: {\n    one: {\n      present: 'hodina',\n      past: 'hodinou',\n      future: 'hodinu'\n    },\n    twoFour: {\n      present: '{{count}} hodiny',\n      past: '{{count}} hodinami',\n      future: '{{count}} hodiny'\n    },\n    other: {\n      present: '{{count}} hodín',\n      past: '{{count}} hodinami',\n      future: '{{count}} hodín'\n    }\n  },\n  xDays: {\n    one: {\n      present: 'deň',\n      past: 'dňom',\n      future: 'deň'\n    },\n    twoFour: {\n      present: '{{count}} dni',\n      past: '{{count}} dňami',\n      future: '{{count}} dni'\n    },\n    other: {\n      present: '{{count}} dní',\n      past: '{{count}} dňami',\n      future: '{{count}} dní'\n    }\n  },\n  xWeeks: {\n    one: {\n      present: 'týždeň',\n      past: 'týždňom',\n      future: 'týždeň'\n    },\n    twoFour: {\n      present: '{{count}} týždne',\n      past: '{{count}} týždňami',\n      future: '{{count}} týždne'\n    },\n    other: {\n      present: '{{count}} týždňov',\n      past: '{{count}} týždňami',\n      future: '{{count}} týždňov'\n    }\n  },\n  xMonths: {\n    one: {\n      present: 'mesiac',\n      past: 'mesiacom',\n      future: 'mesiac'\n    },\n    twoFour: {\n      present: '{{count}} mesiace',\n      past: '{{count}} mesiacmi',\n      future: '{{count}} mesiace'\n    },\n    other: {\n      present: '{{count}} mesiacov',\n      past: '{{count}} mesiacmi',\n      future: '{{count}} mesiacov'\n    }\n  },\n  xYears: {\n    one: {\n      present: 'rok',\n      past: 'rokom',\n      future: 'rok'\n    },\n    twoFour: {\n      present: '{{count}} roky',\n      past: '{{count}} rokmi',\n      future: '{{count}} roky'\n    },\n    other: {\n      present: '{{count}} rokov',\n      past: '{{count}} rokmi',\n      future: '{{count}} rokov'\n    }\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var preposition = extractPreposition(token) || '';\n  var key = lowercaseFirstLetter(token.substring(preposition.length));\n  var scheme = formatDistanceLocale[key];\n\n  if (!(options !== null && options !== void 0 && options.addSuffix)) {\n    return prefixPreposition(preposition) + suffixPreposition(preposition) + declension(scheme, count, 'present');\n  }\n\n  if (options.comparison && options.comparison > 0) {\n    return prefixPreposition(preposition) + 'o ' + suffixPreposition(preposition) + declension(scheme, count, 'future');\n  } else {\n    return prefixPreposition(preposition) + 'pred ' + suffixPreposition(preposition) + declension(scheme, count, 'past');\n  }\n};\n\nexport default formatDistance;","map":{"version":3,"sources":["/Users/kimchanmi/Capstone-Kiwi/frontend/node_modules/date-fns/esm/locale/sk/_lib/formatDistance/index.js"],"names":["declensionGroup","scheme","count","one","twoFour","other","declension","time","group","finalText","replace","String","extractPreposition","token","result","filter","preposition","match","RegExp","prefixPreposition","translation","length","suffixPreposition","lowercaseFirstLetter","string","charAt","toLowerCase","slice","formatDistanceLocale","xSeconds","present","past","future","halfAMinute","xMinutes","xHours","xDays","xWeeks","xMonths","xYears","formatDistance","options","key","substring","addSuffix","comparison"],"mappings":"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","sourcesContent":["function declensionGroup(scheme, count) {\n  if (count === 1 && scheme.one) {\n    return scheme.one;\n  }\n\n  if (count >= 2 && count <= 4 && scheme.twoFour) {\n    return scheme.twoFour;\n  } // if count === null || count === 0 || count >= 5\n\n\n  return scheme.other;\n}\n\nfunction declension(scheme, count, time) {\n  var group = declensionGroup(scheme, count);\n  var finalText = group[time];\n  return finalText.replace('{{count}}', String(count));\n}\n\nfunction extractPreposition(token) {\n  var result = ['lessThan', 'about', 'over', 'almost'].filter(function (preposition) {\n    return !!token.match(new RegExp('^' + preposition));\n  });\n  return result[0];\n}\n\nfunction prefixPreposition(preposition) {\n  var translation = '';\n\n  if (preposition === 'almost') {\n    translation = 'takmer';\n  }\n\n  if (preposition === 'about') {\n    translation = 'približne';\n  }\n\n  return translation.length > 0 ? translation + ' ' : '';\n}\n\nfunction suffixPreposition(preposition) {\n  var translation = '';\n\n  if (preposition === 'lessThan') {\n    translation = 'menej než';\n  }\n\n  if (preposition === 'over') {\n    translation = 'viac než';\n  }\n\n  return translation.length > 0 ? translation + ' ' : '';\n}\n\nfunction lowercaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\nvar formatDistanceLocale = {\n  xSeconds: {\n    one: {\n      present: 'sekunda',\n      past: 'sekundou',\n      future: 'sekundu'\n    },\n    twoFour: {\n      present: '{{count}} sekundy',\n      past: '{{count}} sekundami',\n      future: '{{count}} sekundy'\n    },\n    other: {\n      present: '{{count}} sekúnd',\n      past: '{{count}} sekundami',\n      future: '{{count}} sekúnd'\n    }\n  },\n  halfAMinute: {\n    other: {\n      present: 'pol minúty',\n      past: 'pol minútou',\n      future: 'pol minúty'\n    }\n  },\n  xMinutes: {\n    one: {\n      present: 'minúta',\n      past: 'minútou',\n      future: 'minútu'\n    },\n    twoFour: {\n      present: '{{count}} minúty',\n      past: '{{count}} minútami',\n      future: '{{count}} minúty'\n    },\n    other: {\n      present: '{{count}} minút',\n      past: '{{count}} minútami',\n      future: '{{count}} minút'\n    }\n  },\n  xHours: {\n    one: {\n      present: 'hodina',\n      past: 'hodinou',\n      future: 'hodinu'\n    },\n    twoFour: {\n      present: '{{count}} hodiny',\n      past: '{{count}} hodinami',\n      future: '{{count}} hodiny'\n    },\n    other: {\n      present: '{{count}} hodín',\n      past: '{{count}} hodinami',\n      future: '{{count}} hodín'\n    }\n  },\n  xDays: {\n    one: {\n      present: 'deň',\n      past: 'dňom',\n      future: 'deň'\n    },\n    twoFour: {\n      present: '{{count}} dni',\n      past: '{{count}} dňami',\n      future: '{{count}} dni'\n    },\n    other: {\n      present: '{{count}} dní',\n      past: '{{count}} dňami',\n      future: '{{count}} dní'\n    }\n  },\n  xWeeks: {\n    one: {\n      present: 'týždeň',\n      past: 'týždňom',\n      future: 'týždeň'\n    },\n    twoFour: {\n      present: '{{count}} týždne',\n      past: '{{count}} týždňami',\n      future: '{{count}} týždne'\n    },\n    other: {\n      present: '{{count}} týždňov',\n      past: '{{count}} týždňami',\n      future: '{{count}} týždňov'\n    }\n  },\n  xMonths: {\n    one: {\n      present: 'mesiac',\n      past: 'mesiacom',\n      future: 'mesiac'\n    },\n    twoFour: {\n      present: '{{count}} mesiace',\n      past: '{{count}} mesiacmi',\n      future: '{{count}} mesiace'\n    },\n    other: {\n      present: '{{count}} mesiacov',\n      past: '{{count}} mesiacmi',\n      future: '{{count}} mesiacov'\n    }\n  },\n  xYears: {\n    one: {\n      present: 'rok',\n      past: 'rokom',\n      future: 'rok'\n    },\n    twoFour: {\n      present: '{{count}} roky',\n      past: '{{count}} rokmi',\n      future: '{{count}} roky'\n    },\n    other: {\n      present: '{{count}} rokov',\n      past: '{{count}} rokmi',\n      future: '{{count}} rokov'\n    }\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var preposition = extractPreposition(token) || '';\n  var key = lowercaseFirstLetter(token.substring(preposition.length));\n  var scheme = formatDistanceLocale[key];\n\n  if (!(options !== null && options !== void 0 && options.addSuffix)) {\n    return prefixPreposition(preposition) + suffixPreposition(preposition) + declension(scheme, count, 'present');\n  }\n\n  if (options.comparison && options.comparison > 0) {\n    return prefixPreposition(preposition) + 'o ' + suffixPreposition(preposition) + declension(scheme, count, 'future');\n  } else {\n    return prefixPreposition(preposition) + 'pred ' + suffixPreposition(preposition) + declension(scheme, count, 'past');\n  }\n};\n\nexport default formatDistance;"]},"metadata":{},"sourceType":"module"}