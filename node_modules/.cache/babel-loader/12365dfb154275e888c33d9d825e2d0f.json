{"ast":null,"code":"export function createUser(fields) {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"name\": fields.name,\n    \"email\": fields.email,\n    \"password\": fields.password\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  const result = fetch(\"http://localhost:8000/signup\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n  return result;\n}\nexport async function createToken(emailid, password) {\n  const response = await fetch(\"\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      emailid: emailid,\n      password: password\n    })\n  });\n  return await response.json();\n}","map":{"version":3,"sources":["/Users/yjwsis/Desktop/Kookmin_CS/2022 1학기/Capstone/개발/frontend/src/api/server.js"],"names":["createUser","fields","myHeaders","Headers","append","raw","JSON","stringify","name","email","password","requestOptions","method","headers","body","redirect","result","fetch","then","response","text","console","log","catch","error","createToken","emailid","json"],"mappings":"AAAA,OAAO,SAASA,UAAT,CAAoBC,MAApB,EAA4B;AACjC,MAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,MAAIC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AACvB,YAAQN,MAAM,CAACO,IADQ;AAEvB,aAASP,MAAM,CAACQ,KAFO;AAGvB,gBAAYR,MAAM,CAACS;AAHI,GAAf,CAAV;AAMA,MAAIC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAEX,SAFU;AAGnBY,IAAAA,IAAI,EAAET,GAHa;AAInBU,IAAAA,QAAQ,EAAE;AAJS,GAArB;AAOA,QAAMC,MAAM,GAAGC,KAAK,CAAC,8BAAD,EAAiCN,cAAjC,CAAL,CACZO,IADY,CACPC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADL,EAEZF,IAFY,CAEPF,MAAM,IAAIK,OAAO,CAACC,GAAR,CAAYN,MAAZ,CAFH,EAGZO,KAHY,CAGNC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CAHH,CAAf;AAIA,SAAOR,MAAP;AACD;AAED,OAAO,eAAeS,WAAf,CAA2BC,OAA3B,EAAoChB,QAApC,EAA8C;AACnD,QAAMS,QAAQ,GAAG,MAAMF,KAAK,CAAC,EAAD,EAAK;AAC/BL,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFsB;AAK/BC,IAAAA,IAAI,EAAER,IAAI,CAACC,SAAL,CAAe;AACnBmB,MAAAA,OAAO,EAAEA,OADU;AAEnBhB,MAAAA,QAAQ,EAAEA;AAFS,KAAf;AALyB,GAAL,CAA5B;AAUA,SAAO,MAAMS,QAAQ,CAACQ,IAAT,EAAb;AACD","sourcesContent":["export function createUser(fields) {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  var raw = JSON.stringify({\n    \"name\": fields.name,\n    \"email\": fields.email,\n    \"password\": fields.password\n  });\n\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n\n  const result = fetch(\"http://localhost:8000/signup\", requestOptions)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n  return result\n}\n\nexport async function createToken(emailid, password) {\n  const response = await fetch(\"\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      emailid: emailid,\n      password: password,\n    }),\n  });\n  return await response.json();\n}\n"]},"metadata":{},"sourceType":"module"}