{"ast":null,"code":"import e from \"axios\";\nimport t from \"js-cookie\";\nconst n = {\n  user: {},\n  tokens: {},\n  mode: \"live\"\n};\n\nfunction r(e) {\n  try {\n    const t = e.split(\".\")[1].replace(\"-\", \"+\").replace(\"_\", \"/\");\n    return JSON.parse(atob(t));\n  } catch (e) {\n    console.error(\"Problem decoding JWT payload\", e);\n  }\n}\n\nfunction o(e) {\n  var t, n;\n\n  if (e) {\n    if (\"string\" == typeof e) throw new Error(e);\n    if (null != e && null != (t = e.response) && null != (n = t.data) && n.message) throw new Error(e.response.data.message);\n    throw e;\n  }\n}\n\nconst s = n.user;\n\nfunction i(e, r, o) {\n  const s = `${o}.${n.tenantId}`;\n  r = r || {\n    secure: \"live\" === n.mode,\n    sameSite: \"Lax\"\n  }, \"refresh\" === o && (r.sameSite = \"Strict\"), t.set(s, e, r);\n}\n\nfunction a(e) {\n  t.remove(e), t.remove(e, {\n    secure: !0,\n    sameSite: \"Lax\"\n  }), t.remove(e, {\n    secure: !0,\n    sameSite: \"None\"\n  }), t.remove(e, {\n    secure: !1,\n    sameSite: \"Lax\"\n  }), t.remove(e, {\n    secure: !1,\n    sameSite: \"None\"\n  });\n}\n\nfunction c() {\n  a(n.tokens.accessTokenName), a(n.tokens.idTokenName), a(n.tokens.refreshTokenName), n.tokens.accessToken = void 0, n.tokens.idToken = void 0, n.tokens.refreshToken = void 0, function () {\n    for (const e in n.user) \"function\" != typeof n.user[e] && delete n.user[e];\n  }();\n}\n\nfunction u(e) {\n  i(e.access.value, e.access.cookieOptions, \"access\"), i(e.id.value, e.id.cookieOptions, \"id\"), e.refresh && e.refresh.value && i(e.refresh.value, e.refresh.cookieOptions, \"refresh\"), f();\n}\n\nfunction d(e, t) {\n  try {\n    var n = e();\n  } catch (e) {\n    return t(e);\n  }\n\n  return n && n.then ? n.then(void 0, t) : n;\n}\n\nconst l = function (_ref) {\n  let {} = _ref;\n  return Promise.resolve();\n},\n      h = function () {\n  try {\n    const r = d(function () {\n      return Promise.resolve(function () {\n        try {\n          const r = t.get(n.tokens.refreshTokenName);\n          return Promise.resolve(d(function () {\n            return Promise.resolve(e.get(n.baseUrl + \"auth/refresh\", {\n              headers: {\n                authorization: \"Bearer \" + r\n              }\n            })).then(function (_ref2) {\n              let {\n                data: e,\n                status: t\n              } = _ref2;\n              if (200 !== t) throw new Error(e.message || \"Problem with request\");\n              if (e.tokens) return u(e.tokens), e;\n              throw new Error(\"Problem setting cookies\");\n            });\n          }, function (e) {\n            o(e);\n          }));\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }()).then(function () {});\n    }, function (e) {\n      console.warn(\"Refresh failed: \" + e.message);\n    });\n    return Promise.resolve(r && r.then ? r.then(function () {}) : void 0);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nfunction f() {\n  [\"access\", \"id\", \"refresh\"].map(e => {\n    try {\n      const o = t.get(n.tokens[e + \"TokenName\"]);\n      n.tokens[e + \"Token\"] = o, \"id\" === e && o && function () {\n        if (!n.tokens.idToken) return console.warn(\"Cannot define user: missing ID token\");\n        n.user = n.user || {};\n        const e = r(n.tokens.idToken),\n              t = [\"email\", \"username\", \"name\", \"image\", \"data\", \"confirmedAt\", \"createdAt\", \"updatedAt\", \"mode\", \"userId\", \"userUuid\", \"tenantId\", \"isConfirmed\"];\n\n        for (const r of t) {\n          if (\"update\" === r) return;\n          n.user[r] = e[r];\n        }\n      }();\n    } catch (t) {\n      console.warn(`Problem setting ${e} token.`);\n    }\n  });\n}\n\nn.tokens = n.tokens || {}, n.tokens.refresh = h;\nconst m = n.tokens;\n\nfunction w(e) {\n  if (\"object\" == typeof window && \"object\" == typeof window.location && window.location.href && !(window.location.href.indexOf(e + \"=\") < 0)) return decodeURIComponent(window.location.href.split(e + \"=\")[1].split(\"&\")[0]);\n}\n\nfunction p(e) {\n  if (!e || \"object\" != typeof document || \"object\" != typeof window) return;\n\n  try {\n    document && window;\n  } catch (e) {\n    return;\n  }\n\n  const t = document.createElement(\"a\");\n  t.href = e, t.pathname !== window.location.pathname && window.location.assign(`${t.pathname}${t.hash}${t.search}`);\n}\n\nfunction k(e, t) {\n  try {\n    var n = e();\n  } catch (e) {\n    return t(e);\n  }\n\n  return n && n.then ? n.then(void 0, t) : n;\n}\n\nconst v = function (_ref3) {\n  let {\n    email: t,\n    name: r,\n    username: s,\n    userData: i,\n    options: a\n  } = _ref3;\n\n  try {\n    return Promise.resolve(k(function () {\n      return Promise.resolve(e.post(n.baseUrl + \"auth/link\", {\n        email: t,\n        name: r,\n        username: s,\n        data: i,\n        options: a,\n        tenantId: n.tenantId\n      })).then(function (_ref4) {\n        let {\n          data: e\n        } = _ref4;\n        return e;\n      });\n    }, function (e) {\n      o(e);\n    }));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nfunction g(_ref5) {\n  let {\n    provider: e,\n    redirect: t\n  } = _ref5;\n  if (!e) throw new Error(\"Missing provider\");\n  if (!n.tenantId) throw new Error(\"Missing tenant ID\");\n  let r = `${n.baseUrl}auth/${e}/login?tenant_id=${n.tenantId}&origin=${window.location.origin}`,\n      o = t || w(\"redirect\");\n  return !1 === t && (o = \"object\" == typeof document && document.location.pathname), o && (r += \"&redirect=\" + encodeURIComponent(o)), r;\n}\n\nfunction P(e, t) {\n  try {\n    var n = e();\n  } catch (e) {\n    return t(e);\n  }\n\n  return n && n.then ? n.then(void 0, t) : n;\n}\n\nconst y = /((^127\\.)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.))\\d{1,3}\\.\\d{1,3}/g,\n      b = function () {\n  try {\n    const t = function (t, r) {\n      try {\n        var o = Promise.resolve(e.get(`${n.baseUrl}tenants/${n.tenantId}/mode`)).then(function (_ref6) {\n          let {\n            data: e\n          } = _ref6;\n          T.value = e.mode || \"test\", T.reason = U(T.value), n.mode = T.value;\n        });\n      } catch (e) {\n        return r();\n      }\n\n      return o && o.then ? o.then(void 0, r) : o;\n    }(0, function () {\n      T.value = \"test\", n.mode = T.value;\n    });\n\n    return Promise.resolve(t && t.then ? t.then(function () {}) : void 0);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n      T = {\n  value: \"live\",\n  reason: void 0,\n  setMode: b\n};\n\nfunction I() {\n  const e = function (e) {\n    try {\n      const e = window.location.hostname;\n      return !(!e.match(/localhost/g) && !e.match(y));\n    } catch (e) {\n      return !0;\n    }\n  }() || !function () {\n    try {\n      return \"https:\" === window.location.protocol;\n    } catch (e) {\n      return !1;\n    }\n  }() ? \"test\" : \"live\";\n  T.value = e, T.reason = U(e), n.mode = e;\n}\n\nfunction U(e) {\n  try {\n    return \"live\" === e ? \"domain\" : \"http:\" === window.location.protocol ? \"http\" : \"https:\" !== window.location.protocol ? \"protocol\" : \"domain\";\n  } catch (e) {}\n}\n\nI(), n.user.update = function (t) {\n  try {\n    return !t || Object.keys(t).length < 1 ? Promise.resolve(console.warn(\"Missing user properties to update\")) : Promise.resolve(e.put(n.baseUrl + \"self\", t, {\n      headers: {\n        authorization: \"Bearer \" + n.tokens.accessToken\n      }\n    })).then(function () {\n      return Promise.resolve(h()).then(function () {\n        return n.user;\n      });\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}, n.user.hasRole = function (e) {\n  let {\n    tenantId: t\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  try {\n    if (!n.tokens.accessToken || !n.tenantId) return !1;\n    const {\n      authorization: o\n    } = r(n.tokens.accessToken);\n    return !!o && !(!o[t = t || n.tenantId] || !o[t].roles) && o[t].roles.indexOf(e) > -1;\n  } catch (e) {\n    return !1;\n  }\n};\nlet E = [],\n    j = !1;\nvar $ = {\n  addInitCallback: function (e) {\n    e && \"function\" == typeof e && E.push(e);\n  },\n  init: function (t) {\n    let r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!t) return console.warn(\"Userfront initialized without tenant ID\");\n    n.tenantId = t, n.baseUrl = r.baseUrl || \"https://api.userfront.com/v0/\", n.baseUrl.endsWith(\"/\") || (n.baseUrl += \"/\"), r.domain && (n.domain = r.domain, e.defaults.headers.common[\"x-application-id\"] = \"https://\" + n.domain), n.tokens = n.tokens || {}, n.tokens.accessTokenName = \"access.\" + n.tenantId, n.tokens.idTokenName = \"id.\" + n.tenantId, n.tokens.refreshTokenName = \"refresh.\" + n.tenantId, f(), I();\n\n    try {\n      E.length > 0 && E.forEach(e => {\n        e && \"function\" == typeof e && e({\n          tenantId: t\n        });\n      }), E = [];\n    } catch (e) {}\n  },\n  registerUrlChangedEventListener: function () {\n    if (!j) {\n      j = !0;\n\n      try {\n        history.pushState = (e = history.pushState, function () {\n          var t = e.apply(this, arguments);\n          return window.dispatchEvent(new Event(\"pushstate\")), window.dispatchEvent(new Event(\"urlchanged\")), t;\n        }), history.replaceState = (e => function () {\n          var t = e.apply(this, arguments);\n          return window.dispatchEvent(new Event(\"replacestate\")), window.dispatchEvent(new Event(\"urlchanged\")), t;\n        })(history.replaceState), window.addEventListener(\"popstate\", () => {\n          window.dispatchEvent(new Event(\"urlchanged\"));\n        });\n      } catch (e) {}\n\n      var e;\n    }\n  },\n  logout: function () {\n    let {\n      method: t,\n      redirect: r\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      return \"saml\" === t ? function () {\n        try {\n          if (!n.tokens.accessToken) throw new Error(\"Please log in to authorize your logout request.\");\n          const t = P(function () {\n            return Promise.resolve(e.get(n.baseUrl + \"auth/saml/idp/token\", {\n              headers: {\n                authorization: \"Bearer \" + n.tokens.accessToken\n              }\n            })).then(function (_ref7) {\n              let {\n                data: e\n              } = _ref7;\n              window.location.assign(`${n.baseUrl}auth/saml/idp/logout?tenant_id=${n.tenantId}&token=${e.token}&uuid=${n.user.userUuid}`);\n            });\n          }, function (e) {\n            o(e);\n          });\n          return Promise.resolve(t && t.then ? t.then(function () {}) : void 0);\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }() : Promise.resolve(n.tokens.accessToken ? P(function () {\n        return Promise.resolve(e.get(n.baseUrl + \"auth/logout\", {\n          headers: {\n            authorization: \"Bearer \" + n.tokens.accessToken\n          }\n        })).then(function (_ref8) {\n          let {\n            data: e\n          } = _ref8;\n          c(), !1 !== r && p(r || e.redirectTo);\n        });\n      }, function () {\n        c();\n      }) : c());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  mode: T,\n  setMode: b,\n  refresh: (e, t, n) => {\n    try {\n      console.warn(\"Userfront.refresh() is deprecated and will be removed. Please use Userfront.tokens.refresh() instead.\");\n    } catch (e) {}\n\n    return h();\n  },\n  login: function () {\n    let {\n      method: t,\n      email: r,\n      username: s,\n      emailOrUsername: i,\n      password: a,\n      token: c,\n      uuid: d,\n      redirect: h\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      if (!t) throw new Error('Userfront.login called without \"method\" property.');\n\n      switch (t) {\n        case \"azure\":\n        case \"facebook\":\n        case \"github\":\n        case \"google\":\n        case \"linkedin\":\n          return Promise.resolve(function (_ref9) {\n            let {\n              provider: e,\n              redirect: t\n            } = _ref9;\n            if (!e) throw new Error(\"Missing provider\");\n            const n = g({\n              provider: e,\n              redirect: t\n            });\n            window.location.assign(n);\n          }({\n            provider: t,\n            redirect: h\n          }));\n\n        case \"password\":\n          return function (_ref10) {\n            let {\n              email: t,\n              username: r,\n              emailOrUsername: s,\n              password: i,\n              redirect: a\n            } = _ref10;\n\n            try {\n              return Promise.resolve(k(function () {\n                return Promise.resolve(e.post(n.baseUrl + \"auth/basic\", {\n                  tenantId: n.tenantId,\n                  emailOrUsername: t || r || s,\n                  password: i\n                })).then(function (_ref11) {\n                  let {\n                    data: e\n                  } = _ref11;\n                  if (e.tokens) return u(e.tokens), Promise.resolve(l(e)).then(function () {\n                    return !1 === a || p(a || w(\"redirect\") || e.redirectTo || \"/\"), e;\n                  });\n                  throw new Error(\"Please try again.\");\n                });\n              }, function (e) {\n                o(e);\n              }));\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }({\n            email: r,\n            username: s,\n            emailOrUsername: i,\n            password: a,\n            redirect: h\n          });\n\n        case \"passwordless\":\n          return v({\n            email: r\n          });\n\n        case \"link\":\n          return function () {\n            let {\n              token: t,\n              uuid: r,\n              redirect: s\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            try {\n              return Promise.resolve(k(function () {\n                if (t = t || w(\"token\"), r = r || w(\"uuid\"), t && r) return Promise.resolve(e.put(n.baseUrl + \"auth/link\", {\n                  token: t,\n                  uuid: r,\n                  tenantId: n.tenantId\n                })).then(function (_ref12) {\n                  let {\n                    data: e\n                  } = _ref12;\n                  if (e.tokens) return u(e.tokens), Promise.resolve(l(e)).then(function () {\n                    return !1 === s || p(s || w(\"redirect\") || e.redirectTo || \"/\"), e;\n                  });\n                  throw new Error(\"Problem logging in.\");\n                });\n              }, function (e) {\n                o(e);\n              }));\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }({\n            token: c,\n            uuid: d,\n            redirect: h\n          });\n\n        case \"saml\":\n          return function () {\n            try {\n              return Promise.resolve(k(function () {\n                return n.tokens.accessToken ? Promise.resolve(e.get(n.baseUrl + \"auth/saml/idp/token\", {\n                  headers: {\n                    authorization: \"Bearer \" + n.tokens.accessToken\n                  }\n                })).then(function (_ref13) {\n                  let {\n                    data: e\n                  } = _ref13;\n                  window.location.assign(`${n.baseUrl}auth/saml/idp/login?tenant_id=${n.tenantId}&token=${e.token}&uuid=${n.user.userUuid}`);\n                }) : console.warn(\"Cannot complete SAML login without access token\");\n              }, function (e) {\n                o(e);\n              }));\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }();\n\n        default:\n          throw new Error('Userfront.login called with invalid \"method\" property.');\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  resetPassword: function (_ref14) {\n    let {\n      uuid: t,\n      token: r,\n      password: s,\n      redirect: i\n    } = _ref14;\n\n    try {\n      return Promise.resolve(k(function () {\n        if (r = r || w(\"token\"), t = t || w(\"uuid\"), !r || !t) throw new Error(\"Missing token or uuid\");\n        return Promise.resolve(e.put(n.baseUrl + \"auth/reset\", {\n          tenantId: n.tenantId,\n          uuid: t,\n          token: r,\n          password: s\n        })).then(function (_ref15) {\n          let {\n            data: e\n          } = _ref15;\n          if (e.tokens) return u(e.tokens), !1 === i || p(i || w(\"redirect\") || e.redirectTo || \"/\"), e;\n          throw new Error(\"There was a problem resetting your password. Please try again.\");\n        });\n      }, function (e) {\n        o(e);\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  sendLoginLink: function (t) {\n    try {\n      return Promise.resolve(k(function () {\n        return Promise.resolve(e.post(n.baseUrl + \"auth/link\", {\n          email: t,\n          tenantId: n.tenantId\n        })).then(function (_ref16) {\n          let {\n            data: e\n          } = _ref16;\n          return e;\n        });\n      }, function (e) {\n        o(e);\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  sendResetLink: function (t) {\n    try {\n      return Promise.resolve(k(function () {\n        return Promise.resolve(e.post(n.baseUrl + \"auth/reset/link\", {\n          email: t,\n          tenantId: n.tenantId\n        })).then(function (_ref17) {\n          let {\n            data: e\n          } = _ref17;\n          return e;\n        });\n      }, function (e) {\n        o(e);\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  signup: function () {\n    let {\n      method: t,\n      username: r,\n      name: s,\n      email: i,\n      password: a,\n      data: c,\n      redirect: d\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      if (!t) throw new Error('Userfront.signup called without \"method\" property.');\n\n      switch (t) {\n        case \"azure\":\n        case \"facebook\":\n        case \"github\":\n        case \"google\":\n        case \"linkedin\":\n          return Promise.resolve(function (_ref18) {\n            let {\n              provider: e,\n              redirect: t\n            } = _ref18;\n            if (!e) throw new Error(\"Missing provider\");\n            const n = g({\n              provider: e,\n              redirect: t\n            });\n            window.location.assign(n);\n          }({\n            provider: t,\n            redirect: d\n          }));\n\n        case \"password\":\n          return function () {\n            let {\n              username: t,\n              name: r,\n              email: s,\n              password: i,\n              userData: a,\n              redirect: c\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            try {\n              return Promise.resolve(k(function () {\n                return Promise.resolve(e.post(n.baseUrl + \"auth/create\", {\n                  tenantId: n.tenantId,\n                  username: t,\n                  name: r,\n                  email: s,\n                  password: i,\n                  data: a\n                })).then(function (_ref19) {\n                  let {\n                    data: e\n                  } = _ref19;\n                  if (e.tokens) return u(e.tokens), Promise.resolve(l(e)).then(function () {\n                    return !1 === c || p(c || w(\"redirect\") || e.redirectTo || \"/\"), e;\n                  });\n                  throw new Error(\"Please try again.\");\n                });\n              }, function (e) {\n                o(e);\n              }));\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }({\n            username: r,\n            name: s,\n            email: i,\n            password: a,\n            userData: c,\n            redirect: d\n          });\n\n        case \"passwordless\":\n          return v({\n            email: i,\n            name: s,\n            username: r,\n            userData: c\n          });\n\n        default:\n          throw new Error('Userfront.signup called with invalid \"method\" property.');\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  store: n,\n  tokens: m,\n  accessToken: function () {\n    return n.tokens.accessToken = t.get(n.tokens.accessTokenName), n.tokens.accessToken;\n  },\n  idToken: function () {\n    return n.tokens.idToken = t.get(n.tokens.idTokenName), n.tokens.idToken;\n  },\n  redirectIfLoggedIn: function () {\n    let {\n      redirect: t\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      if (!n.tokens.accessToken) return Promise.resolve(c());\n      if (t) return Promise.resolve(p(t));\n      if (w(\"redirect\")) return Promise.resolve(p(w(\"redirect\")));\n\n      const r = function (t, r) {\n        try {\n          var o = Promise.resolve(e.get(n.baseUrl + \"self\", {\n            headers: {\n              authorization: \"Bearer \" + n.tokens.accessToken\n            }\n          })).then(function (_ref20) {\n            let {\n              data: e\n            } = _ref20;\n            e.tenant && e.tenant.loginRedirectPath && p(e.tenant.loginRedirectPath);\n          });\n        } catch (e) {\n          return r();\n        }\n\n        return o && o.then ? o.then(void 0, r) : o;\n      }(0, function () {\n        c();\n      });\n\n      return Promise.resolve(r && r.then ? r.then(function () {}) : void 0);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  user: s\n};\nexport default $;","map":{"version":3,"mappings":"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","names":["store","user","tokens","mode","getJWTPayload","token","encodedPayload","split","replace","JSON","parse","atob","error","console","throwFormattedError","Error","response","_error$response","data","_error$response$data","message","setCookie","value","options","type","cookieName","tenantId","secure","sameSite","Cookies","set","removeCookie","name","remove","removeAllCookies","accessTokenName","idTokenName","refreshTokenName","accessToken","undefined","idToken","refreshToken","attr","unsetUser","setCookiesAndTokens","access","cookieOptions","id","refresh","setTokensFromCookies","body","recover","result","e","then","exchange","get","axios","baseUrl","headers","authorization","status","basicRefresh","warn","map","tokenName","idTokenPayload","propsToDefine","prop","setUser","getQueryAttr","attrName","window","location","href","indexOf","decodeURIComponent","redirectToPath","pathOrUrl","document","el","createElement","pathname","assign","hash","search","sendPasswordlessLink","email","username","userData","post","getProviderLink","redirect","provider","url","origin","redirectTo","encodeURIComponent","privateIPRegex","setMode","reason","getReason","setModeSync","modeValue","hn","hostname","match","err","isTestHostname","protocol","isHttps","update","payload","Object","keys","length","Promise","put","hasRole","roleName","roles","initCallbacks","isRegistered","addInitCallback","cb","push","init","opts","endsWith","domain","defaults","common","forEach","registerUrlChangedEventListener","history","pushState","f","ret","apply","this","arguments","dispatchEvent","Event","replaceState","addEventListener","logout","method","userUuid","completeSamlLogout","a","b","c","login","emailOrUsername","password","uuid","loginWithSSO","loginWithPassword","loginWithLink","completeSamlLogin","resetPassword","sendLoginLink","sendResetLink","signup","signupWithSSO","signupWithPassword","redirectIfLoggedIn","tenant","loginRedirectPath"],"sources":["/Users/100s/Documents/GitHub/frontend/node_modules/@userfront/core/src/store.js","/Users/100s/Documents/GitHub/frontend/node_modules/@userfront/core/src/utils.js","/Users/100s/Documents/GitHub/frontend/node_modules/@userfront/core/src/user.js","/Users/100s/Documents/GitHub/frontend/node_modules/@userfront/core/src/cookies.js","/Users/100s/Documents/GitHub/frontend/node_modules/@userfront/core/src/tokens.js","/Users/100s/Documents/GitHub/frontend/node_modules/@userfront/core/src/refresh.js","/Users/100s/Documents/GitHub/frontend/node_modules/@userfront/core/src/url.js","/Users/100s/Documents/GitHub/frontend/node_modules/@userfront/core/src/signon.js","/Users/100s/Documents/GitHub/frontend/node_modules/@userfront/core/src/logout.js","/Users/100s/Documents/GitHub/frontend/node_modules/@userfront/core/src/constants.js","/Users/100s/Documents/GitHub/frontend/node_modules/@userfront/core/src/mode.js","/Users/100s/Documents/GitHub/frontend/node_modules/@userfront/core/src/user.methods.js","/Users/100s/Documents/GitHub/frontend/node_modules/@userfront/core/src/index.js"],"sourcesContent":["export const store = {\n  user: {},\n  tokens: {},\n  mode: \"live\",\n};\n","/**\n * This file is for zero-dependency utilities that can\n * be imported by any other file. Don't add any imports\n * to this file other than constants\n */\n\n/**\n * Get the unverified base64 decoded payload of a JWT\n *\n * @param {String} token - JSON Web Token\n * @returns {Object}\n */\nexport function getJWTPayload(token) {\n  try {\n    const encodedPayload = token\n      .split(\".\")[1]\n      .replace(\"-\", \"+\")\n      .replace(\"_\", \"/\");\n    return JSON.parse(atob(encodedPayload));\n  } catch (error) {\n    console.error(\"Problem decoding JWT payload\", error);\n  }\n}\n\nexport function throwFormattedError(error) {\n  if (!error) return;\n  if (typeof error === \"string\") throw new Error(error);\n  if (error?.response?.data?.message) {\n    throw new Error(error.response.data.message);\n  }\n  throw error;\n}\n","import { store } from \"./store.js\";\nimport { getJWTPayload } from \"./utils.js\";\n\n/**\n * Define the store.user object based on the ID token\n */\nexport function setUser() {\n  if (!store.tokens.idToken) {\n    return console.warn(\"Cannot define user: missing ID token\");\n  }\n\n  store.user = store.user || {};\n  const idTokenPayload = getJWTPayload(store.tokens.idToken);\n\n  // Set basic user information properties from ID token\n  const propsToDefine = [\n    \"email\",\n    \"username\",\n    \"name\",\n    \"image\",\n    \"data\",\n    \"confirmedAt\",\n    \"createdAt\",\n    \"updatedAt\",\n    \"mode\",\n    \"userId\",\n    \"userUuid\",\n    \"tenantId\",\n    \"isConfirmed\",\n  ];\n  for (const prop of propsToDefine) {\n    if (prop === \"update\") return;\n    store.user[prop] = idTokenPayload[prop];\n  }\n}\n\n/**\n * Remove all user information\n */\nexport function unsetUser() {\n  for (const attr in store.user) {\n    if (typeof store.user[attr] !== \"function\") {\n      delete store.user[attr];\n    }\n  }\n}\n\n/**\n * Export the store.user object with the update method added\n */\nexport const user = store.user;\n","import Cookies from \"js-cookie\";\nimport { store } from \"./store.js\";\nimport { setTokensFromCookies, unsetTokens } from \"./tokens.js\";\n\n/**\n * Set a cookie value based on the given options.\n * @param {String} value\n * @param {Object} options\n * @param {String} type\n */\nexport function setCookie(value, options, type) {\n  const cookieName = `${type}.${store.tenantId}`;\n  options = options || {\n    secure: store.mode === \"live\",\n    sameSite: \"Lax\",\n  };\n  if (type === \"refresh\") {\n    options.sameSite = \"Strict\";\n  }\n  Cookies.set(cookieName, value, options);\n}\n\n/**\n * Remove a cookie by name, regardless of its cookie setting(s).\n * @param {String} name\n */\nfunction removeCookie(name) {\n  Cookies.remove(name);\n  Cookies.remove(name, { secure: true, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: true, sameSite: \"None\" });\n  Cookies.remove(name, { secure: false, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: false, sameSite: \"None\" });\n}\n\n/**\n * Remove all auth cookies (access, id, refresh).\n */\nexport function removeAllCookies() {\n  removeCookie(store.tokens.accessTokenName);\n  removeCookie(store.tokens.idTokenName);\n  removeCookie(store.tokens.refreshTokenName);\n  unsetTokens();\n}\n\n/**\n * Set the cookies from a tokens object, and add to the local store.\n * @param {Object} tokens\n */\nexport function setCookiesAndTokens(tokens) {\n  setCookie(tokens.access.value, tokens.access.cookieOptions, \"access\");\n  setCookie(tokens.id.value, tokens.id.cookieOptions, \"id\");\n  if (tokens.refresh && tokens.refresh.value) {\n    setCookie(tokens.refresh.value, tokens.refresh.cookieOptions, \"refresh\");\n  }\n  setTokensFromCookies();\n}\n","import Cookies from \"js-cookie\";\nimport { store } from \"./store.js\";\nimport { setUser, unsetUser } from \"./user.js\";\nimport { refresh } from \"./refresh.js\";\n\nstore.tokens = store.tokens || {};\nstore.tokens.refresh = refresh;\n\nexport function setTokenNames() {\n  store.tokens = store.tokens || {};\n  store.tokens.accessTokenName = `access.${store.tenantId}`;\n  store.tokens.idTokenName = `id.${store.tenantId}`;\n  store.tokens.refreshTokenName = `refresh.${store.tenantId}`;\n}\n\n/**\n * Set and then return the access token\n */\nexport function accessToken() {\n  store.tokens.accessToken = Cookies.get(store.tokens.accessTokenName);\n  return store.tokens.accessToken;\n}\n\n/**\n * Set and then return the ID token\n */\nexport function idToken() {\n  store.tokens.idToken = Cookies.get(store.tokens.idTokenName);\n  return store.tokens.idToken;\n}\n\n/**\n * Define the store token values from the cookie values.\n */\nexport function setTokensFromCookies() {\n  const tokenNames = [\"access\", \"id\", \"refresh\"];\n  tokenNames.map((tokenName) => {\n    try {\n      const token = Cookies.get(store.tokens[`${tokenName}TokenName`]);\n      store.tokens[`${tokenName}Token`] = token;\n\n      // Set the user object whenever the ID token is set\n      if (tokenName === \"id\" && token) {\n        setUser();\n      }\n    } catch (error) {\n      console.warn(`Problem setting ${tokenName} token.`);\n    }\n  });\n}\n\n/**\n * Set the store token values to undefined\n */\nexport function unsetTokens() {\n  store.tokens.accessToken = undefined;\n  store.tokens.idToken = undefined;\n  store.tokens.refreshToken = undefined;\n  unsetUser();\n}\n\n/**\n * Export the store.tokens object\n */\nexport const tokens = store.tokens;\n\n// NOTE Commenting this out 6/11/21 because the packages it relies on (jsonwebtoken & jwks-rsa)\n// both cause a lot of bloat. If we want to verify tokens, this is a nice way to do it, but\n// we need to find libraries designed for the browser instead of node.\n/**\n * Verify the provided token\n * @param {String} token\n * @returns {Promise<void>} The provided token has been verified if `verifyToken` resolves without error\n */\n// export async function verifyToken(token) {\n//   if (!token) throw new Error(\"Missing token\");\n\n//   let publicKey;\n//   try {\n//     const decodedToken = jwt.decode(token, { complete: true });\n//     if (!decodedToken.header || !decodedToken.header.kid) {\n//       throw new Error(\"Token kid not defined\");\n//     }\n\n//     const client = new JwksClient({\n//       jwksUri: `${apiUrl}tenants/${store.tenantId}/jwks/${store.mode}`,\n//       requestHeaders: { origin: window.location.origin },\n//     });\n\n//     const key = await client.getSigningKey(decodedToken.header.kid);\n//     publicKey = key.getPublicKey();\n//   } catch (error) {\n//     throw error;\n//   }\n\n//   if (!publicKey) {\n//     throw new Error(\"Public key not found\");\n//   }\n\n//   try {\n//     jwt.verify(token, publicKey);\n//   } catch (error) {\n//     throw new Error(\"Token verification failed\");\n//   }\n\n//   return Promise.resolve();\n// }\n","import Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport { setCookiesAndTokens } from \"./cookies.js\";\nimport { store } from \"./store.js\";\n// import { getIframe, postMessageAsPromise } from \"./iframe.js\";\nimport { throwFormattedError } from \"./utils.js\";\n\n/**\n * Refresh the access and ID tokens\n * - When in test mode, uses the basic refresh method\n * - For tenants without a custom SSL certificate, uses the basic refresh method\n * - For tenants with a custom SSL certificate and in live mode, uses the httpOnly refresh method\n * @returns {Promise}\n */\nexport async function refresh() {\n  try {\n    await basicRefresh();\n  } catch (error) {\n    console.warn(`Refresh failed: ${error.message}`);\n  }\n}\n\n/**\n * Use a regular (non-httpOnly) cookie to refresh the access and ID tokens.\n *\n * The basic refresh method is used automatically in test mode and in live\n * mode whenever an SSL certificate has not been set up.\n */\nasync function basicRefresh() {\n  const refreshToken = Cookies.get(store.tokens.refreshTokenName);\n  try {\n    const { data, status } = await axios.get(`${store.baseUrl}auth/refresh`, {\n      headers: {\n        authorization: `Bearer ${refreshToken}`,\n      },\n    });\n    if (status !== 200) {\n      throw new Error(data.message || \"Problem with request\");\n    }\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      return data;\n    } else {\n      throw new Error(\"Problem setting cookies\");\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n// TODO re-enable httpOnly refresh method once new endpoints are stable [06/15/21]\n/**\n *\n * The httpOnly refresh method is only available for tenants with configured\n * SSL certificates while in live mode.\n */\n// async function httpOnlyRefresh() {\n//   const iframe = getIframe();\n//   if (!iframe) return;\n//   return postMessageAsPromise({\n//     type: \"refresh\",\n//     tenantId: store.tenantId,\n//   });\n// }\n\n/**\n * Use a sessionId and nonce to set the iframe refresh token\n * @param {String} sessionId\n * @param {String} nonce\n * @returns {Promise}\n */\nexport async function exchange({ sessionId, nonce }) {\n  return;\n\n  // TODO re-enable httpOnly exchange method once new endpoints are stable [06/15/21]\n  // --------------------------\n  // const iframe = getIframe();\n  // if (!iframe) return;\n  // return postMessageAsPromise({\n  //   type: \"exchange\",\n  //   tenantId: store.tenantId,\n  //   payload: {\n  //     sessionId,\n  //     nonce,\n  //   },\n  // });\n}\n","import axios from \"axios\";\n\nimport { store } from \"./store.js\";\nimport { removeAllCookies } from \"./cookies.js\";\n\n/**\n * Get the value of a query attribute, e.g. ?attr=value\n * @param {String} attrName\n */\nexport function getQueryAttr(attrName) {\n  if (\n    typeof window !== \"object\" ||\n    typeof window.location !== \"object\" ||\n    !window.location.href ||\n    window.location.href.indexOf(`${attrName}=`) < 0\n  ) {\n    return;\n  }\n  return decodeURIComponent(\n    window.location.href.split(`${attrName}=`)[1].split(\"&\")[0]\n  );\n}\n\n// TODO replace with direct check of the access token.\n/**\n * If the access token is valid, redirect the browser to the\n * tenant's login redirection path (path after login).\n */\nexport async function redirectIfLoggedIn({ redirect } = {}) {\n  if (!store.tokens.accessToken) {\n    return removeAllCookies();\n  }\n\n  // Redirect to a provided path (check options first, then url querystring)\n  if (redirect) {\n    return redirectToPath(redirect);\n  } else if (getQueryAttr(\"redirect\")) {\n    return redirectToPath(getQueryAttr(\"redirect\"));\n  }\n\n  // If no path was provided, look up the path and then redirect there\n  try {\n    const { data } = await axios.get(`${store.baseUrl}self`, {\n      headers: {\n        authorization: `Bearer ${store.tokens.accessToken}`,\n      },\n    });\n    if (data.tenant && data.tenant.loginRedirectPath) {\n      redirectToPath(data.tenant.loginRedirectPath);\n    }\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n\n/**\n * Redirect to path portion of a URL.\n */\nexport function redirectToPath(pathOrUrl) {\n  // Return if no pathOrUrl, or if SSR or mobile\n  if (\n    !pathOrUrl ||\n    typeof document !== \"object\" ||\n    typeof window !== \"object\"\n  ) {\n    return;\n  }\n  try {\n    document && window;\n  } catch (error) {\n    return;\n  }\n\n  // Perform hard redirect\n  const el = document.createElement(\"a\");\n  el.href = pathOrUrl;\n  let path = `${el.pathname}${el.hash}${el.search}`;\n  if (el.pathname !== window.location.pathname) {\n    window.location.assign(path);\n  }\n}\n","import axios from \"axios\";\nimport { setCookiesAndTokens } from \"./cookies.js\";\nimport { store } from \"./store.js\";\nimport { getQueryAttr, redirectToPath } from \"./url.js\";\nimport { exchange } from \"./refresh.js\";\nimport { throwFormattedError } from \"./utils.js\";\n\n/**\n * This file has methods for signing up and logging in\n */\n\n/**\n * Register a user via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {String} method\n * @param {String} username\n * @param {String} name\n * @param {String} email\n * @param {String} password\n * @param {Object} data - Object for custom user fields\n * @param {String} redirect - path to redirect to, or if false, do not redirect\n */\nexport async function signup({\n  method,\n  username,\n  name,\n  email,\n  password,\n  data,\n  redirect,\n} = {}) {\n  if (!method) {\n    throw new Error('Userfront.signup called without \"method\" property.');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return signupWithSSO({ provider: method, redirect });\n    case \"password\":\n      return signupWithPassword({\n        username,\n        name,\n        email,\n        password,\n        userData: data,\n        redirect,\n      });\n    case \"passwordless\":\n      return sendPasswordlessLink({ email, name, username, userData: data });\n    default:\n      throw new Error(\n        'Userfront.signup called with invalid \"method\" property.'\n      );\n  }\n}\n\n/**\n * Register a new user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n */\nfunction signupWithSSO({ provider, redirect }) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink({ provider, redirect });\n  window.location.assign(url);\n}\n\n/**\n * Register a new user with username, name, email, and password.\n * Redirect the browser after successful signup based on the redirectTo value returned.\n * @param {String} username\n * @param {String} name\n * @param {String} email\n * @param {String} password\n * @param {Object} userData - alias for the user.data object, since \"data\" is used in the response\n * @param {String} redirect - do not redirect if false, or redirect to a specific path\n */\nasync function signupWithPassword({\n  username,\n  name,\n  email,\n  password,\n  userData,\n  redirect,\n} = {}) {\n  try {\n    const { data } = await axios.post(`${store.baseUrl}auth/create`, {\n      tenantId: store.tenantId,\n      username,\n      name,\n      email,\n      password,\n      data: userData,\n    });\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      await exchange(data);\n      if (redirect === false) return data;\n      redirectToPath(\n        redirect || getQueryAttr(\"redirect\") || data.redirectTo || \"/\"\n      );\n      return data;\n    } else {\n      throw new Error(\"Please try again.\");\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Log a user in via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {String} method\n * @param {String} email\n * @param {String} username\n * @param {String} emailOrUsername\n * @param {String} password\n * @param {String} token\n * @param {String} uuid\n * @param {String} redirect - do not redirect if false, or redirect to given path\n */\nexport async function login({\n  method,\n  email,\n  username,\n  emailOrUsername,\n  password,\n  token,\n  uuid,\n  redirect,\n} = {}) {\n  if (!method) {\n    throw new Error('Userfront.login called without \"method\" property.');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return loginWithSSO({ provider: method, redirect });\n    case \"password\":\n      return loginWithPassword({\n        email,\n        username,\n        emailOrUsername,\n        password,\n        redirect,\n      });\n    case \"passwordless\":\n      return sendPasswordlessLink({ email });\n    case \"link\":\n      return loginWithLink({ token, uuid, redirect });\n    case \"saml\":\n      return completeSamlLogin();\n    default:\n      throw new Error('Userfront.login called with invalid \"method\" property.');\n  }\n}\n\n/**\n * Log a user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n * @param {String} redirect - do not redirect if false, or redirect to given path\n */\nfunction loginWithSSO({ provider, redirect }) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink({ provider, redirect });\n  window.location.assign(url);\n}\n\nexport function getProviderLink({ provider, redirect }) {\n  if (!provider) throw new Error(\"Missing provider\");\n  if (!store.tenantId) throw new Error(\"Missing tenant ID\");\n\n  let url = `${store.baseUrl}auth/${provider}/login?tenant_id=${store.tenantId}&origin=${window.location.origin}`;\n\n  let redirectTo = redirect || getQueryAttr(\"redirect\");\n  if (redirect === false) {\n    redirectTo = typeof document === \"object\" && document.location.pathname;\n  }\n  if (redirectTo) {\n    url += `&redirect=${encodeURIComponent(redirectTo)}`;\n  }\n\n  return url;\n}\n\n/**\n * Log a user in with email/username and password.\n * Redirect the browser after successful login based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function loginWithPassword({\n  email,\n  username,\n  emailOrUsername,\n  password,\n  redirect,\n}) {\n  try {\n    const { data } = await axios.post(`${store.baseUrl}auth/basic`, {\n      tenantId: store.tenantId,\n      emailOrUsername: email || username || emailOrUsername,\n      password,\n    });\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      await exchange(data);\n      if (redirect === false) return data;\n      redirectToPath(\n        redirect || getQueryAttr(\"redirect\") || data.redirectTo || \"/\"\n      );\n      return data;\n    } else {\n      throw new Error(\"Please try again.\");\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\nasync function completeSamlLogin() {\n  try {\n    if (!store.tokens.accessToken) {\n      return console.warn(\"Cannot complete SAML login without access token\");\n    }\n\n    const { data } = await axios.get(`${store.baseUrl}auth/saml/idp/token`, {\n      headers: {\n        authorization: `Bearer ${store.tokens.accessToken}`,\n      },\n    });\n\n    window.location.assign(\n      `${store.baseUrl}auth/saml/idp/login?tenant_id=${store.tenantId}&token=${data.token}&uuid=${store.user.userUuid}`\n    );\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Log a user in with a token/uuid combo passed into the function or\n * in the URL querystring. ?token=...&uuid=...\n * @param {String} token\n * @param {UUID} uuid\n * @param {String} redirect - do not redirect if false, or redirect to given path\n */\nexport async function loginWithLink({ token, uuid, redirect } = {}) {\n  try {\n    token = token || getQueryAttr(\"token\");\n    uuid = uuid || getQueryAttr(\"uuid\");\n    if (!token || !uuid) return;\n\n    const { data } = await axios.put(`${store.baseUrl}auth/link`, {\n      token,\n      uuid,\n      tenantId: store.tenantId,\n    });\n\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      await exchange(data);\n      if (redirect === false) return data;\n      redirectToPath(\n        redirect || getQueryAttr(\"redirect\") || data.redirectTo || \"/\"\n      );\n      return data;\n    } else {\n      throw new Error(\"Problem logging in.\");\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Send a login link to the provided email.\n * @param {String} email\n */\nexport async function sendLoginLink(email) {\n  try {\n    const { data } = await axios.post(`${store.baseUrl}auth/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Create or update a user and send them a link to log in.\n * @param {Object} inputs\n */\nexport async function sendPasswordlessLink({\n  email,\n  name,\n  username,\n  userData,\n  options,\n}) {\n  try {\n    const { data } = await axios.post(`${store.baseUrl}auth/link`, {\n      email,\n      name,\n      username,\n      data: userData,\n      options,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Send a password reset link to the provided email.\n * @param {String} email\n */\nexport async function sendResetLink(email) {\n  try {\n    const { data } = await axios.post(`${store.baseUrl}auth/reset/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\nexport async function resetPassword({ uuid, token, password, redirect }) {\n  try {\n    token = token || getQueryAttr(\"token\");\n    uuid = uuid || getQueryAttr(\"uuid\");\n    if (!token || !uuid) throw new Error(\"Missing token or uuid\");\n    const { data } = await axios.put(`${store.baseUrl}auth/reset`, {\n      tenantId: store.tenantId,\n      uuid,\n      token,\n      password,\n    });\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n\n      // Return if redirect is explicitly false\n      if (redirect === false) return data;\n\n      redirectToPath(\n        redirect || getQueryAttr(\"redirect\") || data.redirectTo || \"/\"\n      );\n\n      return data;\n    } else {\n      throw new Error(\n        \"There was a problem resetting your password. Please try again.\"\n      );\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n","import axios from \"axios\";\n\nimport { getIframe, postMessageAsPromise } from \"./iframe.js\";\nimport { store } from \"./store.js\";\nimport { removeAllCookies } from \"./cookies.js\";\nimport { setTokensFromCookies } from \"./tokens.js\";\nimport { redirectToPath } from \"./url\";\nimport { throwFormattedError } from \"./utils.js\";\n\n/**\n * Log a user out and redirect to the logout path.\n */\nexport async function logout({ method, redirect } = {}) {\n  if (method === \"saml\") {\n    return completeSamlLogout();\n  }\n  if (!store.tokens.accessToken) {\n    return removeAllCookies();\n  }\n\n  try {\n    const { data } = await axios.get(`${store.baseUrl}auth/logout`, {\n      headers: {\n        authorization: `Bearer ${store.tokens.accessToken}`,\n      },\n    });\n    removeAllCookies();\n    if (redirect === false) return;\n    redirectToPath(redirect || data.redirectTo);\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n\nasync function completeSamlLogout() {\n  if (!store.tokens.accessToken) {\n    throw new Error(\"Please log in to authorize your logout request.\");\n  }\n\n  try {\n    const { data } = await axios.get(`${store.baseUrl}auth/saml/idp/token`, {\n      headers: {\n        authorization: `Bearer ${store.tokens.accessToken}`,\n      },\n    });\n\n    window.location.assign(\n      `${store.baseUrl}auth/saml/idp/logout?tenant_id=${store.tenantId}&token=${data.token}&uuid=${store.user.userUuid}`\n    );\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n// TODO re-enable exchange method once new endpoints are stable [06/15/21]\n// --------------------------\n// const iframe = getIframe();\n// if (!iframe) return;\n// try {\n//   const { data } = await postMessageAsPromise({\n//     type: \"logout\",\n//     tenantId: store.tenantId,\n//   });\n//   removeAllCookies();\n//   setTokensFromCookies();\n//   redirectToPath(data.redirectTo || \"/\");\n// } catch (error) {\n//   removeAllCookies();\n//   redirectToPath(\"/\");\n// }\n","export const apiUrl = `https://api.userfront.com/v0/`;\n\nexport const privateIPRegex =\n  /((^127\\.)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.))\\d{1,3}\\.\\d{1,3}/g;\n","import axios from \"axios\";\nimport { privateIPRegex } from \"./constants.js\";\nimport { store } from \"./store.js\";\n\n/**\n * Global mode object\n */\nexport const mode = {\n  value: \"live\",\n  reason: undefined,\n  setMode,\n};\n\nsetModeSync();\n\n/**\n * Determine whether a hostname is in test mode.\n * @param {String} hn\n */\nexport function isTestHostname(hn) {\n  try {\n    const hostname = hn || window.location.hostname;\n    return !!(hostname.match(/localhost/g) || hostname.match(privateIPRegex));\n  } catch (err) {\n    return true;\n  }\n}\n\nexport function isHttps() {\n  try {\n    return window.location.protocol === \"https:\";\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Define the mode of operation (live or test)\n */\nexport async function setMode() {\n  try {\n    const { data } = await axios.get(\n      `${store.baseUrl}tenants/${store.tenantId}/mode`\n    );\n    mode.value = data.mode || \"test\";\n    mode.reason = getReason(mode.value);\n    store.mode = mode.value;\n  } catch (err) {\n    mode.value = \"test\";\n    store.mode = mode.value;\n  }\n}\n\n/**\n * Estimate the mode without making an API call\n */\nexport function setModeSync() {\n  const modeValue = isTestHostname() || !isHttps() ? \"test\" : \"live\";\n  mode.value = modeValue;\n  mode.reason = getReason(modeValue);\n  store.mode = modeValue;\n}\n\n/**\n * Set the reason for the mode\n * - http\n * - domain\n */\nfunction getReason(mode) {\n  try {\n    if (mode === \"live\") {\n      return \"domain\";\n    }\n    if (window.location.protocol === \"http:\") {\n      return \"http\";\n    } else if (window.location.protocol !== \"https:\") {\n      return \"protocol\";\n    } else {\n      return \"domain\";\n    }\n  } catch (error) {}\n}\n","/**\n * user methods are refactored into a separate file to avoid a circular dependency\n * between Userfront.refresh() [which requires setUser()]\n * and Userfront.user.update() [which requires refresh()].\n */\n\nimport axios from \"axios\";\nimport { refresh } from \"./refresh.js\";\nimport { store } from \"./store.js\";\nimport { getJWTPayload } from \"./utils.js\";\n\n/**\n * Update the user record on Userfront\n * @param {Object} payload User properties to update e.g. { name: 'John Doe' }\n */\nexport async function update(payload) {\n  if (!payload || Object.keys(payload).length < 1) {\n    return console.warn(\"Missing user properties to update\");\n  }\n\n  // Make request to update the user\n  await axios.put(`${store.baseUrl}self`, payload, {\n    headers: {\n      authorization: `Bearer ${store.tokens.accessToken}`,\n    },\n  });\n\n  // Refresh the access and ID tokens, and set the store.user object from the ID token\n  await refresh();\n\n  return store.user;\n}\n\n/**\n * Determine whether the access token has a given role\n * @param {String} roleName\n * @param {Object} options\n * @returns {Boolean}\n */\nexport function hasRole(roleName, { tenantId } = {}) {\n  try {\n    if (!store.tokens.accessToken || !store.tenantId) {\n      return false;\n    }\n    const { authorization } = getJWTPayload(store.tokens.accessToken);\n    if (!authorization) {\n      return false;\n    }\n    tenantId = tenantId || store.tenantId;\n    if (!authorization[tenantId] || !authorization[tenantId].roles) {\n      return false;\n    }\n    return authorization[tenantId].roles.indexOf(roleName) > -1;\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Add the methods to the store.user object\n */\nstore.user.update = update;\nstore.user.hasRole = hasRole;\n","import axios from \"axios\";\nimport { store } from \"./store.js\";\nimport {\n  tokens,\n  accessToken,\n  idToken,\n  setTokensFromCookies,\n  setTokenNames,\n} from \"./tokens\";\nimport { redirectIfLoggedIn } from \"./url.js\";\nimport {\n  login,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  signup,\n} from \"./signon.js\";\nimport { logout } from \"./logout.js\";\nimport { mode, setMode, setModeSync } from \"./mode.js\";\n// import { setIframe } from \"./iframe.js\";\nimport { user } from \"./user.js\";\nimport \"./user.methods.js\";\nimport { refresh } from \"./refresh.js\";\nimport { apiUrl } from \"./constants.js\";\n\nlet initCallbacks = [];\n\n/**\n * Initialize the Userfront library.\n * @param {String} tenantId\n */\nfunction init(tenantId, opts = {}) {\n  if (!tenantId) return console.warn(\"Userfront initialized without tenant ID\");\n\n  store.tenantId = tenantId;\n\n  store.baseUrl = opts.baseUrl || apiUrl;\n  if (!store.baseUrl.endsWith(\"/\")) {\n    store.baseUrl += \"/\";\n  }\n\n  if (opts.domain) {\n    store.domain = opts.domain;\n    axios.defaults.headers.common[\n      \"x-application-id\"\n    ] = `https://${store.domain}`;\n  }\n\n  setTokenNames();\n  // setIframe(); // TODO re-enable when iframe is needed\n  setTokensFromCookies();\n  setModeSync();\n\n  try {\n    if (initCallbacks.length > 0) {\n      initCallbacks.forEach((cb) => {\n        if (!cb || typeof cb !== \"function\") return;\n        cb({ tenantId });\n      });\n    }\n    initCallbacks = [];\n  } catch (error) {}\n}\n\n/**\n * Add a callback function to be called upon Userfront.init()\n * @param {Function} cb\n */\nfunction addInitCallback(cb) {\n  if (!cb || typeof cb !== \"function\") return;\n  initCallbacks.push(cb);\n}\n\n/**\n\n * Register a window-level event called \"urlchanged\" that will fire\n * whenever the browser URL changes.\n */\nlet isRegistered = false;\nfunction registerUrlChangedEventListener() {\n  if (isRegistered) return;\n  isRegistered = true;\n  try {\n    history.pushState = ((f) =>\n      function pushState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"pushstate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.pushState);\n\n    history.replaceState = ((f) =>\n      function replaceState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"replacestate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.replaceState);\n\n    window.addEventListener(\"popstate\", () => {\n      window.dispatchEvent(new Event(\"urlchanged\"));\n    });\n  } catch (error) {}\n}\n\n/**\n * EXPORTS\n */\n\nexport default {\n  // index\n  addInitCallback,\n  init,\n  registerUrlChangedEventListener,\n\n  //logout\n  logout,\n\n  // mode\n  mode,\n  setMode,\n\n  // refresh\n  refresh: (a, b, c) => {\n    try {\n      console.warn(\n        \"Userfront.refresh() is deprecated and will be removed. Please use Userfront.tokens.refresh() instead.\"\n      );\n    } catch (error) {}\n    return refresh(a, b, c);\n  },\n\n  // signon\n  login,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  signup,\n\n  // store\n  store,\n\n  // tokens\n  tokens,\n  accessToken,\n  idToken,\n\n  // url\n  redirectIfLoggedIn,\n\n  // user\n  user,\n\n  // utils\n};\n"]},"metadata":{},"sourceType":"module"}