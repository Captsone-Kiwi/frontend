{"ast":null,"code":"var _jsxFileName = \"/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/styles.js\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExampleApp extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      checked: false\n    };\n\n    this.handleCheckboxChange = event => this.setState({\n      checked: event.target.checked\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: this.state.checked,\n          onChange: this.handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Label Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport const CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\nexport const Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`;\nexport const HiddenCheckbox = styled.input.attrs({\n  type: 'checkbox'\n})`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\nexport const StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: ${props => props.checked ? 'salmon' : 'black'}\n  border-radius: 3px;\n  transition: all 150ms;\n\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 3px pink;\n  }\n\n  ${Icon} {\n    visibility: ${props => props.checked ? 'visible' : 'hidden'}\n  }\n`;","map":{"version":3,"sources":["/Users/100s/Documents/GitHub/frontend/src/components/Checkbox/styles.js"],"names":["styled","ExampleApp","React","Component","state","checked","handleCheckboxChange","event","setState","target","render","CheckboxContainer","div","Icon","svg","HiddenCheckbox","input","attrs","type","StyledCheckbox","props"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,UAAN,SAAyBC,KAAK,CAACC,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAD+B;;AAAA,SAEvCC,oBAFuC,GAEhBC,KAAK,IAC1B,KAAKC,QAAL,CAAc;AAAEH,MAAAA,OAAO,EAAEE,KAAK,CAACE,MAAN,CAAaJ;AAAxB,KAAd,CAHqC;AAAA;;AAIvCK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA,gCACE,QAAC,QAAD;AACE,UAAA,OAAO,EAAE,KAAKN,KAAL,CAAWC,OADtB;AAEE,UAAA,QAAQ,EAAE,KAAKC;AAFjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAhBsC;;AAmBzC,OAAO,MAAMK,iBAAiB,GAAGX,MAAM,CAACY,GAAI;AAC5C;AACA;AACA,CAHO;AAKP,OAAO,MAAMC,IAAI,GAAGb,MAAM,CAACc,GAAI;AAC/B;AACA;AACA;AACA,CAJO;AAMP,OAAO,MAAMC,cAAc,GAAGf,MAAM,CAACgB,KAAP,CAAaC,KAAb,CAAmB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAyC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;AAaP,OAAO,MAAMC,cAAc,GAAGnB,MAAM,CAACY,GAAI;AACzC;AACA;AACA;AACA,gBAAgBQ,KAAK,IAAIA,KAAK,CAACf,OAAN,GAAgB,QAAhB,GAA2B,OAAQ;AAC5D;AACA;AACA;AACA,IAAIU,cAAe;AACnB;AACA;AACA;AACA,IAAIF,IAAK;AACT,kBAAkBO,KAAK,IAAKA,KAAK,CAACf,OAAN,GAAgB,SAAhB,GAA4B,QAAU;AAClE;AACA,CAfO","sourcesContent":["import styled from 'styled-components';\n\nclass ExampleApp extends React.Component {\n  state = { checked: false }\n  handleCheckboxChange = event =>\n    this.setState({ checked: event.target.checked })\n  render() {\n    return (\n      <div>\n        <label>\n          <Checkbox\n            checked={this.state.checked}\n            onChange={this.handleCheckboxChange}\n          />\n          <span>Label Text</span>\n        </label>\n      </div>    \n    ) \n  }\n}\n\nexport const CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`\n\nexport const Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`\n\nexport const HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`\n\nexport const StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: ${props => props.checked ? 'salmon' : 'black'}\n  border-radius: 3px;\n  transition: all 150ms;\n\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 3px pink;\n  }\n\n  ${Icon} {\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')}\n  }\n`"]},"metadata":{},"sourceType":"module"}