{"ast":null,"code":"export async function createUser(fields) {\n  console.log(fields);\n  let data = JSON.stringify({\n    name: fields.name,\n    email: fields.email,\n    password: fields.password\n  }); // const response = await fetch(\"http://localhost:8000/signup\", {\n\n  await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n    method: \"POST\",\n    mode: \"no-cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: data\n  }).then(async function (data) {\n    await alert(data);\n  }); // return await response.json();\n\n  return null;\n} // export function createUser(fields) {\n//   console.log(fields);\n//   const response = fetch(\"http://localhost:8000/signup\", {\n//     method: \"post\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify({\n//       name: fields.name,\n//       email: fields.email,\n//       password: fields.password,\n//     }),\n//   });\n//   return response.json();\n// }\n\nexport async function createToken(emailid, password) {\n  const response = await fetch(\"\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      emailid: emailid,\n      password: password\n    })\n  });\n  return await response.json();\n}","map":{"version":3,"sources":["/Users/kimchanmi/Capstone-Kiwi/frontend/src/api/server.js"],"names":["createUser","fields","console","log","data","JSON","stringify","name","email","password","fetch","method","mode","headers","body","then","alert","createToken","emailid","response","json"],"mappings":"AAAA,OAAO,eAAeA,UAAf,CAA0BC,MAA1B,EAAkC;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,MAAIG,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxBC,IAAAA,IAAI,EAAEN,MAAM,CAACM,IADW;AAExBC,IAAAA,KAAK,EAAEP,MAAM,CAACO,KAFU;AAGxBC,IAAAA,QAAQ,EAAER,MAAM,CAACQ;AAHO,GAAf,CAAX,CAFuC,CAQvC;;AACA,QAAMC,KAAK,CAAC,4CAAD,EAA+C;AACxDC,IAAAA,MAAM,EAAE,MADgD;AAExDC,IAAAA,IAAI,EAAE,SAFkD;AAGxDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAH+C;AAMxDC,IAAAA,IAAI,EAAEV;AANkD,GAA/C,CAAL,CAOHW,IAPG,CAOE,gBAAgBX,IAAhB,EAAsB;AAC5B,UAAMY,KAAK,CAACZ,IAAD,CAAX;AACD,GATK,CAAN,CATuC,CAmBvC;;AACA,SAAO,IAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAea,WAAf,CAA2BC,OAA3B,EAAoCT,QAApC,EAA8C;AACnD,QAAMU,QAAQ,GAAG,MAAMT,KAAK,CAAC,EAAD,EAAK;AAC/BC,IAAAA,MAAM,EAAE,MADuB;AAE/BE,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFsB;AAK/BC,IAAAA,IAAI,EAAET,IAAI,CAACC,SAAL,CAAe;AACnBY,MAAAA,OAAO,EAAEA,OADU;AAEnBT,MAAAA,QAAQ,EAAEA;AAFS,KAAf;AALyB,GAAL,CAA5B;AAUA,SAAO,MAAMU,QAAQ,CAACC,IAAT,EAAb;AACD","sourcesContent":["export async function createUser(fields) {\n  console.log(fields);\n  let data = JSON.stringify({\n    name: fields.name,\n    email: fields.email,\n    password: fields.password,\n  });\n\n  // const response = await fetch(\"http://localhost:8000/signup\", {\n  await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n    method: \"POST\",\n    mode: \"no-cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: data,\n  }).then(async function (data) {\n    await alert(data);\n  });\n  // return await response.json();\n  return null;\n}\n\n// export function createUser(fields) {\n//   console.log(fields);\n//   const response = fetch(\"http://localhost:8000/signup\", {\n//     method: \"post\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify({\n//       name: fields.name,\n//       email: fields.email,\n//       password: fields.password,\n//     }),\n//   });\n//   return response.json();\n// }\n\nexport async function createToken(emailid, password) {\n  const response = await fetch(\"\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      emailid: emailid,\n      password: password,\n    }),\n  });\n  return await response.json();\n}\n"]},"metadata":{},"sourceType":"module"}