{"ast":null,"code":"import toDate from \"../../../../toDate/index.js\";\nimport isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\"; // Adapted from the `ru` translation\n\nvar weekdays = ['неделя', 'понеделник', 'вторник', 'сряда', 'четвъртък', 'петък', 'събота'];\n\nfunction lastWeek(day) {\n  var weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'миналата \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'миналия \" + weekday + \" в' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  var weekday = weekdays[day];\n\n  if (day === 2\n  /* Tue */\n  ) {\n    return \"'във \" + weekday + \" в' p\";\n  } else {\n    return \"'в \" + weekday + \" в' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  var weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'следващата \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'следващия \" + weekday + \" в' p\";\n  }\n}\n\nvar lastWeekFormatToken = function (dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return lastWeek(day);\n  }\n};\n\nvar nextWeekFormatToken = function (dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return nextWeek(day);\n  }\n};\n\nvar formatRelativeLocale = {\n  lastWeek: lastWeekFormatToken,\n  yesterday: \"'вчера в' p\",\n  today: \"'днес в' p\",\n  tomorrow: \"'утре в' p\",\n  nextWeek: nextWeekFormatToken,\n  other: 'P'\n};\n\nvar formatRelative = function (token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n\nexport default formatRelative;","map":{"version":3,"sources":["/Users/kimchanmi/Capstone-Kiwi/frontend/node_modules/date-fns/esm/locale/bg/_lib/formatRelative/index.js"],"names":["toDate","isSameUTCWeek","weekdays","lastWeek","day","weekday","thisWeek","nextWeek","lastWeekFormatToken","dirtyDate","baseDate","options","date","getUTCDay","nextWeekFormatToken","formatRelativeLocale","yesterday","today","tomorrow","other","formatRelative","token","format"],"mappings":"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","sourcesContent":["import toDate from \"../../../../toDate/index.js\";\nimport isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\n// Adapted from the `ru` translation\nvar weekdays = ['неделя', 'понеделник', 'вторник', 'сряда', 'четвъртък', 'петък', 'събота'];\n\nfunction lastWeek(day) {\n  var weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'миналата \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'миналия \" + weekday + \" в' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  var weekday = weekdays[day];\n\n  if (day === 2\n  /* Tue */\n  ) {\n      return \"'във \" + weekday + \" в' p\";\n    } else {\n    return \"'в \" + weekday + \" в' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  var weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'следващата \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'следващия \" + weekday + \" в' p\";\n  }\n}\n\nvar lastWeekFormatToken = function (dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return lastWeek(day);\n  }\n};\n\nvar nextWeekFormatToken = function (dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return nextWeek(day);\n  }\n};\n\nvar formatRelativeLocale = {\n  lastWeek: lastWeekFormatToken,\n  yesterday: \"'вчера в' p\",\n  today: \"'днес в' p\",\n  tomorrow: \"'утре в' p\",\n  nextWeek: nextWeekFormatToken,\n  other: 'P'\n};\n\nvar formatRelative = function (token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n\nexport default formatRelative;"]},"metadata":{},"sourceType":"module"}