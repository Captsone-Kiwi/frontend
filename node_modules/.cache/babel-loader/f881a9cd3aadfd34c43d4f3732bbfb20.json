{"ast":null,"code":"var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: translateSeconds,\n    other: translate\n  },\n  xSeconds: {\n    one: translateSeconds,\n    other: translate\n  },\n  halfAMinute: 'pusė minutės',\n  lessThanXMinutes: {\n    one: translateSingular,\n    other: translate\n  },\n  xMinutes: {\n    one: translateSingular,\n    other: translate\n  },\n  aboutXHours: {\n    one: translateSingular,\n    other: translate\n  },\n  xHours: {\n    one: translateSingular,\n    other: translate\n  },\n  xDays: {\n    one: translateSingular,\n    other: translate\n  },\n  aboutWeeks: {\n    one: translateSingular,\n    other: translate\n  },\n  xWeeks: {\n    one: translateSingular,\n    other: translate\n  },\n  aboutXMonths: {\n    one: translateSingular,\n    other: translate\n  },\n  xMonths: {\n    one: translateSingular,\n    other: translate\n  },\n  aboutXYears: {\n    one: translateSingular,\n    other: translate\n  },\n  xYears: {\n    one: translateSingular,\n    other: translate\n  },\n  overXYears: {\n    one: translateSingular,\n    other: translate\n  },\n  almostXYears: {\n    one: translateSingular,\n    other: translate\n  }\n};\nvar translations = {\n  xseconds_other: 'sekundė_sekundžių_sekundes',\n  xminutes_one: 'minutė_minutės_minutę',\n  xminutes_other: 'minutės_minučių_minutes',\n  xhours_one: 'valanda_valandos_valandą',\n  xhours_other: 'valandos_valandų_valandas',\n  xdays_one: 'diena_dienos_dieną',\n  xdays_other: 'dienos_dienų_dienas',\n  xweeks_one: 'savaitė_savaitės_savaitę',\n  xweeks_other: 'savaitės_savaičių_savaites',\n  xmonths_one: 'mėnuo_mėnesio_mėnesį',\n  xmonths_other: 'mėnesiai_mėnesių_mėnesius',\n  xyears_one: 'metai_metų_metus',\n  xyears_other: 'metai_metų_metus',\n  about: 'apie',\n  over: 'daugiau nei',\n  almost: 'beveik',\n  lessthan: 'mažiau nei'\n};\n\nfunction translateSeconds(number, addSuffix, key, isFuture) {\n  if (!addSuffix) {\n    return 'kelios sekundės';\n  } else {\n    return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n  }\n}\n\nfunction translateSingular(number, addSuffix, key, isFuture) {\n  return !addSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];\n}\n\nfunction special(number) {\n  return number % 10 === 0 || number > 10 && number < 20;\n}\n\nfunction forms(key) {\n  return translations[key].split('_');\n}\n\nfunction translate(number, addSuffix, key, isFuture) {\n  var result = number + ' ';\n\n  if (number === 1) {\n    return result + translateSingular(number, addSuffix, key[0], isFuture);\n  } else if (!addSuffix) {\n    return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n  } else {\n    if (isFuture) {\n      return result + forms(key)[1];\n    } else {\n      return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n    }\n  }\n}\n\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var adverb = token.match(/about|over|almost|lessthan/i);\n  var unit = token.replace(adverb, '');\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one(count, options.addSuffix, unit.toLowerCase() + '_one');\n  } else {\n    result = formatDistanceLocale[token].other(count, options.addSuffix, unit.toLowerCase() + '_other');\n  }\n\n  if (adverb) {\n    result = translations[adverb[0].toLowerCase()] + ' ' + result;\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'po ' + result;\n    } else {\n      return 'prieš ' + result;\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/kimchanmi/Capstone-Kiwi/frontend/node_modules/date-fns/esm/locale/lt/_lib/formatDistance/index.js"],"names":["formatDistanceLocale","lessThanXSeconds","one","translateSeconds","other","translate","xSeconds","halfAMinute","lessThanXMinutes","translateSingular","xMinutes","aboutXHours","xHours","xDays","aboutWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","translations","xseconds_other","xminutes_one","xminutes_other","xhours_one","xhours_other","xdays_one","xdays_other","xweeks_one","xweeks_other","xmonths_one","xmonths_other","xyears_one","xyears_other","about","over","almost","lessthan","number","addSuffix","key","isFuture","forms","special","split","result","formatDistance","token","count","options","adverb","match","unit","replace","toLowerCase","comparison"],"mappings":"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","sourcesContent":["var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: translateSeconds,\n    other: translate\n  },\n  xSeconds: {\n    one: translateSeconds,\n    other: translate\n  },\n  halfAMinute: 'pusė minutės',\n  lessThanXMinutes: {\n    one: translateSingular,\n    other: translate\n  },\n  xMinutes: {\n    one: translateSingular,\n    other: translate\n  },\n  aboutXHours: {\n    one: translateSingular,\n    other: translate\n  },\n  xHours: {\n    one: translateSingular,\n    other: translate\n  },\n  xDays: {\n    one: translateSingular,\n    other: translate\n  },\n  aboutWeeks: {\n    one: translateSingular,\n    other: translate\n  },\n  xWeeks: {\n    one: translateSingular,\n    other: translate\n  },\n  aboutXMonths: {\n    one: translateSingular,\n    other: translate\n  },\n  xMonths: {\n    one: translateSingular,\n    other: translate\n  },\n  aboutXYears: {\n    one: translateSingular,\n    other: translate\n  },\n  xYears: {\n    one: translateSingular,\n    other: translate\n  },\n  overXYears: {\n    one: translateSingular,\n    other: translate\n  },\n  almostXYears: {\n    one: translateSingular,\n    other: translate\n  }\n};\nvar translations = {\n  xseconds_other: 'sekundė_sekundžių_sekundes',\n  xminutes_one: 'minutė_minutės_minutę',\n  xminutes_other: 'minutės_minučių_minutes',\n  xhours_one: 'valanda_valandos_valandą',\n  xhours_other: 'valandos_valandų_valandas',\n  xdays_one: 'diena_dienos_dieną',\n  xdays_other: 'dienos_dienų_dienas',\n  xweeks_one: 'savaitė_savaitės_savaitę',\n  xweeks_other: 'savaitės_savaičių_savaites',\n  xmonths_one: 'mėnuo_mėnesio_mėnesį',\n  xmonths_other: 'mėnesiai_mėnesių_mėnesius',\n  xyears_one: 'metai_metų_metus',\n  xyears_other: 'metai_metų_metus',\n  about: 'apie',\n  over: 'daugiau nei',\n  almost: 'beveik',\n  lessthan: 'mažiau nei'\n};\n\nfunction translateSeconds(number, addSuffix, key, isFuture) {\n  if (!addSuffix) {\n    return 'kelios sekundės';\n  } else {\n    return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n  }\n}\n\nfunction translateSingular(number, addSuffix, key, isFuture) {\n  return !addSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];\n}\n\nfunction special(number) {\n  return number % 10 === 0 || number > 10 && number < 20;\n}\n\nfunction forms(key) {\n  return translations[key].split('_');\n}\n\nfunction translate(number, addSuffix, key, isFuture) {\n  var result = number + ' ';\n\n  if (number === 1) {\n    return result + translateSingular(number, addSuffix, key[0], isFuture);\n  } else if (!addSuffix) {\n    return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n  } else {\n    if (isFuture) {\n      return result + forms(key)[1];\n    } else {\n      return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n    }\n  }\n}\n\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var adverb = token.match(/about|over|almost|lessthan/i);\n  var unit = token.replace(adverb, '');\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one(count, options.addSuffix, unit.toLowerCase() + '_one');\n  } else {\n    result = formatDistanceLocale[token].other(count, options.addSuffix, unit.toLowerCase() + '_other');\n  }\n\n  if (adverb) {\n    result = translations[adverb[0].toLowerCase()] + ' ' + result;\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'po ' + result;\n    } else {\n      return 'prieš ' + result;\n    }\n  }\n\n  return result;\n}"]},"metadata":{},"sourceType":"module"}