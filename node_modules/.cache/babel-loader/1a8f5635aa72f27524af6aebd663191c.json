{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _isFQDN = require('./isFQDN');\n\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\n\nvar _isIP = require('./isIP');\n\nvar _isIP2 = _interopRequireDefault(_isIP);\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString2.default)(url);\n\n  if (!url || url.length >= 2083 || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge2.default)(options, default_url_options);\n  var protocol = void 0,\n      auth = void 0,\n      host = void 0,\n      hostname = void 0,\n      port = void 0,\n      port_str = void 0,\n      split = void 0,\n      ipv6 = void 0;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {\n    split[0] = url.substr(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  }\n\n  if (!(0, _isIP2.default)(host) && !(0, _isFQDN2.default)(host, options) && (!ipv6 || !(0, _isIP2.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {\n    return false;\n  }\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/100s/Documents/GitHub/frontend/node_modules/validator/lib/isURL.js"],"names":["Object","defineProperty","exports","value","default","isURL","_assertString","require","_assertString2","_interopRequireDefault","_isFQDN","_isFQDN2","_isIP","_isIP2","_merge","_merge2","obj","__esModule","default_url_options","protocols","require_tld","require_protocol","require_host","require_valid_protocol","allow_underscores","allow_trailing_dot","allow_protocol_relative_urls","wrapped_ipv6","isRegExp","prototype","toString","call","checkHost","host","matches","i","length","match","test","url","options","indexOf","protocol","auth","hostname","port","port_str","split","ipv6","shift","substr","join","ipv6_match","parseInt","host_whitelist","host_blacklist","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _isFQDN = require('./isFQDN');\n\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\n\nvar _isIP = require('./isIP');\n\nvar _isIP2 = _interopRequireDefault(_isIP);\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false\n};\n\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString2.default)(url);\n  if (!url || url.length >= 2083 || /[\\s<>]/.test(url)) {\n    return false;\n  }\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n  options = (0, _merge2.default)(options, default_url_options);\n  var protocol = void 0,\n      auth = void 0,\n      host = void 0,\n      hostname = void 0,\n      port = void 0,\n      port_str = void 0,\n      split = void 0,\n      ipv6 = void 0;\n\n  split = url.split('#');\n  url = split.shift();\n\n  split = url.split('?');\n  url = split.shift();\n\n  split = url.split('://');\n  if (split.length > 1) {\n    protocol = split.shift();\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {\n    split[0] = url.substr(2);\n  }\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n  if (split.length > 1) {\n    auth = split.shift();\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n  }\n  hostname = split.join('@');\n\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null) {\n    port = parseInt(port_str, 10);\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  }\n\n  if (!(0, _isIP2.default)(host) && !(0, _isFQDN2.default)(host, options) && (!ipv6 || !(0, _isIP2.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {\n    return false;\n  }\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}