{"ast":null,"code":"/*\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\nfunction normalizeColor(color) {\n  var match;\n\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return color;\n    }\n\n    return null;\n  } // Ordered based on occurrences on Facebook codebase\n\n\n  if (match = matchers.hex6.exec(color)) {\n    return parseInt(match[1] + 'ff', 16) >>> 0;\n  }\n\n  if (names.hasOwnProperty(color)) {\n    return names[color];\n  }\n\n  if (match = matchers.rgb.exec(color)) {\n    return (parse255(match[1]) << 24 | // r\n    parse255(match[2]) << 16 | // g\n    parse255(match[3]) << 8 | // b\n    0x000000ff // a\n    ) >>> 0;\n  }\n\n  if (match = matchers.rgba.exec(color)) {\n    return (parse255(match[1]) << 24 | // r\n    parse255(match[2]) << 16 | // g\n    parse255(match[3]) << 8 | // b\n    parse1(match[4]) // a\n    ) >>> 0;\n  }\n\n  if (match = matchers.hex3.exec(color)) {\n    return parseInt(match[1] + match[1] + // r\n    match[2] + match[2] + // g\n    match[3] + match[3] + // b\n    'ff', // a\n    16) >>> 0;\n  } // https://drafts.csswg.org/css-color-4/#hex-notation\n\n\n  if (match = matchers.hex8.exec(color)) {\n    return parseInt(match[1], 16) >>> 0;\n  }\n\n  if (match = matchers.hex4.exec(color)) {\n    return parseInt(match[1] + match[1] + // r\n    match[2] + match[2] + // g\n    match[3] + match[3] + // b\n    match[4] + match[4], // a\n    16) >>> 0;\n  }\n\n  if (match = matchers.hsl.exec(color)) {\n    return (hslToRgb(parse360(match[1]), // h\n    parsePercentage(match[2]), // s\n    parsePercentage(match[3]) // l\n    ) | 0x000000ff // a\n    ) >>> 0;\n  }\n\n  if (match = matchers.hsla.exec(color)) {\n    return (hslToRgb(parse360(match[1]), // h\n    parsePercentage(match[2]), // s\n    parsePercentage(match[3]) // l\n    ) | parse1(match[4]) // a\n    ) >>> 0;\n  }\n\n  return null;\n}\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) {\n    t += 1;\n  }\n\n  if (t > 1) {\n    t -= 1;\n  }\n\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n\n  if (t < 1 / 2) {\n    return q;\n  }\n\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n\n  return p;\n}\n\nfunction hslToRgb(h, s, l) {\n  var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  var p = 2 * l - q;\n  var r = hue2rgb(p, q, h + 1 / 3);\n  var g = hue2rgb(p, q, h);\n  var b = hue2rgb(p, q, h - 1 / 3);\n  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;\n} // var INTEGER = '[-+]?\\\\d+';\n\n\nvar NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\nvar PERCENTAGE = NUMBER + '%';\n\nfunction toArray(arrayLike) {\n  return Array.prototype.slice.call(arrayLike, 0);\n}\n\nfunction call() {\n  return '\\\\(\\\\s*(' + toArray(arguments).join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nvar matchers = {\n  rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),\n  rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),\n  hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),\n  hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),\n  hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex6: /^#([0-9a-fA-F]{6})$/,\n  hex8: /^#([0-9a-fA-F]{8})$/\n};\n\nfunction parse255(str) {\n  var int = parseInt(str, 10);\n\n  if (int < 0) {\n    return 0;\n  }\n\n  if (int > 255) {\n    return 255;\n  }\n\n  return int;\n}\n\nfunction parse360(str) {\n  var int = parseFloat(str);\n  return (int % 360 + 360) % 360 / 360;\n}\n\nfunction parse1(str) {\n  var num = parseFloat(str);\n\n  if (num < 0) {\n    return 0;\n  }\n\n  if (num > 1) {\n    return 255;\n  }\n\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str) {\n  // parseFloat conveniently ignores the final %\n  var int = parseFloat(str, 10);\n\n  if (int < 0) {\n    return 0;\n  }\n\n  if (int > 100) {\n    return 1;\n  }\n\n  return int / 100;\n}\n\nvar names = {\n  transparent: 0x00000000,\n  // http://www.w3.org/TR/css3-color/#svg-color\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff\n};\n\nfunction rgba(colorInt) {\n  var r = Math.round((colorInt & 0xff000000) >>> 24);\n  var g = Math.round((colorInt & 0x00ff0000) >>> 16);\n  var b = Math.round((colorInt & 0x0000ff00) >>> 8);\n  var a = ((colorInt & 0x000000ff) >>> 0) / 255;\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\n\n;\nnormalizeColor.rgba = rgba;\nmodule.exports = normalizeColor;","map":{"version":3,"sources":["/Users/100s/Documents/GitHub/frontend/node_modules/normalize-css-color/index.js"],"names":["normalizeColor","color","match","matchers","hex6","exec","parseInt","names","hasOwnProperty","rgb","parse255","rgba","parse1","hex3","hex8","hex4","hsl","hslToRgb","parse360","parsePercentage","hsla","hue2rgb","p","q","t","h","s","l","r","g","b","Math","round","NUMBER","PERCENTAGE","toArray","arrayLike","Array","prototype","slice","call","arguments","join","RegExp","str","int","parseFloat","num","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","colorInt","a","module","exports"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nfunction normalizeColor(color) {\n  var match;\n\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return color;\n    }\n    return null;\n  }\n\n  // Ordered based on occurrences on Facebook codebase\n  if ((match = matchers.hex6.exec(color))) {\n    return parseInt(match[1] + 'ff', 16) >>> 0;\n  }\n\n  if (names.hasOwnProperty(color)) {\n    return names[color];\n  }\n\n  if ((match = matchers.rgb.exec(color))) {\n    return (\n        parse255(match[1]) << 24 | // r\n        parse255(match[2]) << 16 | // g\n        parse255(match[3]) << 8 | // b\n        0x000000ff // a\n      ) >>> 0;\n  }\n\n  if ((match = matchers.rgba.exec(color))) {\n    return (\n        parse255(match[1]) << 24 | // r\n        parse255(match[2]) << 16 | // g\n        parse255(match[3]) << 8 | // b\n        parse1(match[4]) // a\n      ) >>> 0;\n  }\n\n  if ((match = matchers.hex3.exec(color))) {\n    return parseInt(\n        match[1] + match[1] + // r\n        match[2] + match[2] + // g\n        match[3] + match[3] + // b\n        'ff', // a\n        16\n      ) >>> 0;\n  }\n\n  // https://drafts.csswg.org/css-color-4/#hex-notation\n  if ((match = matchers.hex8.exec(color))) {\n    return parseInt(match[1], 16) >>> 0;\n  }\n\n  if ((match = matchers.hex4.exec(color))) {\n    return parseInt(\n        match[1] + match[1] + // r\n        match[2] + match[2] + // g\n        match[3] + match[3] + // b\n        match[4] + match[4], // a\n        16\n      ) >>> 0;\n  }\n\n  if ((match = matchers.hsl.exec(color))) {\n    return (\n        hslToRgb(\n          parse360(match[1]), // h\n          parsePercentage(match[2]), // s\n          parsePercentage(match[3]) // l\n        ) |\n        0x000000ff // a\n      ) >>> 0;\n  }\n\n  if ((match = matchers.hsla.exec(color))) {\n    return (\n        hslToRgb(\n          parse360(match[1]), // h\n          parsePercentage(match[2]), // s\n          parsePercentage(match[3]) // l\n        ) |\n        parse1(match[4]) // a\n      ) >>> 0;\n  }\n\n  return null;\n}\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n}\n\nfunction hslToRgb(h, s, l) {\n  var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  var p = 2 * l - q;\n  var r = hue2rgb(p, q, h + 1 / 3);\n  var g = hue2rgb(p, q, h);\n  var b = hue2rgb(p, q, h - 1 / 3);\n\n  return (\n    Math.round(r * 255) << 24 |\n    Math.round(g * 255) << 16 |\n    Math.round(b * 255) << 8\n  );\n}\n\n// var INTEGER = '[-+]?\\\\d+';\nvar NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\nvar PERCENTAGE = NUMBER + '%';\n\nfunction toArray(arrayLike) {\n  return Array.prototype.slice.call(arrayLike, 0);\n}\n\nfunction call() {\n  return '\\\\(\\\\s*(' + toArray(arguments).join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nvar matchers = {\n  rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),\n  rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),\n  hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),\n  hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),\n  hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex6: /^#([0-9a-fA-F]{6})$/,\n  hex8: /^#([0-9a-fA-F]{8})$/,\n};\n\nfunction parse255(str) {\n  var int = parseInt(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 255) {\n    return 255;\n  }\n  return int;\n}\n\nfunction parse360(str) {\n  var int = parseFloat(str);\n  return (((int % 360) + 360) % 360) / 360;\n}\n\nfunction parse1(str) {\n  var num = parseFloat(str);\n  if (num < 0) {\n    return 0;\n  }\n  if (num > 1) {\n    return 255;\n  }\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str) {\n  // parseFloat conveniently ignores the final %\n  var int = parseFloat(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 100) {\n    return 1;\n  }\n  return int / 100;\n}\n\nvar names = {\n  transparent: 0x00000000,\n\n  // http://www.w3.org/TR/css3-color/#svg-color\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff,\n};\n\nfunction rgba(colorInt) {\n  var r = Math.round(((colorInt & 0xff000000) >>> 24));\n  var g = Math.round(((colorInt & 0x00ff0000) >>> 16));\n  var b = Math.round(((colorInt & 0x0000ff00) >>> 8));\n  var a = ((colorInt & 0x000000ff) >>> 0) / 255;\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a,\n  };\n};\n\nnormalizeColor.rgba = rgba;\n\nmodule.exports = normalizeColor;\n"]},"metadata":{},"sourceType":"script"}