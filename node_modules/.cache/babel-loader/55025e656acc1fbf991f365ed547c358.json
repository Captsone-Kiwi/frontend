{"ast":null,"code":"var _jsxFileName = \"/Users/100s/Documents/GitHub/frontend/src/components/Chatting/Message.js\";\nimport React from 'react';\nimport * as style from \"./styles\";\nimport ReactEmoji from 'react-emoji';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = _ref => {\n  let {\n    message: {\n      text,\n      user\n    },\n    username\n  } = _ref;\n  let isSentByCurrentUser = false;\n  const trimmedName = username.toString().trim().toLowerCase();\n\n  if (user === trimmedName) {\n    isSentByCurrentUser = true;\n  }\n\n  return isSentByCurrentUser ? /*#__PURE__*/_jsxDEV(style.WrapColumn, {\n    style: {\n      padding: '15px',\n      alignItems: 'start'\n    },\n    children: [/*#__PURE__*/_jsxDEV(style.WrapRow, {\n      children: [/*#__PURE__*/_jsxDEV(style.Span, {\n        children: trimmedName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(style.Span, {\n        children: \" \\u2794  Everyone :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(style.Span, {\n      style: {\n        color: 'black',\n        marginBottom: '16px'\n      },\n      children: ReactEmoji.emojify(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(style.WrapColumn, {\n    style: {\n      padding: '15px',\n      alignItems: 'start'\n    },\n    children: [/*#__PURE__*/_jsxDEV(style.WrapRow, {\n      children: [/*#__PURE__*/_jsxDEV(style.Span, {\n        children: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(style.Span, {\n        children: \" \\u2794  Everyone :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(style.Span, {\n      style: {\n        color: 'black',\n        marginBottom: '16px'\n      },\n      children: ReactEmoji.emojify(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this);\n};\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/100s/Documents/GitHub/frontend/src/components/Chatting/Message.js"],"names":["React","style","ReactEmoji","Message","message","text","user","username","isSentByCurrentUser","trimmedName","toString","trim","toLowerCase","padding","alignItems","color","marginBottom","emojify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AAEA,OAAOC,UAAP,MAAuB,aAAvB;;;AAEA,MAAMC,OAAO,GAAG,QAA2C;AAAA,MAA1C;AAACC,IAAAA,OAAO,EAAG;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAX;AAA2BC,IAAAA;AAA3B,GAA0C;AACvD,MAAIC,mBAAmB,GAAG,KAA1B;AACA,QAAMC,WAAW,GAAGF,QAAQ,CAACG,QAAT,GAAoBC,IAApB,GAA2BC,WAA3B,EAApB;;AAEA,MAAGN,IAAI,KAAKG,WAAZ,EAAyB;AACrBD,IAAAA,mBAAmB,GAAG,IAAtB;AACH;;AAED,SACIA,mBAAmB,gBAEf,QAAC,KAAD,CAAO,UAAP;AAAkB,IAAA,KAAK,EAAE;AAACK,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,UAAU,EAAC;AAA7B,KAAzB;AAAA,4BACI,QAAC,KAAD,CAAO,OAAP;AAAA,8BACI,QAAC,KAAD,CAAO,IAAP;AAAA,kBAAaL;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAACM,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,YAAY,EAAC;AAA7B,OAAnB;AAAA,gBAA0Dd,UAAU,CAACe,OAAX,CAAmBZ,IAAnB;AAA1D;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFe,gBAWf,QAAC,KAAD,CAAO,UAAP;AAAkB,IAAA,KAAK,EAAE;AAACQ,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,UAAU,EAAC;AAA7B,KAAzB;AAAA,4BACI,QAAC,KAAD,CAAO,OAAP;AAAA,8BACI,QAAC,KAAD,CAAO,IAAP;AAAA,kBAAaR;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAACS,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,YAAY,EAAC;AAA7B,OAAnB;AAAA,gBAA0Dd,UAAU,CAACe,OAAX,CAAmBZ,IAAnB;AAA1D;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAZR;AAqBH,CA7BD;;KAAMF,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport * as style from \"./styles\";\n\nimport ReactEmoji from 'react-emoji';\n\nconst Message = ({message : { text, user }, username }) => {\n    let isSentByCurrentUser = false;\n    const trimmedName = username.toString().trim().toLowerCase();\n\n    if(user === trimmedName) {\n        isSentByCurrentUser = true;\n    }\n\n    return (\n        isSentByCurrentUser\n        ? (\n            <style.WrapColumn style={{padding: '15px', alignItems:'start'}}>\n                <style.WrapRow>\n                    <style.Span>{trimmedName}</style.Span>\n                    <style.Span> ➔  Everyone :</style.Span>\n                </style.WrapRow>\n                <style.Span style={{color:'black', marginBottom:'16px'}}>{ReactEmoji.emojify(text)}</style.Span>\n            </style.WrapColumn>\n    )\n        : (\n            <style.WrapColumn style={{padding: '15px', alignItems:'start'}}>\n                <style.WrapRow>\n                    <style.Span>{user}</style.Span>\n                    <style.Span> ➔  Everyone :</style.Span>\n                </style.WrapRow>\n                <style.Span style={{color:'black', marginBottom:'16px'}}>{ReactEmoji.emojify(text)}</style.Span>\n            </style.WrapColumn>\n        )\n    )\n}\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}