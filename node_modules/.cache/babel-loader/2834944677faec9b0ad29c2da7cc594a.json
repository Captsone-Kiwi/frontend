{"ast":null,"code":"function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', String(count)); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', String(count)); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', String(count));\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options && options.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'праз ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' таму';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nvar halfAMinute = function (_, options) {\n  if (options && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'праз паўхвіліны';\n    } else {\n      return 'паўхвіліны таму';\n    }\n  }\n\n  return 'паўхвіліны';\n};\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за секунду',\n      singularNominative: 'менш за {{count}} секунду',\n      singularGenitive: 'менш за {{count}} секунды',\n      pluralGenitive: 'менш за {{count}} секунд'\n    },\n    future: {\n      one: 'менш, чым праз секунду',\n      singularNominative: 'менш, чым праз {{count}} секунду',\n      singularGenitive: 'менш, чым праз {{count}} секунды',\n      pluralGenitive: 'менш, чым праз {{count}} секунд'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунда',\n      singularGenitive: '{{count}} секунды',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунду таму',\n      singularGenitive: '{{count}} секунды таму',\n      pluralGenitive: '{{count}} секунд таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} секунду',\n      singularGenitive: 'праз {{count}} секунды',\n      pluralGenitive: 'праз {{count}} секунд'\n    }\n  }),\n  halfAMinute: halfAMinute,\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за хвіліну',\n      singularNominative: 'менш за {{count}} хвіліну',\n      singularGenitive: 'менш за {{count}} хвіліны',\n      pluralGenitive: 'менш за {{count}} хвілін'\n    },\n    future: {\n      one: 'менш, чым праз хвіліну',\n      singularNominative: 'менш, чым праз {{count}} хвіліну',\n      singularGenitive: 'менш, чым праз {{count}} хвіліны',\n      pluralGenitive: 'менш, чым праз {{count}} хвілін'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} хвіліна',\n      singularGenitive: '{{count}} хвіліны',\n      pluralGenitive: '{{count}} хвілін'\n    },\n    past: {\n      singularNominative: '{{count}} хвіліну таму',\n      singularGenitive: '{{count}} хвіліны таму',\n      pluralGenitive: '{{count}} хвілін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} хвіліну',\n      singularGenitive: 'праз {{count}} хвіліны',\n      pluralGenitive: 'праз {{count}} хвілін'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} гадзіны',\n      singularGenitive: 'каля {{count}} гадзін',\n      pluralGenitive: 'каля {{count}} гадзін'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} гадзіну',\n      singularGenitive: 'прыблізна праз {{count}} гадзіны',\n      pluralGenitive: 'прыблізна праз {{count}} гадзін'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} гадзіна',\n      singularGenitive: '{{count}} гадзіны',\n      pluralGenitive: '{{count}} гадзін'\n    },\n    past: {\n      singularNominative: '{{count}} гадзіну таму',\n      singularGenitive: '{{count}} гадзіны таму',\n      pluralGenitive: '{{count}} гадзін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} гадзіну',\n      singularGenitive: 'праз {{count}} гадзіны',\n      pluralGenitive: 'праз {{count}} гадзін'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} дзень',\n      singularGenitive: '{{count}} дні',\n      pluralGenitive: '{{count}} дзён'\n    }\n  }),\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      // TODO\n      singularGenitive: 'каля {{count}} месяцаў',\n      // TODO\n      pluralGenitive: 'каля {{count}} месяцаў' // TODO\n\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      // TODO\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      // TODO\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў' // TODO\n\n    }\n  }),\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      singularGenitive: 'каля {{count}} месяцаў',\n      pluralGenitive: 'каля {{count}} месяцаў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} года',\n      singularGenitive: 'каля {{count}} гадоў',\n      pluralGenitive: 'каля {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} год',\n      singularGenitive: 'прыблізна праз {{count}} гады',\n      pluralGenitive: 'прыблізна праз {{count}} гадоў'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} год',\n      singularGenitive: '{{count}} гады',\n      pluralGenitive: '{{count}} гадоў'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'больш за {{count}} год',\n      singularGenitive: 'больш за {{count}} гады',\n      pluralGenitive: 'больш за {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'больш, чым праз {{count}} год',\n      singularGenitive: 'больш, чым праз {{count}} гады',\n      pluralGenitive: 'больш, чым праз {{count}} гадоў'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'амаль {{count}} год',\n      singularGenitive: 'амаль {{count}} гады',\n      pluralGenitive: 'амаль {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'амаль праз {{count}} год',\n      singularGenitive: 'амаль праз {{count}} гады',\n      pluralGenitive: 'амаль праз {{count}} гадоў'\n    }\n  })\n};\n\nvar formatDistance = function (token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n};\n\nexport default formatDistance;","map":{"version":3,"sources":["/Users/kimchanmi/Capstone-Kiwi/frontend/node_modules/date-fns/esm/locale/be/_lib/formatDistance/index.js"],"names":["declension","scheme","count","one","undefined","rem10","rem100","singularNominative","replace","String","singularGenitive","pluralGenitive","buildLocalizeTokenFn","options","addSuffix","comparison","future","regular","past","halfAMinute","_","formatDistanceLocale","lessThanXSeconds","xSeconds","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token"],"mappings":"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","sourcesContent":["function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', String(count)); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', String(count)); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', String(count));\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options && options.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'праз ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' таму';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nvar halfAMinute = function (_, options) {\n  if (options && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'праз паўхвіліны';\n    } else {\n      return 'паўхвіліны таму';\n    }\n  }\n\n  return 'паўхвіліны';\n};\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за секунду',\n      singularNominative: 'менш за {{count}} секунду',\n      singularGenitive: 'менш за {{count}} секунды',\n      pluralGenitive: 'менш за {{count}} секунд'\n    },\n    future: {\n      one: 'менш, чым праз секунду',\n      singularNominative: 'менш, чым праз {{count}} секунду',\n      singularGenitive: 'менш, чым праз {{count}} секунды',\n      pluralGenitive: 'менш, чым праз {{count}} секунд'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунда',\n      singularGenitive: '{{count}} секунды',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунду таму',\n      singularGenitive: '{{count}} секунды таму',\n      pluralGenitive: '{{count}} секунд таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} секунду',\n      singularGenitive: 'праз {{count}} секунды',\n      pluralGenitive: 'праз {{count}} секунд'\n    }\n  }),\n  halfAMinute: halfAMinute,\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за хвіліну',\n      singularNominative: 'менш за {{count}} хвіліну',\n      singularGenitive: 'менш за {{count}} хвіліны',\n      pluralGenitive: 'менш за {{count}} хвілін'\n    },\n    future: {\n      one: 'менш, чым праз хвіліну',\n      singularNominative: 'менш, чым праз {{count}} хвіліну',\n      singularGenitive: 'менш, чым праз {{count}} хвіліны',\n      pluralGenitive: 'менш, чым праз {{count}} хвілін'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} хвіліна',\n      singularGenitive: '{{count}} хвіліны',\n      pluralGenitive: '{{count}} хвілін'\n    },\n    past: {\n      singularNominative: '{{count}} хвіліну таму',\n      singularGenitive: '{{count}} хвіліны таму',\n      pluralGenitive: '{{count}} хвілін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} хвіліну',\n      singularGenitive: 'праз {{count}} хвіліны',\n      pluralGenitive: 'праз {{count}} хвілін'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} гадзіны',\n      singularGenitive: 'каля {{count}} гадзін',\n      pluralGenitive: 'каля {{count}} гадзін'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} гадзіну',\n      singularGenitive: 'прыблізна праз {{count}} гадзіны',\n      pluralGenitive: 'прыблізна праз {{count}} гадзін'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} гадзіна',\n      singularGenitive: '{{count}} гадзіны',\n      pluralGenitive: '{{count}} гадзін'\n    },\n    past: {\n      singularNominative: '{{count}} гадзіну таму',\n      singularGenitive: '{{count}} гадзіны таму',\n      pluralGenitive: '{{count}} гадзін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} гадзіну',\n      singularGenitive: 'праз {{count}} гадзіны',\n      pluralGenitive: 'праз {{count}} гадзін'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} дзень',\n      singularGenitive: '{{count}} дні',\n      pluralGenitive: '{{count}} дзён'\n    }\n  }),\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      // TODO\n      singularGenitive: 'каля {{count}} месяцаў',\n      // TODO\n      pluralGenitive: 'каля {{count}} месяцаў' // TODO\n\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      // TODO\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      // TODO\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў' // TODO\n\n    }\n  }),\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      singularGenitive: 'каля {{count}} месяцаў',\n      pluralGenitive: 'каля {{count}} месяцаў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} года',\n      singularGenitive: 'каля {{count}} гадоў',\n      pluralGenitive: 'каля {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} год',\n      singularGenitive: 'прыблізна праз {{count}} гады',\n      pluralGenitive: 'прыблізна праз {{count}} гадоў'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} год',\n      singularGenitive: '{{count}} гады',\n      pluralGenitive: '{{count}} гадоў'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'больш за {{count}} год',\n      singularGenitive: 'больш за {{count}} гады',\n      pluralGenitive: 'больш за {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'больш, чым праз {{count}} год',\n      singularGenitive: 'больш, чым праз {{count}} гады',\n      pluralGenitive: 'больш, чым праз {{count}} гадоў'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'амаль {{count}} год',\n      singularGenitive: 'амаль {{count}} гады',\n      pluralGenitive: 'амаль {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'амаль праз {{count}} год',\n      singularGenitive: 'амаль праз {{count}} гады',\n      pluralGenitive: 'амаль праз {{count}} гадоў'\n    }\n  })\n};\n\nvar formatDistance = function (token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n};\n\nexport default formatDistance;"]},"metadata":{},"sourceType":"module"}