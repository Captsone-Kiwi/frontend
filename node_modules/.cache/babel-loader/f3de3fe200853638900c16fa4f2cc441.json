{"ast":null,"code":"var _jsxFileName = \"/Users/kimchanmi/Capstone-Kiwi/frontend/src/components/InputTextForm/InterviewerInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport * as style from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InterviewerInput(props) {\n  _s();\n\n  const [currViewer, setCurrViewer] = useState(0);\n\n  const interviewerList = (e, index) => {\n    props.setReserveInfo({ ...props.reserveInfo,\n      [e.target.name]: [...props.reserveInfo[e.target.name].slice(0, index), e.target.value, ...props.reserveInfo[e.target.name].slice(index + 1)]\n    });\n    setCurrViewer(index);\n  };\n\n  const addInterviewer = _ref => {\n    let {\n      target\n    } = _ref;\n    const name = target.getAttribute(\"name\");\n    setCurrViewer(currViewer + 1);\n    props.setReserveInfo({ ...props.reserveInfo,\n      [name]: [...props.reserveInfo[name], \"\"]\n    });\n  };\n\n  const removeInterviewer = (e, index) => {\n    const name = e.target.getAttribute(\"name\");\n    console.log(\"받아온 index:\", index);\n    console.log(\"name:\", name);\n\n    if (props.reserveInfo.interviewer.length > 1) {\n      setCurrViewer(currViewer - 1);\n      props.setReserveInfo({ ...props.reserveInfo,\n        [name]: [...props.reserveInfo[name].filter((value, idx) => {\n          console.log(\"array:\", props.reserveInfo.interviewer);\n          return idx !== index;\n        })]\n      });\n    } else {\n      alert(\"더이상 삭제할 수 없습니다.\");\n    }\n  };\n\n  const [, updateState] = useState();\n  const forceUpdate = useCallback(() => updateState({}), []);\n  useEffect(() => {\n    const input = document.querySelector(`.viewer-input${props.index}`);\n    input.value = props.reserveInfo.interviewer[props.index]; // const currInput = document.querySelector(`.viewer-input${currViewer}`);\n    // currInput.focus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(style.inputBox, {\n    children: [/*#__PURE__*/_jsxDEV(style.interviewerList, {\n      name: \"interviewer\",\n      className: \"viewer-input\" + props.index,\n      onChange: e => {\n        interviewerList(e, props.index);\n      },\n      InputProps: {\n        disableUnderline: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(style.removeBtn, {\n      name: \"interviewer\",\n      onClick: e => {\n        removeInterviewer(e, props.index);\n        console.log(\"index:\", props.index);\n        forceUpdate();\n      },\n      children: /*#__PURE__*/_jsxDEV(style.removeImg, {\n        name: \"interviewer\",\n        src: \"/images/common/removeBtn.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(style.addBtn, {\n      name: \"interviewer\",\n      onClick: addInterviewer,\n      children: /*#__PURE__*/_jsxDEV(style.addImg, {\n        name: \"interviewer\",\n        src: \"/images/common/addBtn.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InterviewerInput, \"fMPam6GyQsRRadpZKAZkZ5JSUpU=\");\n\n_c = InterviewerInput;\nexport default InterviewerInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterviewerInput\");","map":{"version":3,"sources":["/Users/kimchanmi/Capstone-Kiwi/frontend/src/components/InputTextForm/InterviewerInput.js"],"names":["React","useState","useEffect","useCallback","style","InterviewerInput","props","currViewer","setCurrViewer","interviewerList","e","index","setReserveInfo","reserveInfo","target","name","slice","value","addInterviewer","getAttribute","removeInterviewer","console","log","interviewer","length","filter","idx","alert","updateState","forceUpdate","input","document","querySelector","disableUnderline"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport * as style from \"./styles\";\n\nfunction InterviewerInput(props) {\n  const [currViewer, setCurrViewer] = useState(0);\n  const interviewerList = (e, index) => {\n    props.setReserveInfo({\n      ...props.reserveInfo,\n      [e.target.name]: [\n        ...props.reserveInfo[e.target.name].slice(0, index),\n        e.target.value,\n        ...props.reserveInfo[e.target.name].slice(index + 1),\n      ],\n    });\n    setCurrViewer(index);\n  };\n  const addInterviewer = ({ target }) => {\n    const name = target.getAttribute(\"name\");\n    setCurrViewer(currViewer + 1);\n    props.setReserveInfo({\n      ...props.reserveInfo,\n      [name]: [...props.reserveInfo[name], \"\"],\n    });\n  };\n  const removeInterviewer = (e, index) => {\n    const name = e.target.getAttribute(\"name\");\n    console.log(\"받아온 index:\", index);\n    console.log(\"name:\", name);\n    if (props.reserveInfo.interviewer.length > 1) {\n      setCurrViewer(currViewer - 1);\n      props.setReserveInfo({\n        ...props.reserveInfo,\n        [name]: [\n          ...props.reserveInfo[name].filter((value, idx) => {\n            console.log(\"array:\", props.reserveInfo.interviewer);\n            return idx !== index;\n          }),\n        ],\n      });\n    } else {\n      alert(\"더이상 삭제할 수 없습니다.\");\n    }\n  };\n  const [, updateState] = useState();\n  const forceUpdate = useCallback(() => updateState({}), []);\n\n  useEffect(() => {\n    const input = document.querySelector(`.viewer-input${props.index}`);\n    input.value = props.reserveInfo.interviewer[props.index];\n    // const currInput = document.querySelector(`.viewer-input${currViewer}`);\n    // currInput.focus();\n  }, []);\n\n  return (\n    <style.inputBox>\n      <style.interviewerList\n        name=\"interviewer\"\n        className={\"viewer-input\" + props.index}\n        onChange={(e) => {\n          interviewerList(e, props.index);\n        }}\n        InputProps={{ disableUnderline: true }}\n      />\n      <style.removeBtn\n        name=\"interviewer\"\n        onClick={(e) => {\n          removeInterviewer(e, props.index);\n          console.log(\"index:\", props.index);\n          forceUpdate();\n        }}\n      >\n        <style.removeImg\n          name=\"interviewer\"\n          src=\"/images/common/removeBtn.png\"\n        />\n      </style.removeBtn>\n      <style.addBtn name=\"interviewer\" onClick={addInterviewer}>\n        <style.addImg name=\"interviewer\" src=\"/images/common/addBtn.png\" />\n      </style.addBtn>\n    </style.inputBox>\n  );\n}\n\nexport default InterviewerInput;\n"]},"metadata":{},"sourceType":"module"}